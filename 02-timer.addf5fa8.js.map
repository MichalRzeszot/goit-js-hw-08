{"mappings":"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","sources":["<anon>","src/js/02-timer.js","node_modules/flatpickr/dist/flatpickr.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nvar $309c201b79fabf79$exports = {};\n/* flatpickr v4.6.13, @license MIT */ (function(global, factory) {\n    $309c201b79fabf79$exports = factory();\n})($309c201b79fabf79$exports, function() {\n    \"use strict\";\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */ var __assign = function __assign1() {\n        __assign = Object.assign || function __assign(t) {\n            for(var s, i = 1, n = arguments.length; i < n; i++){\n                s = arguments[i];\n                for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    function __spreadArrays() {\n        for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n        for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n        return r;\n    }\n    var HOOKS = [\n        \"onChange\",\n        \"onClose\",\n        \"onDayCreate\",\n        \"onDestroy\",\n        \"onKeyDown\",\n        \"onMonthChange\",\n        \"onOpen\",\n        \"onParseConfig\",\n        \"onReady\",\n        \"onValueUpdate\",\n        \"onYearChange\",\n        \"onPreCalendarPosition\"\n    ];\n    var defaults = {\n        _disable: [],\n        allowInput: false,\n        allowInvalidPreload: false,\n        altFormat: \"F j, Y\",\n        altInput: false,\n        altInputClass: \"form-control input\",\n        animate: typeof window === \"object\" && window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n        ariaDateFormat: \"F j, Y\",\n        autoFillDefaultTime: true,\n        clickOpens: true,\n        closeOnSelect: true,\n        conjunction: \", \",\n        dateFormat: \"Y-m-d\",\n        defaultHour: 12,\n        defaultMinute: 0,\n        defaultSeconds: 0,\n        disable: [],\n        disableMobile: false,\n        enableSeconds: false,\n        enableTime: false,\n        errorHandler: function errorHandler(err) {\n            return typeof console !== \"undefined\" && console.warn(err);\n        },\n        getWeek: function getWeek(givenDate) {\n            var date = new Date(givenDate.getTime());\n            date.setHours(0, 0, 0, 0);\n            // Thursday in current week decides the year.\n            date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\n            // January 4 is always in week 1.\n            var week1 = new Date(date.getFullYear(), 0, 4);\n            // Adjust to Thursday in week 1 and count number of weeks from date to week1.\n            return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\n        },\n        hourIncrement: 1,\n        ignoredFocusElements: [],\n        inline: false,\n        locale: \"default\",\n        minuteIncrement: 5,\n        mode: \"single\",\n        monthSelectorType: \"dropdown\",\n        nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n        noCalendar: false,\n        now: new Date(),\n        onChange: [],\n        onClose: [],\n        onDayCreate: [],\n        onDestroy: [],\n        onKeyDown: [],\n        onMonthChange: [],\n        onOpen: [],\n        onParseConfig: [],\n        onReady: [],\n        onValueUpdate: [],\n        onYearChange: [],\n        onPreCalendarPosition: [],\n        plugins: [],\n        position: \"auto\",\n        positionElement: undefined,\n        prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n        shorthandCurrentMonth: false,\n        showMonths: 1,\n        static: false,\n        time_24hr: false,\n        weekNumbers: false,\n        wrap: false\n    };\n    var english = {\n        weekdays: {\n            shorthand: [\n                \"Sun\",\n                \"Mon\",\n                \"Tue\",\n                \"Wed\",\n                \"Thu\",\n                \"Fri\",\n                \"Sat\"\n            ],\n            longhand: [\n                \"Sunday\",\n                \"Monday\",\n                \"Tuesday\",\n                \"Wednesday\",\n                \"Thursday\",\n                \"Friday\",\n                \"Saturday\"\n            ]\n        },\n        months: {\n            shorthand: [\n                \"Jan\",\n                \"Feb\",\n                \"Mar\",\n                \"Apr\",\n                \"May\",\n                \"Jun\",\n                \"Jul\",\n                \"Aug\",\n                \"Sep\",\n                \"Oct\",\n                \"Nov\",\n                \"Dec\"\n            ],\n            longhand: [\n                \"January\",\n                \"February\",\n                \"March\",\n                \"April\",\n                \"May\",\n                \"June\",\n                \"July\",\n                \"August\",\n                \"September\",\n                \"October\",\n                \"November\",\n                \"December\"\n            ]\n        },\n        daysInMonth: [\n            31,\n            28,\n            31,\n            30,\n            31,\n            30,\n            31,\n            31,\n            30,\n            31,\n            30,\n            31\n        ],\n        firstDayOfWeek: 0,\n        ordinal: function ordinal(nth) {\n            var s = nth % 100;\n            if (s > 3 && s < 21) return \"th\";\n            switch(s % 10){\n                case 1:\n                    return \"st\";\n                case 2:\n                    return \"nd\";\n                case 3:\n                    return \"rd\";\n                default:\n                    return \"th\";\n            }\n        },\n        rangeSeparator: \" to \",\n        weekAbbreviation: \"Wk\",\n        scrollTitle: \"Scroll to increment\",\n        toggleTitle: \"Click to toggle\",\n        amPM: [\n            \"AM\",\n            \"PM\"\n        ],\n        yearAriaLabel: \"Year\",\n        monthAriaLabel: \"Month\",\n        hourAriaLabel: \"Hour\",\n        minuteAriaLabel: \"Minute\",\n        time_24hr: false\n    };\n    var pad = function pad(number, length) {\n        if (length === void 0) length = 2;\n        return (\"000\" + number).slice(length * -1);\n    };\n    var int = function int(bool) {\n        return bool === true ? 1 : 0;\n    };\n    /* istanbul ignore next */ function debounce(fn, wait) {\n        var t;\n        return function() {\n            var _this = this;\n            var args = arguments;\n            clearTimeout(t);\n            t = setTimeout(function() {\n                return fn.apply(_this, args);\n            }, wait);\n        };\n    }\n    var arrayify = function arrayify(obj) {\n        return obj instanceof Array ? obj : [\n            obj\n        ];\n    };\n    function toggleClass(elem, className, bool) {\n        if (bool === true) return elem.classList.add(className);\n        elem.classList.remove(className);\n    }\n    function createElement(tag, className, content) {\n        var e = window.document.createElement(tag);\n        className = className || \"\";\n        content = content || \"\";\n        e.className = className;\n        if (content !== undefined) e.textContent = content;\n        return e;\n    }\n    function clearNode(node) {\n        while(node.firstChild)node.removeChild(node.firstChild);\n    }\n    function findParent(node, condition) {\n        if (condition(node)) return node;\n        else if (node.parentNode) return findParent(node.parentNode, condition);\n        return undefined; // nothing found\n    }\n    function createNumberInput(inputClassName, opts) {\n        var wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n        if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) numInput.type = \"number\";\n        else {\n            numInput.type = \"text\";\n            numInput.pattern = \"\\\\d*\";\n        }\n        if (opts !== undefined) for(var key in opts)numInput.setAttribute(key, opts[key]);\n        wrapper.appendChild(numInput);\n        wrapper.appendChild(arrowUp);\n        wrapper.appendChild(arrowDown);\n        return wrapper;\n    }\n    function getEventTarget(event) {\n        try {\n            if (typeof event.composedPath === \"function\") {\n                var path = event.composedPath();\n                return path[0];\n            }\n            return event.target;\n        } catch (error) {\n            return event.target;\n        }\n    }\n    var doNothing = function doNothing() {\n        return undefined;\n    };\n    var monthToStr = function monthToStr(monthNumber, shorthand, locale) {\n        return locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\n    };\n    var revFormat = {\n        D: doNothing,\n        F: function F(dateObj, monthName, locale) {\n            dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n        },\n        G: function G(dateObj, hour) {\n            dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n        },\n        H: function H(dateObj, hour) {\n            dateObj.setHours(parseFloat(hour));\n        },\n        J: function J(dateObj, day) {\n            dateObj.setDate(parseFloat(day));\n        },\n        K: function K(dateObj, amPM, locale) {\n            dateObj.setHours(dateObj.getHours() % 12 + 12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n        },\n        M: function M(dateObj, shortMonth, locale) {\n            dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n        },\n        S: function S(dateObj, seconds) {\n            dateObj.setSeconds(parseFloat(seconds));\n        },\n        U: function U(_, unixSeconds) {\n            return new Date(parseFloat(unixSeconds) * 1000);\n        },\n        W: function W(dateObj, weekNum, locale) {\n            var weekNumber = parseInt(weekNum);\n            var date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n            date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n            return date;\n        },\n        Y: function Y(dateObj, year) {\n            dateObj.setFullYear(parseFloat(year));\n        },\n        Z: function Z(_, ISODate) {\n            return new Date(ISODate);\n        },\n        d: function d(dateObj, day) {\n            dateObj.setDate(parseFloat(day));\n        },\n        h: function h(dateObj, hour) {\n            dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n        },\n        i: function i(dateObj, minutes) {\n            dateObj.setMinutes(parseFloat(minutes));\n        },\n        j: function j(dateObj, day) {\n            dateObj.setDate(parseFloat(day));\n        },\n        l: doNothing,\n        m: function m(dateObj, month) {\n            dateObj.setMonth(parseFloat(month) - 1);\n        },\n        n: function n(dateObj, month) {\n            dateObj.setMonth(parseFloat(month) - 1);\n        },\n        s: function s(dateObj, seconds) {\n            dateObj.setSeconds(parseFloat(seconds));\n        },\n        u: function u(_, unixMillSeconds) {\n            return new Date(parseFloat(unixMillSeconds));\n        },\n        w: doNothing,\n        y: function y(dateObj, year) {\n            dateObj.setFullYear(2000 + parseFloat(year));\n        }\n    };\n    var tokenRegex = {\n        D: \"\",\n        F: \"\",\n        G: \"(\\\\d\\\\d|\\\\d)\",\n        H: \"(\\\\d\\\\d|\\\\d)\",\n        J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n        K: \"\",\n        M: \"\",\n        S: \"(\\\\d\\\\d|\\\\d)\",\n        U: \"(.+)\",\n        W: \"(\\\\d\\\\d|\\\\d)\",\n        Y: \"(\\\\d{4})\",\n        Z: \"(.+)\",\n        d: \"(\\\\d\\\\d|\\\\d)\",\n        h: \"(\\\\d\\\\d|\\\\d)\",\n        i: \"(\\\\d\\\\d|\\\\d)\",\n        j: \"(\\\\d\\\\d|\\\\d)\",\n        l: \"\",\n        m: \"(\\\\d\\\\d|\\\\d)\",\n        n: \"(\\\\d\\\\d|\\\\d)\",\n        s: \"(\\\\d\\\\d|\\\\d)\",\n        u: \"(.+)\",\n        w: \"(\\\\d\\\\d|\\\\d)\",\n        y: \"(\\\\d{2})\"\n    };\n    var formats = {\n        // get the date in UTC\n        Z: function Z(date) {\n            return date.toISOString();\n        },\n        // weekday name, short, e.g. Thu\n        D: function D(date, locale, options) {\n            return locale.weekdays.shorthand[formats.w(date, locale, options)];\n        },\n        // full month name e.g. January\n        F: function F(date, locale, options) {\n            return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n        },\n        // padded hour 1-12\n        G: function G(date, locale, options) {\n            return pad(formats.h(date, locale, options));\n        },\n        // hours with leading zero e.g. 03\n        H: function H(date) {\n            return pad(date.getHours());\n        },\n        // day (1-30) with ordinal suffix e.g. 1st, 2nd\n        J: function J(date, locale) {\n            return locale.ordinal !== undefined ? date.getDate() + locale.ordinal(date.getDate()) : date.getDate();\n        },\n        // AM/PM\n        K: function K(date, locale) {\n            return locale.amPM[int(date.getHours() > 11)];\n        },\n        // shorthand month e.g. Jan, Sep, Oct, etc\n        M: function M(date, locale) {\n            return monthToStr(date.getMonth(), true, locale);\n        },\n        // seconds 00-59\n        S: function S(date) {\n            return pad(date.getSeconds());\n        },\n        // unix timestamp\n        U: function U(date) {\n            return date.getTime() / 1000;\n        },\n        W: function W(date, _, options) {\n            return options.getWeek(date);\n        },\n        // full year e.g. 2016, padded (0001-9999)\n        Y: function Y(date) {\n            return pad(date.getFullYear(), 4);\n        },\n        // day in month, padded (01-30)\n        d: function d(date) {\n            return pad(date.getDate());\n        },\n        // hour from 1-12 (am/pm)\n        h: function h(date) {\n            return date.getHours() % 12 ? date.getHours() % 12 : 12;\n        },\n        // minutes, padded with leading zero e.g. 09\n        i: function i(date) {\n            return pad(date.getMinutes());\n        },\n        // day in month (1-30)\n        j: function j(date) {\n            return date.getDate();\n        },\n        // weekday name, full, e.g. Thursday\n        l: function l(date, locale) {\n            return locale.weekdays.longhand[date.getDay()];\n        },\n        // padded month number (01-12)\n        m: function m(date) {\n            return pad(date.getMonth() + 1);\n        },\n        // the month number (1-12)\n        n: function n(date) {\n            return date.getMonth() + 1;\n        },\n        // seconds 0-59\n        s: function s(date) {\n            return date.getSeconds();\n        },\n        // Unix Milliseconds\n        u: function u(date) {\n            return date.getTime();\n        },\n        // number of the day of the week\n        w: function w(date) {\n            return date.getDay();\n        },\n        // last two digits of year e.g. 16 for 2016\n        y: function y(date) {\n            return String(date.getFullYear()).substring(2);\n        }\n    };\n    var createDateFormatter = function createDateFormatter(_a) {\n        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c, _d = _a.isMobile, isMobile = _d === void 0 ? false : _d;\n        return function(dateObj, frmt, overrideLocale) {\n            var locale = overrideLocale || l10n;\n            if (config.formatDate !== undefined && !isMobile) return config.formatDate(dateObj, frmt, locale);\n            return frmt.split(\"\").map(function(c, i, arr) {\n                return formats[c] && arr[i - 1] !== \"\\\\\" ? formats[c](dateObj, locale, config) : c !== \"\\\\\" ? c : \"\";\n            }).join(\"\");\n        };\n    };\n    var createDateParser = function createDateParser(_a) {\n        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;\n        return function(date, givenFormat, timeless, customLocale) {\n            if (date !== 0 && !date) return undefined;\n            var locale = customLocale || l10n;\n            var parsedDate;\n            var dateOrig = date;\n            if (date instanceof Date) parsedDate = new Date(date.getTime());\n            else if (typeof date !== \"string\" && date.toFixed !== undefined // timestamp\n            ) // create a copy\n            parsedDate = new Date(date);\n            else if (typeof date === \"string\") {\n                // date string\n                var format = givenFormat || (config || defaults).dateFormat;\n                var datestr = String(date).trim();\n                if (datestr === \"today\") {\n                    parsedDate = new Date();\n                    timeless = true;\n                } else if (config && config.parseDate) parsedDate = config.parseDate(date, format);\n                else if (/Z$/.test(datestr) || /GMT$/.test(datestr) // datestrings w/ timezone\n                ) parsedDate = new Date(date);\n                else {\n                    var matched = void 0, ops = [];\n                    for(var i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++){\n                        var token_1 = format[i];\n                        var isBackSlash = token_1 === \"\\\\\";\n                        var escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n                        if (tokenRegex[token_1] && !escaped) {\n                            regexStr += tokenRegex[token_1];\n                            var match = new RegExp(regexStr).exec(date);\n                            if (match && (matched = true)) ops[token_1 !== \"Y\" ? \"push\" : \"unshift\"]({\n                                fn: revFormat[token_1],\n                                val: match[++matchIndex]\n                            });\n                        } else if (!isBackSlash) regexStr += \".\"; // don't really care\n                    }\n                    parsedDate = !config || !config.noCalendar ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0) : new Date(new Date().setHours(0, 0, 0, 0));\n                    ops.forEach(function(_a) {\n                        var fn = _a.fn, val = _a.val;\n                        return parsedDate = fn(parsedDate, val, locale) || parsedDate;\n                    });\n                    parsedDate = matched ? parsedDate : undefined;\n                }\n            }\n            /* istanbul ignore next */ if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n                config.errorHandler(new Error(\"Invalid date provided: \" + dateOrig));\n                return undefined;\n            }\n            if (timeless === true) parsedDate.setHours(0, 0, 0, 0);\n            return parsedDate;\n        };\n    };\n    /**\n     * Compute the difference in dates, measured in ms\n     */ function compareDates(date1, date2, timeless) {\n        if (timeless === void 0) timeless = true;\n        if (timeless !== false) return new Date(date1.getTime()).setHours(0, 0, 0, 0) - new Date(date2.getTime()).setHours(0, 0, 0, 0);\n        return date1.getTime() - date2.getTime();\n    }\n    var isBetween = function isBetween(ts, ts1, ts2) {\n        return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n    };\n    var calculateSecondsSinceMidnight = function calculateSecondsSinceMidnight(hours, minutes, seconds) {\n        return hours * 3600 + minutes * 60 + seconds;\n    };\n    var parseSeconds = function parseSeconds(secondsSinceMidnight) {\n        var hours = Math.floor(secondsSinceMidnight / 3600), minutes = (secondsSinceMidnight - hours * 3600) / 60;\n        return [\n            hours,\n            minutes,\n            secondsSinceMidnight - hours * 3600 - minutes * 60\n        ];\n    };\n    var duration = {\n        DAY: 86400000\n    };\n    function getDefaultHours(config) {\n        var hours = config.defaultHour;\n        var minutes = config.defaultMinute;\n        var seconds = config.defaultSeconds;\n        if (config.minDate !== undefined) {\n            var minHour = config.minDate.getHours();\n            var minMinutes = config.minDate.getMinutes();\n            var minSeconds = config.minDate.getSeconds();\n            if (hours < minHour) hours = minHour;\n            if (hours === minHour && minutes < minMinutes) minutes = minMinutes;\n            if (hours === minHour && minutes === minMinutes && seconds < minSeconds) seconds = config.minDate.getSeconds();\n        }\n        if (config.maxDate !== undefined) {\n            var maxHr = config.maxDate.getHours();\n            var maxMinutes = config.maxDate.getMinutes();\n            hours = Math.min(hours, maxHr);\n            if (hours === maxHr) minutes = Math.min(maxMinutes, minutes);\n            if (hours === maxHr && minutes === maxMinutes) seconds = config.maxDate.getSeconds();\n        }\n        return {\n            hours: hours,\n            minutes: minutes,\n            seconds: seconds\n        };\n    }\n    if (typeof Object.assign !== \"function\") Object.assign = function(target) {\n        var args = [];\n        for(var _i = 1; _i < arguments.length; _i++)args[_i - 1] = arguments[_i];\n        if (!target) throw TypeError(\"Cannot convert undefined or null to object\");\n        var _loop_1 = function _loop_1(source) {\n            if (source) Object.keys(source).forEach(function(key) {\n                return target[key] = source[key];\n            });\n        };\n        for(var _a = 0, args_1 = args; _a < args_1.length; _a++){\n            var source = args_1[_a];\n            _loop_1(source);\n        }\n        return target;\n    };\n    var DEBOUNCED_CHANGE_MS = 300;\n    function FlatpickrInstance(element, instanceConfig) {\n        var self = {\n            config: __assign(__assign({}, defaults), flatpickr.defaultConfig),\n            l10n: english\n        };\n        self.parseDate = createDateParser({\n            config: self.config,\n            l10n: self.l10n\n        });\n        self._handlers = [];\n        self.pluginElements = [];\n        self.loadedPlugins = [];\n        self._bind = bind;\n        self._setHoursFromDate = setHoursFromDate;\n        self._positionCalendar = positionCalendar;\n        self.changeMonth = changeMonth;\n        self.changeYear = changeYear;\n        self.clear = clear;\n        self.close = close;\n        self.onMouseOver = onMouseOver;\n        self._createElement = createElement;\n        self.createDay = createDay;\n        self.destroy = destroy;\n        self.isEnabled = isEnabled;\n        self.jumpToDate = jumpToDate;\n        self.updateValue = updateValue;\n        self.open = open;\n        self.redraw = redraw;\n        self.set = set;\n        self.setDate = setDate;\n        self.toggle = toggle;\n        function setupHelperFunctions() {\n            self.utils = {\n                getDaysInMonth: function getDaysInMonth(month, yr) {\n                    if (month === void 0) month = self.currentMonth;\n                    if (yr === void 0) yr = self.currentYear;\n                    if (month === 1 && (yr % 4 === 0 && yr % 100 !== 0 || yr % 400 === 0)) return 29;\n                    return self.l10n.daysInMonth[month];\n                }\n            };\n        }\n        function init() {\n            self.element = self.input = element;\n            self.isOpen = false;\n            parseConfig();\n            setupLocale();\n            setupInputs();\n            setupDates();\n            setupHelperFunctions();\n            if (!self.isMobile) build();\n            bindEvents();\n            if (self.selectedDates.length || self.config.noCalendar) {\n                if (self.config.enableTime) setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);\n                updateValue(false);\n            }\n            setCalendarWidth();\n            var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n            /* TODO: investigate this further\n        \n              Currently, there is weird positioning behavior in safari causing pages\n              to scroll up. https://github.com/chmln/flatpickr/issues/563\n        \n              However, most browsers are not Safari and positioning is expensive when used\n              in scale. https://github.com/chmln/flatpickr/issues/1096\n            */ if (!self.isMobile && isSafari) positionCalendar();\n            triggerEvent(\"onReady\");\n        }\n        function getClosestActiveElement() {\n            var _a;\n            return ((_a = self.calendarContainer) === null || _a === void 0 ? void 0 : _a.getRootNode()).activeElement || document.activeElement;\n        }\n        function bindToInstance(fn) {\n            return fn.bind(self);\n        }\n        function setCalendarWidth() {\n            var config = self.config;\n            if (config.weekNumbers === false && config.showMonths === 1) return;\n            else if (config.noCalendar !== true) window.requestAnimationFrame(function() {\n                if (self.calendarContainer !== undefined) {\n                    self.calendarContainer.style.visibility = \"hidden\";\n                    self.calendarContainer.style.display = \"block\";\n                }\n                if (self.daysContainer !== undefined) {\n                    var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n                    self.daysContainer.style.width = daysWidth + \"px\";\n                    self.calendarContainer.style.width = daysWidth + (self.weekWrapper !== undefined ? self.weekWrapper.offsetWidth : 0) + \"px\";\n                    self.calendarContainer.style.removeProperty(\"visibility\");\n                    self.calendarContainer.style.removeProperty(\"display\");\n                }\n            });\n        }\n        /**\n         * The handler for all events targeting the time inputs\n         */ function updateTime(e) {\n            if (self.selectedDates.length === 0) {\n                var defaultDate = self.config.minDate === undefined || compareDates(new Date(), self.config.minDate) >= 0 ? new Date() : new Date(self.config.minDate.getTime());\n                var defaults = getDefaultHours(self.config);\n                defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());\n                self.selectedDates = [\n                    defaultDate\n                ];\n                self.latestSelectedDateObj = defaultDate;\n            }\n            if (e !== undefined && e.type !== \"blur\") timeWrapper(e);\n            var prevValue = self._input.value;\n            setHoursFromInputs();\n            updateValue();\n            if (self._input.value !== prevValue) self._debouncedChange();\n        }\n        function ampm2military(hour, amPM) {\n            return hour % 12 + 12 * int(amPM === self.l10n.amPM[1]);\n        }\n        function military2ampm(hour) {\n            switch(hour % 24){\n                case 0:\n                case 12:\n                    return 12;\n                default:\n                    return hour % 12;\n            }\n        }\n        /**\n         * Syncs the selected date object time with user's time input\n         */ function setHoursFromInputs() {\n            if (self.hourElement === undefined || self.minuteElement === undefined) return;\n            var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined ? (parseInt(self.secondElement.value, 10) || 0) % 60 : 0;\n            if (self.amPM !== undefined) hours = ampm2military(hours, self.amPM.textContent);\n            var limitMinHours = self.config.minTime !== undefined || self.config.minDate && self.minDateHasTime && self.latestSelectedDateObj && compareDates(self.latestSelectedDateObj, self.config.minDate, true) === 0;\n            var limitMaxHours = self.config.maxTime !== undefined || self.config.maxDate && self.maxDateHasTime && self.latestSelectedDateObj && compareDates(self.latestSelectedDateObj, self.config.maxDate, true) === 0;\n            if (self.config.maxTime !== undefined && self.config.minTime !== undefined && self.config.minTime > self.config.maxTime) {\n                var minBound = calculateSecondsSinceMidnight(self.config.minTime.getHours(), self.config.minTime.getMinutes(), self.config.minTime.getSeconds());\n                var maxBound = calculateSecondsSinceMidnight(self.config.maxTime.getHours(), self.config.maxTime.getMinutes(), self.config.maxTime.getSeconds());\n                var currentTime = calculateSecondsSinceMidnight(hours, minutes, seconds);\n                if (currentTime > maxBound && currentTime < minBound) {\n                    var result = parseSeconds(minBound);\n                    hours = result[0];\n                    minutes = result[1];\n                    seconds = result[2];\n                }\n            } else {\n                if (limitMaxHours) {\n                    var maxTime = self.config.maxTime !== undefined ? self.config.maxTime : self.config.maxDate;\n                    hours = Math.min(hours, maxTime.getHours());\n                    if (hours === maxTime.getHours()) minutes = Math.min(minutes, maxTime.getMinutes());\n                    if (minutes === maxTime.getMinutes()) seconds = Math.min(seconds, maxTime.getSeconds());\n                }\n                if (limitMinHours) {\n                    var minTime = self.config.minTime !== undefined ? self.config.minTime : self.config.minDate;\n                    hours = Math.max(hours, minTime.getHours());\n                    if (hours === minTime.getHours() && minutes < minTime.getMinutes()) minutes = minTime.getMinutes();\n                    if (minutes === minTime.getMinutes()) seconds = Math.max(seconds, minTime.getSeconds());\n                }\n            }\n            setHours(hours, minutes, seconds);\n        }\n        /**\n         * Syncs time input values with a date\n         */ function setHoursFromDate(dateObj) {\n            var date = dateObj || self.latestSelectedDateObj;\n            if (date && date instanceof Date) setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n        }\n        /**\n         * Sets the hours, minutes, and optionally seconds\n         * of the latest selected date object and the\n         * corresponding time inputs\n         * @param {Number} hours the hour. whether its military\n         *                 or am-pm gets inferred from config\n         * @param {Number} minutes the minutes\n         * @param {Number} seconds the seconds (optional)\n         */ function setHours(hours, minutes, seconds) {\n            if (self.latestSelectedDateObj !== undefined) self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n            if (!self.hourElement || !self.minuteElement || self.isMobile) return;\n            self.hourElement.value = pad(!self.config.time_24hr ? (12 + hours) % 12 + 12 * int(hours % 12 === 0) : hours);\n            self.minuteElement.value = pad(minutes);\n            if (self.amPM !== undefined) self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n            if (self.secondElement !== undefined) self.secondElement.value = pad(seconds);\n        }\n        /**\n         * Handles the year input and incrementing events\n         * @param {Event} event the keyup or increment event\n         */ function onYearInput(event) {\n            var eventTarget = getEventTarget(event);\n            var year = parseInt(eventTarget.value) + (event.delta || 0);\n            if (year / 1000 > 1 || event.key === \"Enter\" && !/[^\\d]/.test(year.toString())) changeYear(year);\n        }\n        /**\n         * Essentially addEventListener + tracking\n         * @param {Element} element the element to addEventListener to\n         * @param {String} event the event name\n         * @param {Function} handler the event handler\n         */ function bind(element, event, handler, options) {\n            if (event instanceof Array) return event.forEach(function(ev) {\n                return bind(element, ev, handler, options);\n            });\n            if (element instanceof Array) return element.forEach(function(el) {\n                return bind(el, event, handler, options);\n            });\n            element.addEventListener(event, handler, options);\n            self._handlers.push({\n                remove: function remove() {\n                    return element.removeEventListener(event, handler, options);\n                }\n            });\n        }\n        function triggerChange() {\n            triggerEvent(\"onChange\");\n        }\n        /**\n         * Adds all the necessary event listeners\n         */ function bindEvents() {\n            if (self.config.wrap) [\n                \"open\",\n                \"close\",\n                \"toggle\",\n                \"clear\"\n            ].forEach(function(evt) {\n                Array.prototype.forEach.call(self.element.querySelectorAll(\"[data-\" + evt + \"]\"), function(el) {\n                    return bind(el, \"click\", self[evt]);\n                });\n            });\n            if (self.isMobile) {\n                setupMobile();\n                return;\n            }\n            var debouncedResize = debounce(onResize, 50);\n            self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n            if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent)) bind(self.daysContainer, \"mouseover\", function(e) {\n                if (self.config.mode === \"range\") onMouseOver(getEventTarget(e));\n            });\n            bind(self._input, \"keydown\", onKeyDown);\n            if (self.calendarContainer !== undefined) bind(self.calendarContainer, \"keydown\", onKeyDown);\n            if (!self.config.inline && !self.config.static) bind(window, \"resize\", debouncedResize);\n            if (window.ontouchstart !== undefined) bind(window.document, \"touchstart\", documentClick);\n            else bind(window.document, \"mousedown\", documentClick);\n            bind(window.document, \"focus\", documentClick, {\n                capture: true\n            });\n            if (self.config.clickOpens === true) {\n                bind(self._input, \"focus\", self.open);\n                bind(self._input, \"click\", self.open);\n            }\n            if (self.daysContainer !== undefined) {\n                bind(self.monthNav, \"click\", onMonthNavClick);\n                bind(self.monthNav, [\n                    \"keyup\",\n                    \"increment\"\n                ], onYearInput);\n                bind(self.daysContainer, \"click\", selectDate);\n            }\n            if (self.timeContainer !== undefined && self.minuteElement !== undefined && self.hourElement !== undefined) {\n                var selText = function selText(e) {\n                    return getEventTarget(e).select();\n                };\n                bind(self.timeContainer, [\n                    \"increment\"\n                ], updateTime);\n                bind(self.timeContainer, \"blur\", updateTime, {\n                    capture: true\n                });\n                bind(self.timeContainer, \"click\", timeIncrement);\n                bind([\n                    self.hourElement,\n                    self.minuteElement\n                ], [\n                    \"focus\",\n                    \"click\"\n                ], selText);\n                if (self.secondElement !== undefined) bind(self.secondElement, \"focus\", function() {\n                    return self.secondElement && self.secondElement.select();\n                });\n                if (self.amPM !== undefined) bind(self.amPM, \"click\", function(e) {\n                    updateTime(e);\n                });\n            }\n            if (self.config.allowInput) bind(self._input, \"blur\", onBlur);\n        }\n        /**\n         * Set the calendar view to a particular date.\n         * @param {Date} jumpDate the date to set the view to\n         * @param {boolean} triggerChange if change events should be triggered\n         */ function jumpToDate(jumpDate, triggerChange) {\n            var jumpTo = jumpDate !== undefined ? self.parseDate(jumpDate) : self.latestSelectedDateObj || (self.config.minDate && self.config.minDate > self.now ? self.config.minDate : self.config.maxDate && self.config.maxDate < self.now ? self.config.maxDate : self.now);\n            var oldYear = self.currentYear;\n            var oldMonth = self.currentMonth;\n            try {\n                if (jumpTo !== undefined) {\n                    self.currentYear = jumpTo.getFullYear();\n                    self.currentMonth = jumpTo.getMonth();\n                }\n            } catch (e) {\n                /* istanbul ignore next */ e.message = \"Invalid date supplied: \" + jumpTo;\n                self.config.errorHandler(e);\n            }\n            if (triggerChange && self.currentYear !== oldYear) {\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n            if (triggerChange && (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) triggerEvent(\"onMonthChange\");\n            self.redraw();\n        }\n        /**\n         * The up/down arrow handler for time inputs\n         * @param {Event} e the click event\n         */ function timeIncrement(e) {\n            var eventTarget = getEventTarget(e);\n            if (~eventTarget.className.indexOf(\"arrow\")) incrementNumInput(e, eventTarget.classList.contains(\"arrowUp\") ? 1 : -1);\n        }\n        /**\n         * Increments/decrements the value of input associ-\n         * ated with the up/down arrow by dispatching an\n         * \"increment\" event on the input.\n         *\n         * @param {Event} e the click event\n         * @param {Number} delta the diff (usually 1 or -1)\n         * @param {Element} inputElem the input element\n         */ function incrementNumInput(e, delta, inputElem) {\n            var target = e && getEventTarget(e);\n            var input = inputElem || target && target.parentNode && target.parentNode.firstChild;\n            var event = createEvent(\"increment\");\n            event.delta = delta;\n            input && input.dispatchEvent(event);\n        }\n        function build() {\n            var fragment = window.document.createDocumentFragment();\n            self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n            self.calendarContainer.tabIndex = -1;\n            if (!self.config.noCalendar) {\n                fragment.appendChild(buildMonthNav());\n                self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n                if (self.config.weekNumbers) {\n                    var _a = buildWeeks(), weekWrapper = _a.weekWrapper, weekNumbers = _a.weekNumbers;\n                    self.innerContainer.appendChild(weekWrapper);\n                    self.weekNumbers = weekNumbers;\n                    self.weekWrapper = weekWrapper;\n                }\n                self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n                self.rContainer.appendChild(buildWeekdays());\n                if (!self.daysContainer) {\n                    self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n                    self.daysContainer.tabIndex = -1;\n                }\n                buildDays();\n                self.rContainer.appendChild(self.daysContainer);\n                self.innerContainer.appendChild(self.rContainer);\n                fragment.appendChild(self.innerContainer);\n            }\n            if (self.config.enableTime) fragment.appendChild(buildTime());\n            toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n            toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n            toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n            self.calendarContainer.appendChild(fragment);\n            var customAppend = self.config.appendTo !== undefined && self.config.appendTo.nodeType !== undefined;\n            if (self.config.inline || self.config.static) {\n                self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n                if (self.config.inline) {\n                    if (!customAppend && self.element.parentNode) self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\n                    else if (self.config.appendTo !== undefined) self.config.appendTo.appendChild(self.calendarContainer);\n                }\n                if (self.config.static) {\n                    var wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n                    if (self.element.parentNode) self.element.parentNode.insertBefore(wrapper, self.element);\n                    wrapper.appendChild(self.element);\n                    if (self.altInput) wrapper.appendChild(self.altInput);\n                    wrapper.appendChild(self.calendarContainer);\n                }\n            }\n            if (!self.config.static && !self.config.inline) (self.config.appendTo !== undefined ? self.config.appendTo : window.document.body).appendChild(self.calendarContainer);\n        }\n        function createDay(className, date, _dayNumber, i) {\n            var dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", className, date.getDate().toString());\n            dayElement.dateObj = date;\n            dayElement.$i = i;\n            dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n            if (className.indexOf(\"hidden\") === -1 && compareDates(date, self.now) === 0) {\n                self.todayDateElem = dayElement;\n                dayElement.classList.add(\"today\");\n                dayElement.setAttribute(\"aria-current\", \"date\");\n            }\n            if (dateIsEnabled) {\n                dayElement.tabIndex = -1;\n                if (isDateSelected(date)) {\n                    dayElement.classList.add(\"selected\");\n                    self.selectedDateElem = dayElement;\n                    if (self.config.mode === \"range\") {\n                        toggleClass(dayElement, \"startRange\", self.selectedDates[0] && compareDates(date, self.selectedDates[0], true) === 0);\n                        toggleClass(dayElement, \"endRange\", self.selectedDates[1] && compareDates(date, self.selectedDates[1], true) === 0);\n                        if (className === \"nextMonthDay\") dayElement.classList.add(\"inRange\");\n                    }\n                }\n            } else dayElement.classList.add(\"flatpickr-disabled\");\n            if (self.config.mode === \"range\") {\n                if (isDateInRange(date) && !isDateSelected(date)) dayElement.classList.add(\"inRange\");\n            }\n            if (self.weekNumbers && self.config.showMonths === 1 && className !== \"prevMonthDay\" && i % 7 === 6) self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n            triggerEvent(\"onDayCreate\", dayElement);\n            return dayElement;\n        }\n        function focusOnDayElem(targetNode) {\n            targetNode.focus();\n            if (self.config.mode === \"range\") onMouseOver(targetNode);\n        }\n        function getFirstAvailableDay(delta) {\n            var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n            var endMonth = delta > 0 ? self.config.showMonths : -1;\n            for(var m = startMonth; m != endMonth; m += delta){\n                var month = self.daysContainer.children[m];\n                var startIndex = delta > 0 ? 0 : month.children.length - 1;\n                var endIndex = delta > 0 ? month.children.length : -1;\n                for(var i = startIndex; i != endIndex; i += delta){\n                    var c = month.children[i];\n                    if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj)) return c;\n                }\n            }\n            return undefined;\n        }\n        function getNextAvailableDay(current, delta) {\n            var givenMonth = current.className.indexOf(\"Month\") === -1 ? current.dateObj.getMonth() : self.currentMonth;\n            var endMonth = delta > 0 ? self.config.showMonths : -1;\n            var loopDelta = delta > 0 ? 1 : -1;\n            for(var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta){\n                var month = self.daysContainer.children[m];\n                var startIndex = givenMonth - self.currentMonth === m ? current.$i + delta : delta < 0 ? month.children.length - 1 : 0;\n                var numMonthDays = month.children.length;\n                for(var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta){\n                    var c = month.children[i];\n                    if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj) && Math.abs(current.$i - i) >= Math.abs(delta)) return focusOnDayElem(c);\n                }\n            }\n            self.changeMonth(loopDelta);\n            focusOnDay(getFirstAvailableDay(loopDelta), 0);\n            return undefined;\n        }\n        function focusOnDay(current, offset) {\n            var activeElement = getClosestActiveElement();\n            var dayFocused = isInView(activeElement || document.body);\n            var startElem = current !== undefined ? current : dayFocused ? activeElement : self.selectedDateElem !== undefined && isInView(self.selectedDateElem) ? self.selectedDateElem : self.todayDateElem !== undefined && isInView(self.todayDateElem) ? self.todayDateElem : getFirstAvailableDay(offset > 0 ? 1 : -1);\n            if (startElem === undefined) self._input.focus();\n            else if (!dayFocused) focusOnDayElem(startElem);\n            else getNextAvailableDay(startElem, offset);\n        }\n        function buildMonthDays(year, month) {\n            var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n            var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);\n            var daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\", nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n            var dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\n            // prepend days from the ending of previous month\n            for(; dayNumber <= prevMonthDays; dayNumber++, dayIndex++)days.appendChild(createDay(\"flatpickr-day \" + prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n            // Start at 1 since there is no 0th day\n            for(dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++)days.appendChild(createDay(\"flatpickr-day\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n            // append days from the next month\n            for(var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth && (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++)days.appendChild(createDay(\"flatpickr-day \" + nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n            //updateNavigationCurrentMonth();\n            var dayContainer = createElement(\"div\", \"dayContainer\");\n            dayContainer.appendChild(days);\n            return dayContainer;\n        }\n        function buildDays() {\n            if (self.daysContainer === undefined) return;\n            clearNode(self.daysContainer);\n            // TODO: week numbers for each month\n            if (self.weekNumbers) clearNode(self.weekNumbers);\n            var frag = document.createDocumentFragment();\n            for(var i = 0; i < self.config.showMonths; i++){\n                var d = new Date(self.currentYear, self.currentMonth, 1);\n                d.setMonth(self.currentMonth + i);\n                frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n            }\n            self.daysContainer.appendChild(frag);\n            self.days = self.daysContainer.firstChild;\n            if (self.config.mode === \"range\" && self.selectedDates.length === 1) onMouseOver();\n        }\n        function buildMonthSwitch() {\n            if (self.config.showMonths > 1 || self.config.monthSelectorType !== \"dropdown\") return;\n            var shouldBuildMonth = function shouldBuildMonth(month) {\n                if (self.config.minDate !== undefined && self.currentYear === self.config.minDate.getFullYear() && month < self.config.minDate.getMonth()) return false;\n                return !(self.config.maxDate !== undefined && self.currentYear === self.config.maxDate.getFullYear() && month > self.config.maxDate.getMonth());\n            };\n            self.monthsDropdownContainer.tabIndex = -1;\n            self.monthsDropdownContainer.innerHTML = \"\";\n            for(var i = 0; i < 12; i++){\n                if (!shouldBuildMonth(i)) continue;\n                var month = createElement(\"option\", \"flatpickr-monthDropdown-month\");\n                month.value = new Date(self.currentYear, i).getMonth().toString();\n                month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);\n                month.tabIndex = -1;\n                if (self.currentMonth === i) month.selected = true;\n                self.monthsDropdownContainer.appendChild(month);\n            }\n        }\n        function buildMonth() {\n            var container = createElement(\"div\", \"flatpickr-month\");\n            var monthNavFragment = window.document.createDocumentFragment();\n            var monthElement;\n            if (self.config.showMonths > 1 || self.config.monthSelectorType === \"static\") monthElement = createElement(\"span\", \"cur-month\");\n            else {\n                self.monthsDropdownContainer = createElement(\"select\", \"flatpickr-monthDropdown-months\");\n                self.monthsDropdownContainer.setAttribute(\"aria-label\", self.l10n.monthAriaLabel);\n                bind(self.monthsDropdownContainer, \"change\", function(e) {\n                    var target = getEventTarget(e);\n                    var selectedMonth = parseInt(target.value, 10);\n                    self.changeMonth(selectedMonth - self.currentMonth);\n                    triggerEvent(\"onMonthChange\");\n                });\n                buildMonthSwitch();\n                monthElement = self.monthsDropdownContainer;\n            }\n            var yearInput = createNumberInput(\"cur-year\", {\n                tabindex: \"-1\"\n            });\n            var yearElement = yearInput.getElementsByTagName(\"input\")[0];\n            yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n            if (self.config.minDate) yearElement.setAttribute(\"min\", self.config.minDate.getFullYear().toString());\n            if (self.config.maxDate) {\n                yearElement.setAttribute(\"max\", self.config.maxDate.getFullYear().toString());\n                yearElement.disabled = !!self.config.minDate && self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n            }\n            var currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n            currentMonth.appendChild(monthElement);\n            currentMonth.appendChild(yearInput);\n            monthNavFragment.appendChild(currentMonth);\n            container.appendChild(monthNavFragment);\n            return {\n                container: container,\n                yearElement: yearElement,\n                monthElement: monthElement\n            };\n        }\n        function buildMonths() {\n            clearNode(self.monthNav);\n            self.monthNav.appendChild(self.prevMonthNav);\n            if (self.config.showMonths) {\n                self.yearElements = [];\n                self.monthElements = [];\n            }\n            for(var m = self.config.showMonths; m--;){\n                var month = buildMonth();\n                self.yearElements.push(month.yearElement);\n                self.monthElements.push(month.monthElement);\n                self.monthNav.appendChild(month.container);\n            }\n            self.monthNav.appendChild(self.nextMonthNav);\n        }\n        function buildMonthNav() {\n            self.monthNav = createElement(\"div\", \"flatpickr-months\");\n            self.yearElements = [];\n            self.monthElements = [];\n            self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n            self.prevMonthNav.innerHTML = self.config.prevArrow;\n            self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n            self.nextMonthNav.innerHTML = self.config.nextArrow;\n            buildMonths();\n            Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n                get: function get() {\n                    return self.__hidePrevMonthArrow;\n                },\n                set: function set(bool) {\n                    if (self.__hidePrevMonthArrow !== bool) {\n                        toggleClass(self.prevMonthNav, \"flatpickr-disabled\", bool);\n                        self.__hidePrevMonthArrow = bool;\n                    }\n                }\n            });\n            Object.defineProperty(self, \"_hideNextMonthArrow\", {\n                get: function get() {\n                    return self.__hideNextMonthArrow;\n                },\n                set: function set(bool) {\n                    if (self.__hideNextMonthArrow !== bool) {\n                        toggleClass(self.nextMonthNav, \"flatpickr-disabled\", bool);\n                        self.__hideNextMonthArrow = bool;\n                    }\n                }\n            });\n            self.currentYearElement = self.yearElements[0];\n            updateNavigationCurrentMonth();\n            return self.monthNav;\n        }\n        function buildTime() {\n            self.calendarContainer.classList.add(\"hasTime\");\n            if (self.config.noCalendar) self.calendarContainer.classList.add(\"noCalendar\");\n            var defaults = getDefaultHours(self.config);\n            self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n            self.timeContainer.tabIndex = -1;\n            var separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n            var hourInput = createNumberInput(\"flatpickr-hour\", {\n                \"aria-label\": self.l10n.hourAriaLabel\n            });\n            self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n            var minuteInput = createNumberInput(\"flatpickr-minute\", {\n                \"aria-label\": self.l10n.minuteAriaLabel\n            });\n            self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n            self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n            self.hourElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getHours() : self.config.time_24hr ? defaults.hours : military2ampm(defaults.hours));\n            self.minuteElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getMinutes() : defaults.minutes);\n            self.hourElement.setAttribute(\"step\", self.config.hourIncrement.toString());\n            self.minuteElement.setAttribute(\"step\", self.config.minuteIncrement.toString());\n            self.hourElement.setAttribute(\"min\", self.config.time_24hr ? \"0\" : \"1\");\n            self.hourElement.setAttribute(\"max\", self.config.time_24hr ? \"23\" : \"12\");\n            self.hourElement.setAttribute(\"maxlength\", \"2\");\n            self.minuteElement.setAttribute(\"min\", \"0\");\n            self.minuteElement.setAttribute(\"max\", \"59\");\n            self.minuteElement.setAttribute(\"maxlength\", \"2\");\n            self.timeContainer.appendChild(hourInput);\n            self.timeContainer.appendChild(separator);\n            self.timeContainer.appendChild(minuteInput);\n            if (self.config.time_24hr) self.timeContainer.classList.add(\"time24hr\");\n            if (self.config.enableSeconds) {\n                self.timeContainer.classList.add(\"hasSeconds\");\n                var secondInput = createNumberInput(\"flatpickr-second\");\n                self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n                self.secondElement.value = pad(self.latestSelectedDateObj ? self.latestSelectedDateObj.getSeconds() : defaults.seconds);\n                self.secondElement.setAttribute(\"step\", self.minuteElement.getAttribute(\"step\"));\n                self.secondElement.setAttribute(\"min\", \"0\");\n                self.secondElement.setAttribute(\"max\", \"59\");\n                self.secondElement.setAttribute(\"maxlength\", \"2\");\n                self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n                self.timeContainer.appendChild(secondInput);\n            }\n            if (!self.config.time_24hr) {\n                // add self.amPM if appropriate\n                self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj ? self.hourElement.value : self.config.defaultHour) > 11)]);\n                self.amPM.title = self.l10n.toggleTitle;\n                self.amPM.tabIndex = -1;\n                self.timeContainer.appendChild(self.amPM);\n            }\n            return self.timeContainer;\n        }\n        function buildWeekdays() {\n            if (!self.weekdayContainer) self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\n            else clearNode(self.weekdayContainer);\n            for(var i = self.config.showMonths; i--;){\n                var container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n                self.weekdayContainer.appendChild(container);\n            }\n            updateWeekdays();\n            return self.weekdayContainer;\n        }\n        function updateWeekdays() {\n            if (!self.weekdayContainer) return;\n            var firstDayOfWeek = self.l10n.firstDayOfWeek;\n            var weekdays = __spreadArrays(self.l10n.weekdays.shorthand);\n            if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) weekdays = __spreadArrays(weekdays.splice(firstDayOfWeek, weekdays.length), weekdays.splice(0, firstDayOfWeek));\n            for(var i = self.config.showMonths; i--;)self.weekdayContainer.children[i].innerHTML = \"\\n      <span class='flatpickr-weekday'>\\n        \" + weekdays.join(\"</span><span class='flatpickr-weekday'>\") + \"\\n      </span>\\n      \";\n        }\n        /* istanbul ignore next */ function buildWeeks() {\n            self.calendarContainer.classList.add(\"hasWeeks\");\n            var weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n            weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n            var weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n            weekWrapper.appendChild(weekNumbers);\n            return {\n                weekWrapper: weekWrapper,\n                weekNumbers: weekNumbers\n            };\n        }\n        function changeMonth(value, isOffset) {\n            if (isOffset === void 0) isOffset = true;\n            var delta = isOffset ? value : value - self.currentMonth;\n            if (delta < 0 && self._hidePrevMonthArrow === true || delta > 0 && self._hideNextMonthArrow === true) return;\n            self.currentMonth += delta;\n            if (self.currentMonth < 0 || self.currentMonth > 11) {\n                self.currentYear += self.currentMonth > 11 ? 1 : -1;\n                self.currentMonth = (self.currentMonth + 12) % 12;\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n            buildDays();\n            triggerEvent(\"onMonthChange\");\n            updateNavigationCurrentMonth();\n        }\n        function clear(triggerChangeEvent, toInitial) {\n            if (triggerChangeEvent === void 0) triggerChangeEvent = true;\n            if (toInitial === void 0) toInitial = true;\n            self.input.value = \"\";\n            if (self.altInput !== undefined) self.altInput.value = \"\";\n            if (self.mobileInput !== undefined) self.mobileInput.value = \"\";\n            self.selectedDates = [];\n            self.latestSelectedDateObj = undefined;\n            if (toInitial === true) {\n                self.currentYear = self._initialDate.getFullYear();\n                self.currentMonth = self._initialDate.getMonth();\n            }\n            if (self.config.enableTime === true) {\n                var _a = getDefaultHours(self.config), hours = _a.hours, minutes = _a.minutes, seconds = _a.seconds;\n                setHours(hours, minutes, seconds);\n            }\n            self.redraw();\n            if (triggerChangeEvent) // triggerChangeEvent is true (default) or an Event\n            triggerEvent(\"onChange\");\n        }\n        function close() {\n            self.isOpen = false;\n            if (!self.isMobile) {\n                if (self.calendarContainer !== undefined) self.calendarContainer.classList.remove(\"open\");\n                if (self._input !== undefined) self._input.classList.remove(\"active\");\n            }\n            triggerEvent(\"onClose\");\n        }\n        function destroy() {\n            if (self.config !== undefined) triggerEvent(\"onDestroy\");\n            for(var i = self._handlers.length; i--;)self._handlers[i].remove();\n            self._handlers = [];\n            if (self.mobileInput) {\n                if (self.mobileInput.parentNode) self.mobileInput.parentNode.removeChild(self.mobileInput);\n                self.mobileInput = undefined;\n            } else if (self.calendarContainer && self.calendarContainer.parentNode) {\n                if (self.config.static && self.calendarContainer.parentNode) {\n                    var wrapper = self.calendarContainer.parentNode;\n                    wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n                    if (wrapper.parentNode) {\n                        while(wrapper.firstChild)wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n                        wrapper.parentNode.removeChild(wrapper);\n                    }\n                } else self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n            }\n            if (self.altInput) {\n                self.input.type = \"text\";\n                if (self.altInput.parentNode) self.altInput.parentNode.removeChild(self.altInput);\n                delete self.altInput;\n            }\n            if (self.input) {\n                self.input.type = self.input._type;\n                self.input.classList.remove(\"flatpickr-input\");\n                self.input.removeAttribute(\"readonly\");\n            }\n            [\n                \"_showTimeInput\",\n                \"latestSelectedDateObj\",\n                \"_hideNextMonthArrow\",\n                \"_hidePrevMonthArrow\",\n                \"__hideNextMonthArrow\",\n                \"__hidePrevMonthArrow\",\n                \"isMobile\",\n                \"isOpen\",\n                \"selectedDateElem\",\n                \"minDateHasTime\",\n                \"maxDateHasTime\",\n                \"days\",\n                \"daysContainer\",\n                \"_input\",\n                \"_positionElement\",\n                \"innerContainer\",\n                \"rContainer\",\n                \"monthNav\",\n                \"todayDateElem\",\n                \"calendarContainer\",\n                \"weekdayContainer\",\n                \"prevMonthNav\",\n                \"nextMonthNav\",\n                \"monthsDropdownContainer\",\n                \"currentMonthElement\",\n                \"currentYearElement\",\n                \"navigationCurrentMonth\",\n                \"selectedDateElem\",\n                \"config\"\n            ].forEach(function(k) {\n                try {\n                    delete self[k];\n                } catch (_) {}\n            });\n        }\n        function isCalendarElem(elem) {\n            return self.calendarContainer.contains(elem);\n        }\n        function documentClick(e) {\n            if (self.isOpen && !self.config.inline) {\n                var eventTarget_1 = getEventTarget(e);\n                var isCalendarElement = isCalendarElem(eventTarget_1);\n                var isInput = eventTarget_1 === self.input || eventTarget_1 === self.altInput || self.element.contains(eventTarget_1) || // web components\n                // e.path is not present in all browsers. circumventing typechecks\n                e.path && e.path.indexOf && (~e.path.indexOf(self.input) || ~e.path.indexOf(self.altInput));\n                var lostFocus = !isInput && !isCalendarElement && !isCalendarElem(e.relatedTarget);\n                var isIgnored = !self.config.ignoredFocusElements.some(function(elem) {\n                    return elem.contains(eventTarget_1);\n                });\n                if (lostFocus && isIgnored) {\n                    if (self.config.allowInput) self.setDate(self._input.value, false, self.config.altInput ? self.config.altFormat : self.config.dateFormat);\n                    if (self.timeContainer !== undefined && self.minuteElement !== undefined && self.hourElement !== undefined && self.input.value !== \"\" && self.input.value !== undefined) updateTime();\n                    self.close();\n                    if (self.config && self.config.mode === \"range\" && self.selectedDates.length === 1) self.clear(false);\n                }\n            }\n        }\n        function changeYear(newYear) {\n            if (!newYear || self.config.minDate && newYear < self.config.minDate.getFullYear() || self.config.maxDate && newYear > self.config.maxDate.getFullYear()) return;\n            var newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\n            self.currentYear = newYearNum || self.currentYear;\n            if (self.config.maxDate && self.currentYear === self.config.maxDate.getFullYear()) self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n            else if (self.config.minDate && self.currentYear === self.config.minDate.getFullYear()) self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n            if (isNewYear) {\n                self.redraw();\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n        }\n        function isEnabled(date, timeless) {\n            var _a;\n            if (timeless === void 0) timeless = true;\n            var dateToCheck = self.parseDate(date, undefined, timeless); // timeless\n            if (self.config.minDate && dateToCheck && compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0 || self.config.maxDate && dateToCheck && compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0) return false;\n            if (!self.config.enable && self.config.disable.length === 0) return true;\n            if (dateToCheck === undefined) return false;\n            var bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;\n            for(var i = 0, d = void 0; i < array.length; i++){\n                d = array[i];\n                if (typeof d === \"function\" && d(dateToCheck) // disabled by function\n                ) return bool;\n                else if (d instanceof Date && dateToCheck !== undefined && d.getTime() === dateToCheck.getTime()) // disabled by date\n                return bool;\n                else if (typeof d === \"string\") {\n                    // disabled by date string\n                    var parsed = self.parseDate(d, undefined, true);\n                    return parsed && parsed.getTime() === dateToCheck.getTime() ? bool : !bool;\n                } else if (// disabled by range\n                typeof d === \"object\" && dateToCheck !== undefined && d.from && d.to && dateToCheck.getTime() >= d.from.getTime() && dateToCheck.getTime() <= d.to.getTime()) return bool;\n            }\n            return !bool;\n        }\n        function isInView(elem) {\n            if (self.daysContainer !== undefined) return elem.className.indexOf(\"hidden\") === -1 && elem.className.indexOf(\"flatpickr-disabled\") === -1 && self.daysContainer.contains(elem);\n            return false;\n        }\n        function onBlur(e) {\n            var isInput = e.target === self._input;\n            var valueChanged = self._input.value.trimEnd() !== getDateStr();\n            if (isInput && valueChanged && !(e.relatedTarget && isCalendarElem(e.relatedTarget))) self.setDate(self._input.value, true, e.target === self.altInput ? self.config.altFormat : self.config.dateFormat);\n        }\n        function onKeyDown(e) {\n            // e.key                      e.keyCode\n            // \"Backspace\"                        8\n            // \"Tab\"                              9\n            // \"Enter\"                           13\n            // \"Escape\"     (IE \"Esc\")           27\n            // \"ArrowLeft\"  (IE \"Left\")          37\n            // \"ArrowUp\"    (IE \"Up\")            38\n            // \"ArrowRight\" (IE \"Right\")         39\n            // \"ArrowDown\"  (IE \"Down\")          40\n            // \"Delete\"     (IE \"Del\")           46\n            var eventTarget = getEventTarget(e);\n            var isInput = self.config.wrap ? element.contains(eventTarget) : eventTarget === self._input;\n            var allowInput = self.config.allowInput;\n            var allowKeydown = self.isOpen && (!allowInput || !isInput);\n            var allowInlineKeydown = self.config.inline && isInput && !allowInput;\n            if (e.keyCode === 13 && isInput) {\n                if (allowInput) {\n                    self.setDate(self._input.value, true, eventTarget === self.altInput ? self.config.altFormat : self.config.dateFormat);\n                    self.close();\n                    return eventTarget.blur();\n                } else self.open();\n            } else if (isCalendarElem(eventTarget) || allowKeydown || allowInlineKeydown) {\n                var isTimeObj = !!self.timeContainer && self.timeContainer.contains(eventTarget);\n                switch(e.keyCode){\n                    case 13:\n                        if (isTimeObj) {\n                            e.preventDefault();\n                            updateTime();\n                            focusAndClose();\n                        } else selectDate(e);\n                        break;\n                    case 27:\n                        e.preventDefault();\n                        focusAndClose();\n                        break;\n                    case 8:\n                    case 46:\n                        if (isInput && !self.config.allowInput) {\n                            e.preventDefault();\n                            self.clear();\n                        }\n                        break;\n                    case 37:\n                    case 39:\n                        if (!isTimeObj && !isInput) {\n                            e.preventDefault();\n                            var activeElement = getClosestActiveElement();\n                            if (self.daysContainer !== undefined && (allowInput === false || activeElement && isInView(activeElement))) {\n                                var delta_1 = e.keyCode === 39 ? 1 : -1;\n                                if (!e.ctrlKey) focusOnDay(undefined, delta_1);\n                                else {\n                                    e.stopPropagation();\n                                    changeMonth(delta_1);\n                                    focusOnDay(getFirstAvailableDay(1), 0);\n                                }\n                            }\n                        } else if (self.hourElement) self.hourElement.focus();\n                        break;\n                    case 38:\n                    case 40:\n                        e.preventDefault();\n                        var delta = e.keyCode === 40 ? 1 : -1;\n                        if (self.daysContainer && eventTarget.$i !== undefined || eventTarget === self.input || eventTarget === self.altInput) {\n                            if (e.ctrlKey) {\n                                e.stopPropagation();\n                                changeYear(self.currentYear - delta);\n                                focusOnDay(getFirstAvailableDay(1), 0);\n                            } else if (!isTimeObj) focusOnDay(undefined, delta * 7);\n                        } else if (eventTarget === self.currentYearElement) changeYear(self.currentYear - delta);\n                        else if (self.config.enableTime) {\n                            if (!isTimeObj && self.hourElement) self.hourElement.focus();\n                            updateTime(e);\n                            self._debouncedChange();\n                        }\n                        break;\n                    case 9:\n                        if (isTimeObj) {\n                            var elems = [\n                                self.hourElement,\n                                self.minuteElement,\n                                self.secondElement,\n                                self.amPM\n                            ].concat(self.pluginElements).filter(function(x) {\n                                return x;\n                            });\n                            var i = elems.indexOf(eventTarget);\n                            if (i !== -1) {\n                                var target = elems[i + (e.shiftKey ? -1 : 1)];\n                                e.preventDefault();\n                                (target || self._input).focus();\n                            }\n                        } else if (!self.config.noCalendar && self.daysContainer && self.daysContainer.contains(eventTarget) && e.shiftKey) {\n                            e.preventDefault();\n                            self._input.focus();\n                        }\n                        break;\n                }\n            }\n            if (self.amPM !== undefined && eventTarget === self.amPM) switch(e.key){\n                case self.l10n.amPM[0].charAt(0):\n                case self.l10n.amPM[0].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[0];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n                case self.l10n.amPM[1].charAt(0):\n                case self.l10n.amPM[1].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[1];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n            }\n            if (isInput || isCalendarElem(eventTarget)) triggerEvent(\"onKeyDown\", e);\n        }\n        function onMouseOver(elem, cellClass) {\n            if (cellClass === void 0) cellClass = \"flatpickr-day\";\n            if (self.selectedDates.length !== 1 || elem && (!elem.classList.contains(cellClass) || elem.classList.contains(\"flatpickr-disabled\"))) return;\n            var hoverDate = elem ? elem.dateObj.getTime() : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());\n            var containsDisabled = false;\n            var minRange = 0, maxRange = 0;\n            for(var t = rangeStartDate; t < rangeEndDate; t += duration.DAY)if (!isEnabled(new Date(t), true)) {\n                containsDisabled = containsDisabled || t > rangeStartDate && t < rangeEndDate;\n                if (t < initialDate && (!minRange || t > minRange)) minRange = t;\n                else if (t > initialDate && (!maxRange || t < maxRange)) maxRange = t;\n            }\n            var hoverableCells = Array.from(self.rContainer.querySelectorAll(\"*:nth-child(-n+\" + self.config.showMonths + \") > .\" + cellClass));\n            hoverableCells.forEach(function(dayElem) {\n                var date = dayElem.dateObj;\n                var timestamp = date.getTime();\n                var outOfRange = minRange > 0 && timestamp < minRange || maxRange > 0 && timestamp > maxRange;\n                if (outOfRange) {\n                    dayElem.classList.add(\"notAllowed\");\n                    [\n                        \"inRange\",\n                        \"startRange\",\n                        \"endRange\"\n                    ].forEach(function(c) {\n                        dayElem.classList.remove(c);\n                    });\n                    return;\n                } else if (containsDisabled && !outOfRange) return;\n                [\n                    \"startRange\",\n                    \"inRange\",\n                    \"endRange\",\n                    \"notAllowed\"\n                ].forEach(function(c) {\n                    dayElem.classList.remove(c);\n                });\n                if (elem !== undefined) {\n                    elem.classList.add(hoverDate <= self.selectedDates[0].getTime() ? \"startRange\" : \"endRange\");\n                    if (initialDate < hoverDate && timestamp === initialDate) dayElem.classList.add(\"startRange\");\n                    else if (initialDate > hoverDate && timestamp === initialDate) dayElem.classList.add(\"endRange\");\n                    if (timestamp >= minRange && (maxRange === 0 || timestamp <= maxRange) && isBetween(timestamp, initialDate, hoverDate)) dayElem.classList.add(\"inRange\");\n                }\n            });\n        }\n        function onResize() {\n            if (self.isOpen && !self.config.static && !self.config.inline) positionCalendar();\n        }\n        function open(e, positionElement) {\n            if (positionElement === void 0) positionElement = self._positionElement;\n            if (self.isMobile === true) {\n                if (e) {\n                    e.preventDefault();\n                    var eventTarget = getEventTarget(e);\n                    if (eventTarget) eventTarget.blur();\n                }\n                if (self.mobileInput !== undefined) {\n                    self.mobileInput.focus();\n                    self.mobileInput.click();\n                }\n                triggerEvent(\"onOpen\");\n                return;\n            } else if (self._input.disabled || self.config.inline) return;\n            var wasOpen = self.isOpen;\n            self.isOpen = true;\n            if (!wasOpen) {\n                self.calendarContainer.classList.add(\"open\");\n                self._input.classList.add(\"active\");\n                triggerEvent(\"onOpen\");\n                positionCalendar(positionElement);\n            }\n            if (self.config.enableTime === true && self.config.noCalendar === true) {\n                if (self.config.allowInput === false && (e === undefined || !self.timeContainer.contains(e.relatedTarget))) setTimeout(function() {\n                    return self.hourElement.select();\n                }, 50);\n            }\n        }\n        function minMaxDateSetter(type) {\n            return function(date) {\n                var dateObj = self.config[\"_\" + type + \"Date\"] = self.parseDate(date, self.config.dateFormat);\n                var inverseDateObj = self.config[\"_\" + (type === \"min\" ? \"max\" : \"min\") + \"Date\"];\n                if (dateObj !== undefined) self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] = dateObj.getHours() > 0 || dateObj.getMinutes() > 0 || dateObj.getSeconds() > 0;\n                if (self.selectedDates) {\n                    self.selectedDates = self.selectedDates.filter(function(d) {\n                        return isEnabled(d);\n                    });\n                    if (!self.selectedDates.length && type === \"min\") setHoursFromDate(dateObj);\n                    updateValue();\n                }\n                if (self.daysContainer) {\n                    redraw();\n                    if (dateObj !== undefined) self.currentYearElement[type] = dateObj.getFullYear().toString();\n                    else self.currentYearElement.removeAttribute(type);\n                    self.currentYearElement.disabled = !!inverseDateObj && dateObj !== undefined && inverseDateObj.getFullYear() === dateObj.getFullYear();\n                }\n            };\n        }\n        function parseConfig() {\n            var boolOpts = [\n                \"wrap\",\n                \"weekNumbers\",\n                \"allowInput\",\n                \"allowInvalidPreload\",\n                \"clickOpens\",\n                \"time_24hr\",\n                \"enableTime\",\n                \"noCalendar\",\n                \"altInput\",\n                \"shorthandCurrentMonth\",\n                \"inline\",\n                \"static\",\n                \"enableSeconds\",\n                \"disableMobile\"\n            ];\n            var userConfig = __assign(__assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);\n            var formats = {};\n            self.config.parseDate = userConfig.parseDate;\n            self.config.formatDate = userConfig.formatDate;\n            Object.defineProperty(self.config, \"enable\", {\n                get: function get() {\n                    return self.config._enable;\n                },\n                set: function set(dates) {\n                    self.config._enable = parseDateRules(dates);\n                }\n            });\n            Object.defineProperty(self.config, \"disable\", {\n                get: function get() {\n                    return self.config._disable;\n                },\n                set: function set(dates) {\n                    self.config._disable = parseDateRules(dates);\n                }\n            });\n            var timeMode = userConfig.mode === \"time\";\n            if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n                var defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaults.dateFormat;\n                formats.dateFormat = userConfig.noCalendar || timeMode ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\") : defaultDateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n            }\n            if (userConfig.altInput && (userConfig.enableTime || timeMode) && !userConfig.altFormat) {\n                var defaultAltFormat = flatpickr.defaultConfig.altFormat || defaults.altFormat;\n                formats.altFormat = userConfig.noCalendar || timeMode ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\") : defaultAltFormat + (\" h:i\" + (userConfig.enableSeconds ? \":S\" : \"\") + \" K\");\n            }\n            Object.defineProperty(self.config, \"minDate\", {\n                get: function get() {\n                    return self.config._minDate;\n                },\n                set: minMaxDateSetter(\"min\")\n            });\n            Object.defineProperty(self.config, \"maxDate\", {\n                get: function get() {\n                    return self.config._maxDate;\n                },\n                set: minMaxDateSetter(\"max\")\n            });\n            var minMaxTimeSetter = function minMaxTimeSetter(type) {\n                return function(val) {\n                    self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i:S\");\n                };\n            };\n            Object.defineProperty(self.config, \"minTime\", {\n                get: function get() {\n                    return self.config._minTime;\n                },\n                set: minMaxTimeSetter(\"min\")\n            });\n            Object.defineProperty(self.config, \"maxTime\", {\n                get: function get() {\n                    return self.config._maxTime;\n                },\n                set: minMaxTimeSetter(\"max\")\n            });\n            if (userConfig.mode === \"time\") {\n                self.config.noCalendar = true;\n                self.config.enableTime = true;\n            }\n            Object.assign(self.config, formats, userConfig);\n            for(var i = 0; i < boolOpts.length; i++)// https://github.com/microsoft/TypeScript/issues/31663\n            self.config[boolOpts[i]] = self.config[boolOpts[i]] === true || self.config[boolOpts[i]] === \"true\";\n            HOOKS.filter(function(hook) {\n                return self.config[hook] !== undefined;\n            }).forEach(function(hook) {\n                self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n            });\n            self.isMobile = !self.config.disableMobile && !self.config.inline && self.config.mode === \"single\" && !self.config.disable.length && !self.config.enable && !self.config.weekNumbers && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n            for(var i = 0; i < self.config.plugins.length; i++){\n                var pluginConf = self.config.plugins[i](self) || {};\n                for(var key in pluginConf){\n                    if (HOOKS.indexOf(key) > -1) self.config[key] = arrayify(pluginConf[key]).map(bindToInstance).concat(self.config[key]);\n                    else if (typeof userConfig[key] === \"undefined\") self.config[key] = pluginConf[key];\n                }\n            }\n            if (!userConfig.altInputClass) self.config.altInputClass = getInputElem().className + \" \" + self.config.altInputClass;\n            triggerEvent(\"onParseConfig\");\n        }\n        function getInputElem() {\n            return self.config.wrap ? element.querySelector(\"[data-input]\") : element;\n        }\n        function setupLocale() {\n            if (typeof self.config.locale !== \"object\" && typeof flatpickr.l10ns[self.config.locale] === \"undefined\") self.config.errorHandler(new Error(\"flatpickr: invalid locale \" + self.config.locale));\n            self.l10n = __assign(__assign({}, flatpickr.l10ns.default), typeof self.config.locale === \"object\" ? self.config.locale : self.config.locale !== \"default\" ? flatpickr.l10ns[self.config.locale] : undefined);\n            tokenRegex.D = \"(\" + self.l10n.weekdays.shorthand.join(\"|\") + \")\";\n            tokenRegex.l = \"(\" + self.l10n.weekdays.longhand.join(\"|\") + \")\";\n            tokenRegex.M = \"(\" + self.l10n.months.shorthand.join(\"|\") + \")\";\n            tokenRegex.F = \"(\" + self.l10n.months.longhand.join(\"|\") + \")\";\n            tokenRegex.K = \"(\" + self.l10n.amPM[0] + \"|\" + self.l10n.amPM[1] + \"|\" + self.l10n.amPM[0].toLowerCase() + \"|\" + self.l10n.amPM[1].toLowerCase() + \")\";\n            var userConfig = __assign(__assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));\n            if (userConfig.time_24hr === undefined && flatpickr.defaultConfig.time_24hr === undefined) self.config.time_24hr = self.l10n.time_24hr;\n            self.formatDate = createDateFormatter(self);\n            self.parseDate = createDateParser({\n                config: self.config,\n                l10n: self.l10n\n            });\n        }\n        function positionCalendar(customPositionElement) {\n            if (typeof self.config.position === \"function\") return void self.config.position(self, customPositionElement);\n            if (self.calendarContainer === undefined) return;\n            triggerEvent(\"onPreCalendarPosition\");\n            var positionElement = customPositionElement || self._positionElement;\n            var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, function(acc, child) {\n                return acc + child.offsetHeight;\n            }, 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(\" \"), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === \"above\" || configPosVertical !== \"below\" && distanceFromBottom < calendarHeight && inputBounds.top > calendarHeight;\n            var top = window.pageYOffset + inputBounds.top + (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n            toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n            toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n            if (self.config.inline) return;\n            var left = window.pageXOffset + inputBounds.left;\n            var isCenter = false;\n            var isRight = false;\n            if (configPosHorizontal === \"center\") {\n                left -= (calendarWidth - inputBounds.width) / 2;\n                isCenter = true;\n            } else if (configPosHorizontal === \"right\") {\n                left -= calendarWidth - inputBounds.width;\n                isRight = true;\n            }\n            toggleClass(self.calendarContainer, \"arrowLeft\", !isCenter && !isRight);\n            toggleClass(self.calendarContainer, \"arrowCenter\", isCenter);\n            toggleClass(self.calendarContainer, \"arrowRight\", isRight);\n            var right = window.document.body.offsetWidth - (window.pageXOffset + inputBounds.right);\n            var rightMost = left + calendarWidth > window.document.body.offsetWidth;\n            var centerMost = right + calendarWidth > window.document.body.offsetWidth;\n            toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n            if (self.config.static) return;\n            self.calendarContainer.style.top = top + \"px\";\n            if (!rightMost) {\n                self.calendarContainer.style.left = left + \"px\";\n                self.calendarContainer.style.right = \"auto\";\n            } else if (!centerMost) {\n                self.calendarContainer.style.left = \"auto\";\n                self.calendarContainer.style.right = right + \"px\";\n            } else {\n                var doc = getDocumentStyleSheet();\n                // some testing environments don't have css support\n                if (doc === undefined) return;\n                var bodyWidth = window.document.body.offsetWidth;\n                var centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);\n                var centerBefore = \".flatpickr-calendar.centerMost:before\";\n                var centerAfter = \".flatpickr-calendar.centerMost:after\";\n                var centerIndex = doc.cssRules.length;\n                var centerStyle = \"{left:\" + inputBounds.left + \"px;right:auto;}\";\n                toggleClass(self.calendarContainer, \"rightMost\", false);\n                toggleClass(self.calendarContainer, \"centerMost\", true);\n                doc.insertRule(centerBefore + \",\" + centerAfter + centerStyle, centerIndex);\n                self.calendarContainer.style.left = centerLeft + \"px\";\n                self.calendarContainer.style.right = \"auto\";\n            }\n        }\n        function getDocumentStyleSheet() {\n            var editableSheet = null;\n            for(var i = 0; i < document.styleSheets.length; i++){\n                var sheet = document.styleSheets[i];\n                if (!sheet.cssRules) continue;\n                try {\n                    sheet.cssRules;\n                } catch (err) {\n                    continue;\n                }\n                editableSheet = sheet;\n                break;\n            }\n            return editableSheet != null ? editableSheet : createStyleSheet();\n        }\n        function createStyleSheet() {\n            var style = document.createElement(\"style\");\n            document.head.appendChild(style);\n            return style.sheet;\n        }\n        function redraw() {\n            if (self.config.noCalendar || self.isMobile) return;\n            buildMonthSwitch();\n            updateNavigationCurrentMonth();\n            buildDays();\n        }\n        function focusAndClose() {\n            self._input.focus();\n            if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 || navigator.msMaxTouchPoints !== undefined) // hack - bugs in the way IE handles focus keeps the calendar open\n            setTimeout(self.close, 0);\n            else self.close();\n        }\n        function selectDate(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var isSelectable = function isSelectable(day) {\n                return day.classList && day.classList.contains(\"flatpickr-day\") && !day.classList.contains(\"flatpickr-disabled\") && !day.classList.contains(\"notAllowed\");\n            };\n            var t = findParent(getEventTarget(e), isSelectable);\n            if (t === undefined) return;\n            var target = t;\n            var selectedDate = self.latestSelectedDateObj = new Date(target.dateObj.getTime());\n            var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth || selectedDate.getMonth() > self.currentMonth + self.config.showMonths - 1) && self.config.mode !== \"range\";\n            self.selectedDateElem = target;\n            if (self.config.mode === \"single\") self.selectedDates = [\n                selectedDate\n            ];\n            else if (self.config.mode === \"multiple\") {\n                var selectedIndex = isDateSelected(selectedDate);\n                if (selectedIndex) self.selectedDates.splice(parseInt(selectedIndex), 1);\n                else self.selectedDates.push(selectedDate);\n            } else if (self.config.mode === \"range\") {\n                if (self.selectedDates.length === 2) self.clear(false, false);\n                self.latestSelectedDateObj = selectedDate;\n                self.selectedDates.push(selectedDate);\n                // unless selecting same date twice, sort ascendingly\n                if (compareDates(selectedDate, self.selectedDates[0], true) !== 0) self.selectedDates.sort(function(a, b) {\n                    return a.getTime() - b.getTime();\n                });\n            }\n            setHoursFromInputs();\n            if (shouldChangeMonth) {\n                var isNewYear = self.currentYear !== selectedDate.getFullYear();\n                self.currentYear = selectedDate.getFullYear();\n                self.currentMonth = selectedDate.getMonth();\n                if (isNewYear) {\n                    triggerEvent(\"onYearChange\");\n                    buildMonthSwitch();\n                }\n                triggerEvent(\"onMonthChange\");\n            }\n            updateNavigationCurrentMonth();\n            buildDays();\n            updateValue();\n            // maintain focus\n            if (!shouldChangeMonth && self.config.mode !== \"range\" && self.config.showMonths === 1) focusOnDayElem(target);\n            else if (self.selectedDateElem !== undefined && self.hourElement === undefined) self.selectedDateElem && self.selectedDateElem.focus();\n            if (self.hourElement !== undefined) self.hourElement !== undefined && self.hourElement.focus();\n            if (self.config.closeOnSelect) {\n                var single = self.config.mode === \"single\" && !self.config.enableTime;\n                var range = self.config.mode === \"range\" && self.selectedDates.length === 2 && !self.config.enableTime;\n                if (single || range) focusAndClose();\n            }\n            triggerChange();\n        }\n        var CALLBACKS = {\n            locale: [\n                setupLocale,\n                updateWeekdays\n            ],\n            showMonths: [\n                buildMonths,\n                setCalendarWidth,\n                buildWeekdays\n            ],\n            minDate: [\n                jumpToDate\n            ],\n            maxDate: [\n                jumpToDate\n            ],\n            positionElement: [\n                updatePositionElement\n            ],\n            clickOpens: [\n                function() {\n                    if (self.config.clickOpens === true) {\n                        bind(self._input, \"focus\", self.open);\n                        bind(self._input, \"click\", self.open);\n                    } else {\n                        self._input.removeEventListener(\"focus\", self.open);\n                        self._input.removeEventListener(\"click\", self.open);\n                    }\n                }\n            ]\n        };\n        function set(option, value) {\n            if (option !== null && typeof option === \"object\") {\n                Object.assign(self.config, option);\n                for(var key in option)if (CALLBACKS[key] !== undefined) CALLBACKS[key].forEach(function(x) {\n                    return x();\n                });\n            } else {\n                self.config[option] = value;\n                if (CALLBACKS[option] !== undefined) CALLBACKS[option].forEach(function(x) {\n                    return x();\n                });\n                else if (HOOKS.indexOf(option) > -1) self.config[option] = arrayify(value);\n            }\n            self.redraw();\n            updateValue(true);\n        }\n        function setSelectedDate(inputDate, format) {\n            var dates = [];\n            if (inputDate instanceof Array) dates = inputDate.map(function(d) {\n                return self.parseDate(d, format);\n            });\n            else if (inputDate instanceof Date || typeof inputDate === \"number\") dates = [\n                self.parseDate(inputDate, format)\n            ];\n            else if (typeof inputDate === \"string\") switch(self.config.mode){\n                case \"single\":\n                case \"time\":\n                    dates = [\n                        self.parseDate(inputDate, format)\n                    ];\n                    break;\n                case \"multiple\":\n                    dates = inputDate.split(self.config.conjunction).map(function(date) {\n                        return self.parseDate(date, format);\n                    });\n                    break;\n                case \"range\":\n                    dates = inputDate.split(self.l10n.rangeSeparator).map(function(date) {\n                        return self.parseDate(date, format);\n                    });\n                    break;\n            }\n            else self.config.errorHandler(new Error(\"Invalid date supplied: \" + JSON.stringify(inputDate)));\n            self.selectedDates = self.config.allowInvalidPreload ? dates : dates.filter(function(d) {\n                return d instanceof Date && isEnabled(d, false);\n            });\n            if (self.config.mode === \"range\") self.selectedDates.sort(function(a, b) {\n                return a.getTime() - b.getTime();\n            });\n        }\n        function setDate(date, triggerChange, format) {\n            if (triggerChange === void 0) triggerChange = false;\n            if (format === void 0) format = self.config.dateFormat;\n            if (date !== 0 && !date || date instanceof Array && date.length === 0) return self.clear(triggerChange);\n            setSelectedDate(date, format);\n            self.latestSelectedDateObj = self.selectedDates[self.selectedDates.length - 1];\n            self.redraw();\n            jumpToDate(undefined, triggerChange);\n            setHoursFromDate();\n            if (self.selectedDates.length === 0) self.clear(false);\n            updateValue(triggerChange);\n            if (triggerChange) triggerEvent(\"onChange\");\n        }\n        function parseDateRules(arr) {\n            return arr.slice().map(function(rule) {\n                if (typeof rule === \"string\" || typeof rule === \"number\" || rule instanceof Date) return self.parseDate(rule, undefined, true);\n                else if (rule && typeof rule === \"object\" && rule.from && rule.to) return {\n                    from: self.parseDate(rule.from, undefined),\n                    to: self.parseDate(rule.to, undefined)\n                };\n                return rule;\n            }).filter(function(x) {\n                return x;\n            }); // remove falsy values\n        }\n        function setupDates() {\n            self.selectedDates = [];\n            self.now = self.parseDate(self.config.now) || new Date();\n            // Workaround IE11 setting placeholder as the input's value\n            var preloadedDate = self.config.defaultDate || ((self.input.nodeName === \"INPUT\" || self.input.nodeName === \"TEXTAREA\") && self.input.placeholder && self.input.value === self.input.placeholder ? null : self.input.value);\n            if (preloadedDate) setSelectedDate(preloadedDate, self.config.dateFormat);\n            self._initialDate = self.selectedDates.length > 0 ? self.selectedDates[0] : self.config.minDate && self.config.minDate.getTime() > self.now.getTime() ? self.config.minDate : self.config.maxDate && self.config.maxDate.getTime() < self.now.getTime() ? self.config.maxDate : self.now;\n            self.currentYear = self._initialDate.getFullYear();\n            self.currentMonth = self._initialDate.getMonth();\n            if (self.selectedDates.length > 0) self.latestSelectedDateObj = self.selectedDates[0];\n            if (self.config.minTime !== undefined) self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n            if (self.config.maxTime !== undefined) self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n            self.minDateHasTime = !!self.config.minDate && (self.config.minDate.getHours() > 0 || self.config.minDate.getMinutes() > 0 || self.config.minDate.getSeconds() > 0);\n            self.maxDateHasTime = !!self.config.maxDate && (self.config.maxDate.getHours() > 0 || self.config.maxDate.getMinutes() > 0 || self.config.maxDate.getSeconds() > 0);\n        }\n        function setupInputs() {\n            self.input = getInputElem();\n            /* istanbul ignore next */ if (!self.input) {\n                self.config.errorHandler(new Error(\"Invalid input element specified\"));\n                return;\n            }\n            // hack: store previous type to restore it after destroy()\n            self.input._type = self.input.type;\n            self.input.type = \"text\";\n            self.input.classList.add(\"flatpickr-input\");\n            self._input = self.input;\n            if (self.config.altInput) {\n                // replicate self.element\n                self.altInput = createElement(self.input.nodeName, self.config.altInputClass);\n                self._input = self.altInput;\n                self.altInput.placeholder = self.input.placeholder;\n                self.altInput.disabled = self.input.disabled;\n                self.altInput.required = self.input.required;\n                self.altInput.tabIndex = self.input.tabIndex;\n                self.altInput.type = \"text\";\n                self.input.setAttribute(\"type\", \"hidden\");\n                if (!self.config.static && self.input.parentNode) self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n            }\n            if (!self.config.allowInput) self._input.setAttribute(\"readonly\", \"readonly\");\n            updatePositionElement();\n        }\n        function updatePositionElement() {\n            self._positionElement = self.config.positionElement || self._input;\n        }\n        function setupMobile() {\n            var inputType = self.config.enableTime ? self.config.noCalendar ? \"time\" : \"datetime-local\" : \"date\";\n            self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n            self.mobileInput.tabIndex = 1;\n            self.mobileInput.type = inputType;\n            self.mobileInput.disabled = self.input.disabled;\n            self.mobileInput.required = self.input.required;\n            self.mobileInput.placeholder = self.input.placeholder;\n            self.mobileFormatStr = inputType === \"datetime-local\" ? \"Y-m-d\\\\TH:i:S\" : inputType === \"date\" ? \"Y-m-d\" : \"H:i:S\";\n            if (self.selectedDates.length > 0) self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n            if (self.config.minDate) self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n            if (self.config.maxDate) self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n            if (self.input.getAttribute(\"step\")) self.mobileInput.step = String(self.input.getAttribute(\"step\"));\n            self.input.type = \"hidden\";\n            if (self.altInput !== undefined) self.altInput.type = \"hidden\";\n            try {\n                if (self.input.parentNode) self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n            } catch (_a) {}\n            bind(self.mobileInput, \"change\", function(e) {\n                self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);\n                triggerEvent(\"onChange\");\n                triggerEvent(\"onClose\");\n            });\n        }\n        function toggle(e) {\n            if (self.isOpen === true) return self.close();\n            self.open(e);\n        }\n        function triggerEvent(event, data) {\n            // If the instance has been destroyed already, all hooks have been removed\n            if (self.config === undefined) return;\n            var hooks = self.config[event];\n            if (hooks !== undefined && hooks.length > 0) for(var i = 0; hooks[i] && i < hooks.length; i++)hooks[i](self.selectedDates, self.input.value, self, data);\n            if (event === \"onChange\") {\n                self.input.dispatchEvent(createEvent(\"change\"));\n                // many front-end frameworks bind to the input event\n                self.input.dispatchEvent(createEvent(\"input\"));\n            }\n        }\n        function createEvent(name) {\n            var e = document.createEvent(\"Event\");\n            e.initEvent(name, true, true);\n            return e;\n        }\n        function isDateSelected(date) {\n            for(var i = 0; i < self.selectedDates.length; i++){\n                var selectedDate = self.selectedDates[i];\n                if (selectedDate instanceof Date && compareDates(selectedDate, date) === 0) return \"\" + i;\n            }\n            return false;\n        }\n        function isDateInRange(date) {\n            if (self.config.mode !== \"range\" || self.selectedDates.length < 2) return false;\n            return compareDates(date, self.selectedDates[0]) >= 0 && compareDates(date, self.selectedDates[1]) <= 0;\n        }\n        function updateNavigationCurrentMonth() {\n            if (self.config.noCalendar || self.isMobile || !self.monthNav) return;\n            self.yearElements.forEach(function(yearElement, i) {\n                var d = new Date(self.currentYear, self.currentMonth, 1);\n                d.setMonth(self.currentMonth + i);\n                if (self.config.showMonths > 1 || self.config.monthSelectorType === \"static\") self.monthElements[i].textContent = monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n                else self.monthsDropdownContainer.value = d.getMonth().toString();\n                yearElement.value = d.getFullYear().toString();\n            });\n            self._hidePrevMonthArrow = self.config.minDate !== undefined && (self.currentYear === self.config.minDate.getFullYear() ? self.currentMonth <= self.config.minDate.getMonth() : self.currentYear < self.config.minDate.getFullYear());\n            self._hideNextMonthArrow = self.config.maxDate !== undefined && (self.currentYear === self.config.maxDate.getFullYear() ? self.currentMonth + 1 > self.config.maxDate.getMonth() : self.currentYear > self.config.maxDate.getFullYear());\n        }\n        function getDateStr(specificFormat) {\n            var format = specificFormat || (self.config.altInput ? self.config.altFormat : self.config.dateFormat);\n            return self.selectedDates.map(function(dObj) {\n                return self.formatDate(dObj, format);\n            }).filter(function(d, i, arr) {\n                return self.config.mode !== \"range\" || self.config.enableTime || arr.indexOf(d) === i;\n            }).join(self.config.mode !== \"range\" ? self.config.conjunction : self.l10n.rangeSeparator);\n        }\n        /**\n         * Updates the values of inputs associated with the calendar\n         */ function updateValue(triggerChange) {\n            if (triggerChange === void 0) triggerChange = true;\n            if (self.mobileInput !== undefined && self.mobileFormatStr) self.mobileInput.value = self.latestSelectedDateObj !== undefined ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr) : \"\";\n            self.input.value = getDateStr(self.config.dateFormat);\n            if (self.altInput !== undefined) self.altInput.value = getDateStr(self.config.altFormat);\n            if (triggerChange !== false) triggerEvent(\"onValueUpdate\");\n        }\n        function onMonthNavClick(e) {\n            var eventTarget = getEventTarget(e);\n            var isPrevMonth = self.prevMonthNav.contains(eventTarget);\n            var isNextMonth = self.nextMonthNav.contains(eventTarget);\n            if (isPrevMonth || isNextMonth) changeMonth(isPrevMonth ? -1 : 1);\n            else if (self.yearElements.indexOf(eventTarget) >= 0) eventTarget.select();\n            else if (eventTarget.classList.contains(\"arrowUp\")) self.changeYear(self.currentYear + 1);\n            else if (eventTarget.classList.contains(\"arrowDown\")) self.changeYear(self.currentYear - 1);\n        }\n        function timeWrapper(e) {\n            e.preventDefault();\n            var isKeyDown = e.type === \"keydown\", eventTarget = getEventTarget(e), input = eventTarget;\n            if (self.amPM !== undefined && eventTarget === self.amPM) self.amPM.textContent = self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n            var min = parseFloat(input.getAttribute(\"min\")), max = parseFloat(input.getAttribute(\"max\")), step = parseFloat(input.getAttribute(\"step\")), curValue = parseInt(input.value, 10), delta = e.delta || (isKeyDown ? e.which === 38 ? 1 : -1 : 0);\n            var newValue = curValue + step * delta;\n            if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n                var isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\n                if (newValue < min) {\n                    newValue = max + newValue + int(!isHourElem) + (int(isHourElem) && int(!self.amPM));\n                    if (isMinuteElem) incrementNumInput(undefined, -1, self.hourElement);\n                } else if (newValue > max) {\n                    newValue = input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n                    if (isMinuteElem) incrementNumInput(undefined, 1, self.hourElement);\n                }\n                if (self.amPM && isHourElem && (step === 1 ? newValue + curValue === 23 : Math.abs(newValue - curValue) > step)) self.amPM.textContent = self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n                input.value = pad(newValue);\n            }\n        }\n        init();\n        return self;\n    }\n    /* istanbul ignore next */ function _flatpickr(nodeList, config) {\n        // static list\n        var nodes = Array.prototype.slice.call(nodeList).filter(function(x) {\n            return x instanceof HTMLElement;\n        });\n        var instances = [];\n        for(var i = 0; i < nodes.length; i++){\n            var node = nodes[i];\n            try {\n                if (node.getAttribute(\"data-fp-omit\") !== null) continue;\n                if (node._flatpickr !== undefined) {\n                    node._flatpickr.destroy();\n                    node._flatpickr = undefined;\n                }\n                node._flatpickr = FlatpickrInstance(node, config || {});\n                instances.push(node._flatpickr);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n        return instances.length === 1 ? instances[0] : instances;\n    }\n    /* istanbul ignore next */ if (typeof HTMLElement !== \"undefined\" && typeof HTMLCollection !== \"undefined\" && typeof NodeList !== \"undefined\") {\n        // browser env\n        HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function(config) {\n            return _flatpickr(this, config);\n        };\n        HTMLElement.prototype.flatpickr = function(config) {\n            return _flatpickr([\n                this\n            ], config);\n        };\n    }\n    /* istanbul ignore next */ var flatpickr = function flatpickr(selector, config) {\n        if (typeof selector === \"string\") return _flatpickr(window.document.querySelectorAll(selector), config);\n        else if (selector instanceof Node) return _flatpickr([\n            selector\n        ], config);\n        else return _flatpickr(selector, config);\n    };\n    /* istanbul ignore next */ flatpickr.defaultConfig = {};\n    flatpickr.l10ns = {\n        en: __assign({}, english),\n        default: __assign({}, english)\n    };\n    flatpickr.localize = function(l10n) {\n        flatpickr.l10ns.default = __assign(__assign({}, flatpickr.l10ns.default), l10n);\n    };\n    flatpickr.setDefaults = function(config) {\n        flatpickr.defaultConfig = __assign(__assign({}, flatpickr.defaultConfig), config);\n    };\n    flatpickr.parseDate = createDateParser({});\n    flatpickr.formatDate = createDateFormatter({});\n    flatpickr.compareDates = compareDates;\n    /* istanbul ignore next */ if (typeof jQuery !== \"undefined\" && typeof jQuery.fn !== \"undefined\") jQuery.fn.flatpickr = function(config) {\n        return _flatpickr(this, config);\n    };\n    Date.prototype.fp_incr = function(days) {\n        return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n    };\n    if (typeof window !== \"undefined\") window.flatpickr = flatpickr;\n    return flatpickr;\n});\n\n\n\n\nvar $6JpON = parcelRequire(\"6JpON\");\nfunction $84b9dae4df53835d$var$addLeadingZero(value) {\n    return value.toString().padStart(2, \"0\");\n}\nfunction $84b9dae4df53835d$var$convertMs(ms) {\n    var second = 1000;\n    var minute = second * 60;\n    var hour = minute * 60;\n    var day = hour * 24;\n    var days = Math.floor(ms / day);\n    var hours = Math.floor(ms % day / hour);\n    var minutes = Math.floor(ms % day % hour / minute);\n    var seconds = Math.floor(ms % day % hour % minute / second);\n    return {\n        days: days,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n    };\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var datetimePicker = document.getElementById(\"datetime-picker\");\n    var startButton = document.querySelector(\"[data-start]\");\n    var timerDays = document.querySelector(\"[data-days]\");\n    var timerHours = document.querySelector(\"[data-hours]\");\n    var timerMinutes = document.querySelector(\"[data-minutes]\");\n    var timerSeconds = document.querySelector(\"[data-seconds]\");\n    var countdownInterval;\n    var targetDate;\n    var countdownCompleted = false;\n    var options = {\n        enableTime: true,\n        time_24hr: true,\n        defaultDate: new Date(),\n        minuteIncrement: 1,\n        onClose: function(selectedDates) {\n            var selectedDate = selectedDates[0];\n            if (selectedDate > new Date()) {\n                targetDate = selectedDate.getTime();\n                startButton.disabled = false;\n                if (!countdownInterval) startCountdown();\n            } else {\n                (0, (/*@__PURE__*/$parcel$interopDefault($6JpON))).Notify.warning(\"Please choose a date in the future\");\n                startButton.disabled = true;\n            }\n        }\n    };\n    (0, (/*@__PURE__*/$parcel$interopDefault($309c201b79fabf79$exports)))(datetimePicker, options);\n    function startCountdown() {\n        countdownInterval = setInterval(function() {\n            var currentDate = new Date().getTime();\n            var timeDifference = targetDate - currentDate;\n            if (timeDifference <= 0) {\n                clearInterval(countdownInterval);\n                countdownInterval = null;\n                startButton.disabled = false;\n                if (!countdownCompleted) {\n                    countdownCompleted = true;\n                    (0, (/*@__PURE__*/$parcel$interopDefault($6JpON))).Notify.success(\"Countdown completed!\");\n                }\n            } else {\n                var _convertMs = $84b9dae4df53835d$var$convertMs(timeDifference), days = _convertMs.days, hours = _convertMs.hours, minutes = _convertMs.minutes, seconds = _convertMs.seconds;\n                timerDays.textContent = $84b9dae4df53835d$var$addLeadingZero(days);\n                timerHours.textContent = $84b9dae4df53835d$var$addLeadingZero(hours);\n                timerMinutes.textContent = $84b9dae4df53835d$var$addLeadingZero(minutes);\n                timerSeconds.textContent = $84b9dae4df53835d$var$addLeadingZero(seconds);\n            }\n        }, 1000);\n    }\n    startButton.addEventListener(\"click\", function() {\n        startButton.disabled = true;\n        countdownCompleted = false;\n        startCountdown();\n    });\n});\n\n})();\n//# sourceMappingURL=02-timer.addf5fa8.js.map\n","import flatpickr from 'flatpickr/dist/flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const datetimePicker = document.getElementById('datetime-picker');\n  const startButton = document.querySelector('[data-start]');\n  const timerDays = document.querySelector('[data-days]');\n  const timerHours = document.querySelector('[data-hours]');\n  const timerMinutes = document.querySelector('[data-minutes]');\n  const timerSeconds = document.querySelector('[data-seconds]');\n\n  let countdownInterval;\n  let targetDate;\n  let countdownCompleted = false;\n\n  const options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      const selectedDate = selectedDates[0];\n\n      if (selectedDate > new Date()) {\n        targetDate = selectedDate.getTime();\n        startButton.disabled = false;\n\n        if (!countdownInterval) {\n          startCountdown();\n        }\n      } else {\n        Notiflix.Notify.warning('Please choose a date in the future');\n        startButton.disabled = true;\n      }\n    },\n  };\n\n  flatpickr(datetimePicker, options);\n\n  function startCountdown() {\n    countdownInterval = setInterval(() => {\n      const currentDate = new Date().getTime();\n      const timeDifference = targetDate - currentDate;\n\n      if (timeDifference <= 0) {\n        clearInterval(countdownInterval);\n        countdownInterval = null;\n        startButton.disabled = false;\n\n        if (!countdownCompleted) {\n          countdownCompleted = true;\n          Notiflix.Notify.success('Countdown completed!');\n        }\n      } else {\n        const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n        timerDays.textContent = addLeadingZero(days);\n        timerHours.textContent = addLeadingZero(hours);\n        timerMinutes.textContent = addLeadingZero(minutes);\n        timerSeconds.textContent = addLeadingZero(seconds);\n      }\n    }, 1000);\n  }\n\n  startButton.addEventListener('click', function () {\n    startButton.disabled = true;\n    countdownCompleted = false;\n    startCountdown();\n  });\n});\n","/* flatpickr v4.6.13, @license MIT */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.flatpickr = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    var HOOKS = [\n        \"onChange\",\n        \"onClose\",\n        \"onDayCreate\",\n        \"onDestroy\",\n        \"onKeyDown\",\n        \"onMonthChange\",\n        \"onOpen\",\n        \"onParseConfig\",\n        \"onReady\",\n        \"onValueUpdate\",\n        \"onYearChange\",\n        \"onPreCalendarPosition\",\n    ];\n    var defaults = {\n        _disable: [],\n        allowInput: false,\n        allowInvalidPreload: false,\n        altFormat: \"F j, Y\",\n        altInput: false,\n        altInputClass: \"form-control input\",\n        animate: typeof window === \"object\" &&\n            window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n        ariaDateFormat: \"F j, Y\",\n        autoFillDefaultTime: true,\n        clickOpens: true,\n        closeOnSelect: true,\n        conjunction: \", \",\n        dateFormat: \"Y-m-d\",\n        defaultHour: 12,\n        defaultMinute: 0,\n        defaultSeconds: 0,\n        disable: [],\n        disableMobile: false,\n        enableSeconds: false,\n        enableTime: false,\n        errorHandler: function (err) {\n            return typeof console !== \"undefined\" && console.warn(err);\n        },\n        getWeek: function (givenDate) {\n            var date = new Date(givenDate.getTime());\n            date.setHours(0, 0, 0, 0);\n            // Thursday in current week decides the year.\n            date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n            // January 4 is always in week 1.\n            var week1 = new Date(date.getFullYear(), 0, 4);\n            // Adjust to Thursday in week 1 and count number of weeks from date to week1.\n            return (1 +\n                Math.round(((date.getTime() - week1.getTime()) / 86400000 -\n                    3 +\n                    ((week1.getDay() + 6) % 7)) /\n                    7));\n        },\n        hourIncrement: 1,\n        ignoredFocusElements: [],\n        inline: false,\n        locale: \"default\",\n        minuteIncrement: 5,\n        mode: \"single\",\n        monthSelectorType: \"dropdown\",\n        nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n        noCalendar: false,\n        now: new Date(),\n        onChange: [],\n        onClose: [],\n        onDayCreate: [],\n        onDestroy: [],\n        onKeyDown: [],\n        onMonthChange: [],\n        onOpen: [],\n        onParseConfig: [],\n        onReady: [],\n        onValueUpdate: [],\n        onYearChange: [],\n        onPreCalendarPosition: [],\n        plugins: [],\n        position: \"auto\",\n        positionElement: undefined,\n        prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n        shorthandCurrentMonth: false,\n        showMonths: 1,\n        static: false,\n        time_24hr: false,\n        weekNumbers: false,\n        wrap: false,\n    };\n\n    var english = {\n        weekdays: {\n            shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n            longhand: [\n                \"Sunday\",\n                \"Monday\",\n                \"Tuesday\",\n                \"Wednesday\",\n                \"Thursday\",\n                \"Friday\",\n                \"Saturday\",\n            ],\n        },\n        months: {\n            shorthand: [\n                \"Jan\",\n                \"Feb\",\n                \"Mar\",\n                \"Apr\",\n                \"May\",\n                \"Jun\",\n                \"Jul\",\n                \"Aug\",\n                \"Sep\",\n                \"Oct\",\n                \"Nov\",\n                \"Dec\",\n            ],\n            longhand: [\n                \"January\",\n                \"February\",\n                \"March\",\n                \"April\",\n                \"May\",\n                \"June\",\n                \"July\",\n                \"August\",\n                \"September\",\n                \"October\",\n                \"November\",\n                \"December\",\n            ],\n        },\n        daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n        firstDayOfWeek: 0,\n        ordinal: function (nth) {\n            var s = nth % 100;\n            if (s > 3 && s < 21)\n                return \"th\";\n            switch (s % 10) {\n                case 1:\n                    return \"st\";\n                case 2:\n                    return \"nd\";\n                case 3:\n                    return \"rd\";\n                default:\n                    return \"th\";\n            }\n        },\n        rangeSeparator: \" to \",\n        weekAbbreviation: \"Wk\",\n        scrollTitle: \"Scroll to increment\",\n        toggleTitle: \"Click to toggle\",\n        amPM: [\"AM\", \"PM\"],\n        yearAriaLabel: \"Year\",\n        monthAriaLabel: \"Month\",\n        hourAriaLabel: \"Hour\",\n        minuteAriaLabel: \"Minute\",\n        time_24hr: false,\n    };\n\n    var pad = function (number, length) {\n        if (length === void 0) { length = 2; }\n        return (\"000\" + number).slice(length * -1);\n    };\n    var int = function (bool) { return (bool === true ? 1 : 0); };\n    /* istanbul ignore next */\n    function debounce(fn, wait) {\n        var t;\n        return function () {\n            var _this = this;\n            var args = arguments;\n            clearTimeout(t);\n            t = setTimeout(function () { return fn.apply(_this, args); }, wait);\n        };\n    }\n    var arrayify = function (obj) {\n        return obj instanceof Array ? obj : [obj];\n    };\n\n    function toggleClass(elem, className, bool) {\n        if (bool === true)\n            return elem.classList.add(className);\n        elem.classList.remove(className);\n    }\n    function createElement(tag, className, content) {\n        var e = window.document.createElement(tag);\n        className = className || \"\";\n        content = content || \"\";\n        e.className = className;\n        if (content !== undefined)\n            e.textContent = content;\n        return e;\n    }\n    function clearNode(node) {\n        while (node.firstChild)\n            node.removeChild(node.firstChild);\n    }\n    function findParent(node, condition) {\n        if (condition(node))\n            return node;\n        else if (node.parentNode)\n            return findParent(node.parentNode, condition);\n        return undefined; // nothing found\n    }\n    function createNumberInput(inputClassName, opts) {\n        var wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n        if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n            numInput.type = \"number\";\n        }\n        else {\n            numInput.type = \"text\";\n            numInput.pattern = \"\\\\d*\";\n        }\n        if (opts !== undefined)\n            for (var key in opts)\n                numInput.setAttribute(key, opts[key]);\n        wrapper.appendChild(numInput);\n        wrapper.appendChild(arrowUp);\n        wrapper.appendChild(arrowDown);\n        return wrapper;\n    }\n    function getEventTarget(event) {\n        try {\n            if (typeof event.composedPath === \"function\") {\n                var path = event.composedPath();\n                return path[0];\n            }\n            return event.target;\n        }\n        catch (error) {\n            return event.target;\n        }\n    }\n\n    var doNothing = function () { return undefined; };\n    var monthToStr = function (monthNumber, shorthand, locale) { return locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber]; };\n    var revFormat = {\n        D: doNothing,\n        F: function (dateObj, monthName, locale) {\n            dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n        },\n        G: function (dateObj, hour) {\n            dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n        },\n        H: function (dateObj, hour) {\n            dateObj.setHours(parseFloat(hour));\n        },\n        J: function (dateObj, day) {\n            dateObj.setDate(parseFloat(day));\n        },\n        K: function (dateObj, amPM, locale) {\n            dateObj.setHours((dateObj.getHours() % 12) +\n                12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n        },\n        M: function (dateObj, shortMonth, locale) {\n            dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n        },\n        S: function (dateObj, seconds) {\n            dateObj.setSeconds(parseFloat(seconds));\n        },\n        U: function (_, unixSeconds) { return new Date(parseFloat(unixSeconds) * 1000); },\n        W: function (dateObj, weekNum, locale) {\n            var weekNumber = parseInt(weekNum);\n            var date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n            date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n            return date;\n        },\n        Y: function (dateObj, year) {\n            dateObj.setFullYear(parseFloat(year));\n        },\n        Z: function (_, ISODate) { return new Date(ISODate); },\n        d: function (dateObj, day) {\n            dateObj.setDate(parseFloat(day));\n        },\n        h: function (dateObj, hour) {\n            dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n        },\n        i: function (dateObj, minutes) {\n            dateObj.setMinutes(parseFloat(minutes));\n        },\n        j: function (dateObj, day) {\n            dateObj.setDate(parseFloat(day));\n        },\n        l: doNothing,\n        m: function (dateObj, month) {\n            dateObj.setMonth(parseFloat(month) - 1);\n        },\n        n: function (dateObj, month) {\n            dateObj.setMonth(parseFloat(month) - 1);\n        },\n        s: function (dateObj, seconds) {\n            dateObj.setSeconds(parseFloat(seconds));\n        },\n        u: function (_, unixMillSeconds) {\n            return new Date(parseFloat(unixMillSeconds));\n        },\n        w: doNothing,\n        y: function (dateObj, year) {\n            dateObj.setFullYear(2000 + parseFloat(year));\n        },\n    };\n    var tokenRegex = {\n        D: \"\",\n        F: \"\",\n        G: \"(\\\\d\\\\d|\\\\d)\",\n        H: \"(\\\\d\\\\d|\\\\d)\",\n        J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n        K: \"\",\n        M: \"\",\n        S: \"(\\\\d\\\\d|\\\\d)\",\n        U: \"(.+)\",\n        W: \"(\\\\d\\\\d|\\\\d)\",\n        Y: \"(\\\\d{4})\",\n        Z: \"(.+)\",\n        d: \"(\\\\d\\\\d|\\\\d)\",\n        h: \"(\\\\d\\\\d|\\\\d)\",\n        i: \"(\\\\d\\\\d|\\\\d)\",\n        j: \"(\\\\d\\\\d|\\\\d)\",\n        l: \"\",\n        m: \"(\\\\d\\\\d|\\\\d)\",\n        n: \"(\\\\d\\\\d|\\\\d)\",\n        s: \"(\\\\d\\\\d|\\\\d)\",\n        u: \"(.+)\",\n        w: \"(\\\\d\\\\d|\\\\d)\",\n        y: \"(\\\\d{2})\",\n    };\n    var formats = {\n        // get the date in UTC\n        Z: function (date) { return date.toISOString(); },\n        // weekday name, short, e.g. Thu\n        D: function (date, locale, options) {\n            return locale.weekdays.shorthand[formats.w(date, locale, options)];\n        },\n        // full month name e.g. January\n        F: function (date, locale, options) {\n            return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n        },\n        // padded hour 1-12\n        G: function (date, locale, options) {\n            return pad(formats.h(date, locale, options));\n        },\n        // hours with leading zero e.g. 03\n        H: function (date) { return pad(date.getHours()); },\n        // day (1-30) with ordinal suffix e.g. 1st, 2nd\n        J: function (date, locale) {\n            return locale.ordinal !== undefined\n                ? date.getDate() + locale.ordinal(date.getDate())\n                : date.getDate();\n        },\n        // AM/PM\n        K: function (date, locale) { return locale.amPM[int(date.getHours() > 11)]; },\n        // shorthand month e.g. Jan, Sep, Oct, etc\n        M: function (date, locale) {\n            return monthToStr(date.getMonth(), true, locale);\n        },\n        // seconds 00-59\n        S: function (date) { return pad(date.getSeconds()); },\n        // unix timestamp\n        U: function (date) { return date.getTime() / 1000; },\n        W: function (date, _, options) {\n            return options.getWeek(date);\n        },\n        // full year e.g. 2016, padded (0001-9999)\n        Y: function (date) { return pad(date.getFullYear(), 4); },\n        // day in month, padded (01-30)\n        d: function (date) { return pad(date.getDate()); },\n        // hour from 1-12 (am/pm)\n        h: function (date) { return (date.getHours() % 12 ? date.getHours() % 12 : 12); },\n        // minutes, padded with leading zero e.g. 09\n        i: function (date) { return pad(date.getMinutes()); },\n        // day in month (1-30)\n        j: function (date) { return date.getDate(); },\n        // weekday name, full, e.g. Thursday\n        l: function (date, locale) {\n            return locale.weekdays.longhand[date.getDay()];\n        },\n        // padded month number (01-12)\n        m: function (date) { return pad(date.getMonth() + 1); },\n        // the month number (1-12)\n        n: function (date) { return date.getMonth() + 1; },\n        // seconds 0-59\n        s: function (date) { return date.getSeconds(); },\n        // Unix Milliseconds\n        u: function (date) { return date.getTime(); },\n        // number of the day of the week\n        w: function (date) { return date.getDay(); },\n        // last two digits of year e.g. 16 for 2016\n        y: function (date) { return String(date.getFullYear()).substring(2); },\n    };\n\n    var createDateFormatter = function (_a) {\n        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c, _d = _a.isMobile, isMobile = _d === void 0 ? false : _d;\n        return function (dateObj, frmt, overrideLocale) {\n            var locale = overrideLocale || l10n;\n            if (config.formatDate !== undefined && !isMobile) {\n                return config.formatDate(dateObj, frmt, locale);\n            }\n            return frmt\n                .split(\"\")\n                .map(function (c, i, arr) {\n                return formats[c] && arr[i - 1] !== \"\\\\\"\n                    ? formats[c](dateObj, locale, config)\n                    : c !== \"\\\\\"\n                        ? c\n                        : \"\";\n            })\n                .join(\"\");\n        };\n    };\n    var createDateParser = function (_a) {\n        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;\n        return function (date, givenFormat, timeless, customLocale) {\n            if (date !== 0 && !date)\n                return undefined;\n            var locale = customLocale || l10n;\n            var parsedDate;\n            var dateOrig = date;\n            if (date instanceof Date)\n                parsedDate = new Date(date.getTime());\n            else if (typeof date !== \"string\" &&\n                date.toFixed !== undefined // timestamp\n            )\n                // create a copy\n                parsedDate = new Date(date);\n            else if (typeof date === \"string\") {\n                // date string\n                var format = givenFormat || (config || defaults).dateFormat;\n                var datestr = String(date).trim();\n                if (datestr === \"today\") {\n                    parsedDate = new Date();\n                    timeless = true;\n                }\n                else if (config && config.parseDate) {\n                    parsedDate = config.parseDate(date, format);\n                }\n                else if (/Z$/.test(datestr) ||\n                    /GMT$/.test(datestr) // datestrings w/ timezone\n                ) {\n                    parsedDate = new Date(date);\n                }\n                else {\n                    var matched = void 0, ops = [];\n                    for (var i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n                        var token_1 = format[i];\n                        var isBackSlash = token_1 === \"\\\\\";\n                        var escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n                        if (tokenRegex[token_1] && !escaped) {\n                            regexStr += tokenRegex[token_1];\n                            var match = new RegExp(regexStr).exec(date);\n                            if (match && (matched = true)) {\n                                ops[token_1 !== \"Y\" ? \"push\" : \"unshift\"]({\n                                    fn: revFormat[token_1],\n                                    val: match[++matchIndex],\n                                });\n                            }\n                        }\n                        else if (!isBackSlash)\n                            regexStr += \".\"; // don't really care\n                    }\n                    parsedDate =\n                        !config || !config.noCalendar\n                            ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\n                            : new Date(new Date().setHours(0, 0, 0, 0));\n                    ops.forEach(function (_a) {\n                        var fn = _a.fn, val = _a.val;\n                        return (parsedDate = fn(parsedDate, val, locale) || parsedDate);\n                    });\n                    parsedDate = matched ? parsedDate : undefined;\n                }\n            }\n            /* istanbul ignore next */\n            if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n                config.errorHandler(new Error(\"Invalid date provided: \" + dateOrig));\n                return undefined;\n            }\n            if (timeless === true)\n                parsedDate.setHours(0, 0, 0, 0);\n            return parsedDate;\n        };\n    };\n    /**\n     * Compute the difference in dates, measured in ms\n     */\n    function compareDates(date1, date2, timeless) {\n        if (timeless === void 0) { timeless = true; }\n        if (timeless !== false) {\n            return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\n                new Date(date2.getTime()).setHours(0, 0, 0, 0));\n        }\n        return date1.getTime() - date2.getTime();\n    }\n    var isBetween = function (ts, ts1, ts2) {\n        return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n    };\n    var calculateSecondsSinceMidnight = function (hours, minutes, seconds) {\n        return hours * 3600 + minutes * 60 + seconds;\n    };\n    var parseSeconds = function (secondsSinceMidnight) {\n        var hours = Math.floor(secondsSinceMidnight / 3600), minutes = (secondsSinceMidnight - hours * 3600) / 60;\n        return [hours, minutes, secondsSinceMidnight - hours * 3600 - minutes * 60];\n    };\n    var duration = {\n        DAY: 86400000,\n    };\n    function getDefaultHours(config) {\n        var hours = config.defaultHour;\n        var minutes = config.defaultMinute;\n        var seconds = config.defaultSeconds;\n        if (config.minDate !== undefined) {\n            var minHour = config.minDate.getHours();\n            var minMinutes = config.minDate.getMinutes();\n            var minSeconds = config.minDate.getSeconds();\n            if (hours < minHour) {\n                hours = minHour;\n            }\n            if (hours === minHour && minutes < minMinutes) {\n                minutes = minMinutes;\n            }\n            if (hours === minHour && minutes === minMinutes && seconds < minSeconds)\n                seconds = config.minDate.getSeconds();\n        }\n        if (config.maxDate !== undefined) {\n            var maxHr = config.maxDate.getHours();\n            var maxMinutes = config.maxDate.getMinutes();\n            hours = Math.min(hours, maxHr);\n            if (hours === maxHr)\n                minutes = Math.min(maxMinutes, minutes);\n            if (hours === maxHr && minutes === maxMinutes)\n                seconds = config.maxDate.getSeconds();\n        }\n        return { hours: hours, minutes: minutes, seconds: seconds };\n    }\n\n    if (typeof Object.assign !== \"function\") {\n        Object.assign = function (target) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            if (!target) {\n                throw TypeError(\"Cannot convert undefined or null to object\");\n            }\n            var _loop_1 = function (source) {\n                if (source) {\n                    Object.keys(source).forEach(function (key) { return (target[key] = source[key]); });\n                }\n            };\n            for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\n                var source = args_1[_a];\n                _loop_1(source);\n            }\n            return target;\n        };\n    }\n\n    var DEBOUNCED_CHANGE_MS = 300;\n    function FlatpickrInstance(element, instanceConfig) {\n        var self = {\n            config: __assign(__assign({}, defaults), flatpickr.defaultConfig),\n            l10n: english,\n        };\n        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n        self._handlers = [];\n        self.pluginElements = [];\n        self.loadedPlugins = [];\n        self._bind = bind;\n        self._setHoursFromDate = setHoursFromDate;\n        self._positionCalendar = positionCalendar;\n        self.changeMonth = changeMonth;\n        self.changeYear = changeYear;\n        self.clear = clear;\n        self.close = close;\n        self.onMouseOver = onMouseOver;\n        self._createElement = createElement;\n        self.createDay = createDay;\n        self.destroy = destroy;\n        self.isEnabled = isEnabled;\n        self.jumpToDate = jumpToDate;\n        self.updateValue = updateValue;\n        self.open = open;\n        self.redraw = redraw;\n        self.set = set;\n        self.setDate = setDate;\n        self.toggle = toggle;\n        function setupHelperFunctions() {\n            self.utils = {\n                getDaysInMonth: function (month, yr) {\n                    if (month === void 0) { month = self.currentMonth; }\n                    if (yr === void 0) { yr = self.currentYear; }\n                    if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\n                        return 29;\n                    return self.l10n.daysInMonth[month];\n                },\n            };\n        }\n        function init() {\n            self.element = self.input = element;\n            self.isOpen = false;\n            parseConfig();\n            setupLocale();\n            setupInputs();\n            setupDates();\n            setupHelperFunctions();\n            if (!self.isMobile)\n                build();\n            bindEvents();\n            if (self.selectedDates.length || self.config.noCalendar) {\n                if (self.config.enableTime) {\n                    setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);\n                }\n                updateValue(false);\n            }\n            setCalendarWidth();\n            var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n            /* TODO: investigate this further\n        \n              Currently, there is weird positioning behavior in safari causing pages\n              to scroll up. https://github.com/chmln/flatpickr/issues/563\n        \n              However, most browsers are not Safari and positioning is expensive when used\n              in scale. https://github.com/chmln/flatpickr/issues/1096\n            */\n            if (!self.isMobile && isSafari) {\n                positionCalendar();\n            }\n            triggerEvent(\"onReady\");\n        }\n        function getClosestActiveElement() {\n            var _a;\n            return (((_a = self.calendarContainer) === null || _a === void 0 ? void 0 : _a.getRootNode())\n                .activeElement || document.activeElement);\n        }\n        function bindToInstance(fn) {\n            return fn.bind(self);\n        }\n        function setCalendarWidth() {\n            var config = self.config;\n            if (config.weekNumbers === false && config.showMonths === 1) {\n                return;\n            }\n            else if (config.noCalendar !== true) {\n                window.requestAnimationFrame(function () {\n                    if (self.calendarContainer !== undefined) {\n                        self.calendarContainer.style.visibility = \"hidden\";\n                        self.calendarContainer.style.display = \"block\";\n                    }\n                    if (self.daysContainer !== undefined) {\n                        var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n                        self.daysContainer.style.width = daysWidth + \"px\";\n                        self.calendarContainer.style.width =\n                            daysWidth +\n                                (self.weekWrapper !== undefined\n                                    ? self.weekWrapper.offsetWidth\n                                    : 0) +\n                                \"px\";\n                        self.calendarContainer.style.removeProperty(\"visibility\");\n                        self.calendarContainer.style.removeProperty(\"display\");\n                    }\n                });\n            }\n        }\n        /**\n         * The handler for all events targeting the time inputs\n         */\n        function updateTime(e) {\n            if (self.selectedDates.length === 0) {\n                var defaultDate = self.config.minDate === undefined ||\n                    compareDates(new Date(), self.config.minDate) >= 0\n                    ? new Date()\n                    : new Date(self.config.minDate.getTime());\n                var defaults = getDefaultHours(self.config);\n                defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());\n                self.selectedDates = [defaultDate];\n                self.latestSelectedDateObj = defaultDate;\n            }\n            if (e !== undefined && e.type !== \"blur\") {\n                timeWrapper(e);\n            }\n            var prevValue = self._input.value;\n            setHoursFromInputs();\n            updateValue();\n            if (self._input.value !== prevValue) {\n                self._debouncedChange();\n            }\n        }\n        function ampm2military(hour, amPM) {\n            return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\n        }\n        function military2ampm(hour) {\n            switch (hour % 24) {\n                case 0:\n                case 12:\n                    return 12;\n                default:\n                    return hour % 12;\n            }\n        }\n        /**\n         * Syncs the selected date object time with user's time input\n         */\n        function setHoursFromInputs() {\n            if (self.hourElement === undefined || self.minuteElement === undefined)\n                return;\n            var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\n                ? (parseInt(self.secondElement.value, 10) || 0) % 60\n                : 0;\n            if (self.amPM !== undefined) {\n                hours = ampm2military(hours, self.amPM.textContent);\n            }\n            var limitMinHours = self.config.minTime !== undefined ||\n                (self.config.minDate &&\n                    self.minDateHasTime &&\n                    self.latestSelectedDateObj &&\n                    compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\n                        0);\n            var limitMaxHours = self.config.maxTime !== undefined ||\n                (self.config.maxDate &&\n                    self.maxDateHasTime &&\n                    self.latestSelectedDateObj &&\n                    compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\n                        0);\n            if (self.config.maxTime !== undefined &&\n                self.config.minTime !== undefined &&\n                self.config.minTime > self.config.maxTime) {\n                var minBound = calculateSecondsSinceMidnight(self.config.minTime.getHours(), self.config.minTime.getMinutes(), self.config.minTime.getSeconds());\n                var maxBound = calculateSecondsSinceMidnight(self.config.maxTime.getHours(), self.config.maxTime.getMinutes(), self.config.maxTime.getSeconds());\n                var currentTime = calculateSecondsSinceMidnight(hours, minutes, seconds);\n                if (currentTime > maxBound && currentTime < minBound) {\n                    var result = parseSeconds(minBound);\n                    hours = result[0];\n                    minutes = result[1];\n                    seconds = result[2];\n                }\n            }\n            else {\n                if (limitMaxHours) {\n                    var maxTime = self.config.maxTime !== undefined\n                        ? self.config.maxTime\n                        : self.config.maxDate;\n                    hours = Math.min(hours, maxTime.getHours());\n                    if (hours === maxTime.getHours())\n                        minutes = Math.min(minutes, maxTime.getMinutes());\n                    if (minutes === maxTime.getMinutes())\n                        seconds = Math.min(seconds, maxTime.getSeconds());\n                }\n                if (limitMinHours) {\n                    var minTime = self.config.minTime !== undefined\n                        ? self.config.minTime\n                        : self.config.minDate;\n                    hours = Math.max(hours, minTime.getHours());\n                    if (hours === minTime.getHours() && minutes < minTime.getMinutes())\n                        minutes = minTime.getMinutes();\n                    if (minutes === minTime.getMinutes())\n                        seconds = Math.max(seconds, minTime.getSeconds());\n                }\n            }\n            setHours(hours, minutes, seconds);\n        }\n        /**\n         * Syncs time input values with a date\n         */\n        function setHoursFromDate(dateObj) {\n            var date = dateObj || self.latestSelectedDateObj;\n            if (date && date instanceof Date) {\n                setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n            }\n        }\n        /**\n         * Sets the hours, minutes, and optionally seconds\n         * of the latest selected date object and the\n         * corresponding time inputs\n         * @param {Number} hours the hour. whether its military\n         *                 or am-pm gets inferred from config\n         * @param {Number} minutes the minutes\n         * @param {Number} seconds the seconds (optional)\n         */\n        function setHours(hours, minutes, seconds) {\n            if (self.latestSelectedDateObj !== undefined) {\n                self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n            }\n            if (!self.hourElement || !self.minuteElement || self.isMobile)\n                return;\n            self.hourElement.value = pad(!self.config.time_24hr\n                ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\n                : hours);\n            self.minuteElement.value = pad(minutes);\n            if (self.amPM !== undefined)\n                self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n            if (self.secondElement !== undefined)\n                self.secondElement.value = pad(seconds);\n        }\n        /**\n         * Handles the year input and incrementing events\n         * @param {Event} event the keyup or increment event\n         */\n        function onYearInput(event) {\n            var eventTarget = getEventTarget(event);\n            var year = parseInt(eventTarget.value) + (event.delta || 0);\n            if (year / 1000 > 1 ||\n                (event.key === \"Enter\" && !/[^\\d]/.test(year.toString()))) {\n                changeYear(year);\n            }\n        }\n        /**\n         * Essentially addEventListener + tracking\n         * @param {Element} element the element to addEventListener to\n         * @param {String} event the event name\n         * @param {Function} handler the event handler\n         */\n        function bind(element, event, handler, options) {\n            if (event instanceof Array)\n                return event.forEach(function (ev) { return bind(element, ev, handler, options); });\n            if (element instanceof Array)\n                return element.forEach(function (el) { return bind(el, event, handler, options); });\n            element.addEventListener(event, handler, options);\n            self._handlers.push({\n                remove: function () { return element.removeEventListener(event, handler, options); },\n            });\n        }\n        function triggerChange() {\n            triggerEvent(\"onChange\");\n        }\n        /**\n         * Adds all the necessary event listeners\n         */\n        function bindEvents() {\n            if (self.config.wrap) {\n                [\"open\", \"close\", \"toggle\", \"clear\"].forEach(function (evt) {\n                    Array.prototype.forEach.call(self.element.querySelectorAll(\"[data-\" + evt + \"]\"), function (el) {\n                        return bind(el, \"click\", self[evt]);\n                    });\n                });\n            }\n            if (self.isMobile) {\n                setupMobile();\n                return;\n            }\n            var debouncedResize = debounce(onResize, 50);\n            self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n            if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\n                bind(self.daysContainer, \"mouseover\", function (e) {\n                    if (self.config.mode === \"range\")\n                        onMouseOver(getEventTarget(e));\n                });\n            bind(self._input, \"keydown\", onKeyDown);\n            if (self.calendarContainer !== undefined) {\n                bind(self.calendarContainer, \"keydown\", onKeyDown);\n            }\n            if (!self.config.inline && !self.config.static)\n                bind(window, \"resize\", debouncedResize);\n            if (window.ontouchstart !== undefined)\n                bind(window.document, \"touchstart\", documentClick);\n            else\n                bind(window.document, \"mousedown\", documentClick);\n            bind(window.document, \"focus\", documentClick, { capture: true });\n            if (self.config.clickOpens === true) {\n                bind(self._input, \"focus\", self.open);\n                bind(self._input, \"click\", self.open);\n            }\n            if (self.daysContainer !== undefined) {\n                bind(self.monthNav, \"click\", onMonthNavClick);\n                bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n                bind(self.daysContainer, \"click\", selectDate);\n            }\n            if (self.timeContainer !== undefined &&\n                self.minuteElement !== undefined &&\n                self.hourElement !== undefined) {\n                var selText = function (e) {\n                    return getEventTarget(e).select();\n                };\n                bind(self.timeContainer, [\"increment\"], updateTime);\n                bind(self.timeContainer, \"blur\", updateTime, { capture: true });\n                bind(self.timeContainer, \"click\", timeIncrement);\n                bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n                if (self.secondElement !== undefined)\n                    bind(self.secondElement, \"focus\", function () { return self.secondElement && self.secondElement.select(); });\n                if (self.amPM !== undefined) {\n                    bind(self.amPM, \"click\", function (e) {\n                        updateTime(e);\n                    });\n                }\n            }\n            if (self.config.allowInput) {\n                bind(self._input, \"blur\", onBlur);\n            }\n        }\n        /**\n         * Set the calendar view to a particular date.\n         * @param {Date} jumpDate the date to set the view to\n         * @param {boolean} triggerChange if change events should be triggered\n         */\n        function jumpToDate(jumpDate, triggerChange) {\n            var jumpTo = jumpDate !== undefined\n                ? self.parseDate(jumpDate)\n                : self.latestSelectedDateObj ||\n                    (self.config.minDate && self.config.minDate > self.now\n                        ? self.config.minDate\n                        : self.config.maxDate && self.config.maxDate < self.now\n                            ? self.config.maxDate\n                            : self.now);\n            var oldYear = self.currentYear;\n            var oldMonth = self.currentMonth;\n            try {\n                if (jumpTo !== undefined) {\n                    self.currentYear = jumpTo.getFullYear();\n                    self.currentMonth = jumpTo.getMonth();\n                }\n            }\n            catch (e) {\n                /* istanbul ignore next */\n                e.message = \"Invalid date supplied: \" + jumpTo;\n                self.config.errorHandler(e);\n            }\n            if (triggerChange && self.currentYear !== oldYear) {\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n            if (triggerChange &&\n                (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {\n                triggerEvent(\"onMonthChange\");\n            }\n            self.redraw();\n        }\n        /**\n         * The up/down arrow handler for time inputs\n         * @param {Event} e the click event\n         */\n        function timeIncrement(e) {\n            var eventTarget = getEventTarget(e);\n            if (~eventTarget.className.indexOf(\"arrow\"))\n                incrementNumInput(e, eventTarget.classList.contains(\"arrowUp\") ? 1 : -1);\n        }\n        /**\n         * Increments/decrements the value of input associ-\n         * ated with the up/down arrow by dispatching an\n         * \"increment\" event on the input.\n         *\n         * @param {Event} e the click event\n         * @param {Number} delta the diff (usually 1 or -1)\n         * @param {Element} inputElem the input element\n         */\n        function incrementNumInput(e, delta, inputElem) {\n            var target = e && getEventTarget(e);\n            var input = inputElem ||\n                (target && target.parentNode && target.parentNode.firstChild);\n            var event = createEvent(\"increment\");\n            event.delta = delta;\n            input && input.dispatchEvent(event);\n        }\n        function build() {\n            var fragment = window.document.createDocumentFragment();\n            self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n            self.calendarContainer.tabIndex = -1;\n            if (!self.config.noCalendar) {\n                fragment.appendChild(buildMonthNav());\n                self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n                if (self.config.weekNumbers) {\n                    var _a = buildWeeks(), weekWrapper = _a.weekWrapper, weekNumbers = _a.weekNumbers;\n                    self.innerContainer.appendChild(weekWrapper);\n                    self.weekNumbers = weekNumbers;\n                    self.weekWrapper = weekWrapper;\n                }\n                self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n                self.rContainer.appendChild(buildWeekdays());\n                if (!self.daysContainer) {\n                    self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n                    self.daysContainer.tabIndex = -1;\n                }\n                buildDays();\n                self.rContainer.appendChild(self.daysContainer);\n                self.innerContainer.appendChild(self.rContainer);\n                fragment.appendChild(self.innerContainer);\n            }\n            if (self.config.enableTime) {\n                fragment.appendChild(buildTime());\n            }\n            toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n            toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n            toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n            self.calendarContainer.appendChild(fragment);\n            var customAppend = self.config.appendTo !== undefined &&\n                self.config.appendTo.nodeType !== undefined;\n            if (self.config.inline || self.config.static) {\n                self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n                if (self.config.inline) {\n                    if (!customAppend && self.element.parentNode)\n                        self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\n                    else if (self.config.appendTo !== undefined)\n                        self.config.appendTo.appendChild(self.calendarContainer);\n                }\n                if (self.config.static) {\n                    var wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n                    if (self.element.parentNode)\n                        self.element.parentNode.insertBefore(wrapper, self.element);\n                    wrapper.appendChild(self.element);\n                    if (self.altInput)\n                        wrapper.appendChild(self.altInput);\n                    wrapper.appendChild(self.calendarContainer);\n                }\n            }\n            if (!self.config.static && !self.config.inline)\n                (self.config.appendTo !== undefined\n                    ? self.config.appendTo\n                    : window.document.body).appendChild(self.calendarContainer);\n        }\n        function createDay(className, date, _dayNumber, i) {\n            var dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", className, date.getDate().toString());\n            dayElement.dateObj = date;\n            dayElement.$i = i;\n            dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n            if (className.indexOf(\"hidden\") === -1 &&\n                compareDates(date, self.now) === 0) {\n                self.todayDateElem = dayElement;\n                dayElement.classList.add(\"today\");\n                dayElement.setAttribute(\"aria-current\", \"date\");\n            }\n            if (dateIsEnabled) {\n                dayElement.tabIndex = -1;\n                if (isDateSelected(date)) {\n                    dayElement.classList.add(\"selected\");\n                    self.selectedDateElem = dayElement;\n                    if (self.config.mode === \"range\") {\n                        toggleClass(dayElement, \"startRange\", self.selectedDates[0] &&\n                            compareDates(date, self.selectedDates[0], true) === 0);\n                        toggleClass(dayElement, \"endRange\", self.selectedDates[1] &&\n                            compareDates(date, self.selectedDates[1], true) === 0);\n                        if (className === \"nextMonthDay\")\n                            dayElement.classList.add(\"inRange\");\n                    }\n                }\n            }\n            else {\n                dayElement.classList.add(\"flatpickr-disabled\");\n            }\n            if (self.config.mode === \"range\") {\n                if (isDateInRange(date) && !isDateSelected(date))\n                    dayElement.classList.add(\"inRange\");\n            }\n            if (self.weekNumbers &&\n                self.config.showMonths === 1 &&\n                className !== \"prevMonthDay\" &&\n                i % 7 === 6) {\n                self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n            }\n            triggerEvent(\"onDayCreate\", dayElement);\n            return dayElement;\n        }\n        function focusOnDayElem(targetNode) {\n            targetNode.focus();\n            if (self.config.mode === \"range\")\n                onMouseOver(targetNode);\n        }\n        function getFirstAvailableDay(delta) {\n            var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n            var endMonth = delta > 0 ? self.config.showMonths : -1;\n            for (var m = startMonth; m != endMonth; m += delta) {\n                var month = self.daysContainer.children[m];\n                var startIndex = delta > 0 ? 0 : month.children.length - 1;\n                var endIndex = delta > 0 ? month.children.length : -1;\n                for (var i = startIndex; i != endIndex; i += delta) {\n                    var c = month.children[i];\n                    if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj))\n                        return c;\n                }\n            }\n            return undefined;\n        }\n        function getNextAvailableDay(current, delta) {\n            var givenMonth = current.className.indexOf(\"Month\") === -1\n                ? current.dateObj.getMonth()\n                : self.currentMonth;\n            var endMonth = delta > 0 ? self.config.showMonths : -1;\n            var loopDelta = delta > 0 ? 1 : -1;\n            for (var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n                var month = self.daysContainer.children[m];\n                var startIndex = givenMonth - self.currentMonth === m\n                    ? current.$i + delta\n                    : delta < 0\n                        ? month.children.length - 1\n                        : 0;\n                var numMonthDays = month.children.length;\n                for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n                    var c = month.children[i];\n                    if (c.className.indexOf(\"hidden\") === -1 &&\n                        isEnabled(c.dateObj) &&\n                        Math.abs(current.$i - i) >= Math.abs(delta))\n                        return focusOnDayElem(c);\n                }\n            }\n            self.changeMonth(loopDelta);\n            focusOnDay(getFirstAvailableDay(loopDelta), 0);\n            return undefined;\n        }\n        function focusOnDay(current, offset) {\n            var activeElement = getClosestActiveElement();\n            var dayFocused = isInView(activeElement || document.body);\n            var startElem = current !== undefined\n                ? current\n                : dayFocused\n                    ? activeElement\n                    : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)\n                        ? self.selectedDateElem\n                        : self.todayDateElem !== undefined && isInView(self.todayDateElem)\n                            ? self.todayDateElem\n                            : getFirstAvailableDay(offset > 0 ? 1 : -1);\n            if (startElem === undefined) {\n                self._input.focus();\n            }\n            else if (!dayFocused) {\n                focusOnDayElem(startElem);\n            }\n            else {\n                getNextAvailableDay(startElem, offset);\n            }\n        }\n        function buildMonthDays(year, month) {\n            var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n            var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);\n            var daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\", nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n            var dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\n            // prepend days from the ending of previous month\n            for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n                days.appendChild(createDay(\"flatpickr-day \" + prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n            }\n            // Start at 1 since there is no 0th day\n            for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n                days.appendChild(createDay(\"flatpickr-day\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n            }\n            // append days from the next month\n            for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\n                (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n                days.appendChild(createDay(\"flatpickr-day \" + nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n            }\n            //updateNavigationCurrentMonth();\n            var dayContainer = createElement(\"div\", \"dayContainer\");\n            dayContainer.appendChild(days);\n            return dayContainer;\n        }\n        function buildDays() {\n            if (self.daysContainer === undefined) {\n                return;\n            }\n            clearNode(self.daysContainer);\n            // TODO: week numbers for each month\n            if (self.weekNumbers)\n                clearNode(self.weekNumbers);\n            var frag = document.createDocumentFragment();\n            for (var i = 0; i < self.config.showMonths; i++) {\n                var d = new Date(self.currentYear, self.currentMonth, 1);\n                d.setMonth(self.currentMonth + i);\n                frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n            }\n            self.daysContainer.appendChild(frag);\n            self.days = self.daysContainer.firstChild;\n            if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n                onMouseOver();\n            }\n        }\n        function buildMonthSwitch() {\n            if (self.config.showMonths > 1 ||\n                self.config.monthSelectorType !== \"dropdown\")\n                return;\n            var shouldBuildMonth = function (month) {\n                if (self.config.minDate !== undefined &&\n                    self.currentYear === self.config.minDate.getFullYear() &&\n                    month < self.config.minDate.getMonth()) {\n                    return false;\n                }\n                return !(self.config.maxDate !== undefined &&\n                    self.currentYear === self.config.maxDate.getFullYear() &&\n                    month > self.config.maxDate.getMonth());\n            };\n            self.monthsDropdownContainer.tabIndex = -1;\n            self.monthsDropdownContainer.innerHTML = \"\";\n            for (var i = 0; i < 12; i++) {\n                if (!shouldBuildMonth(i))\n                    continue;\n                var month = createElement(\"option\", \"flatpickr-monthDropdown-month\");\n                month.value = new Date(self.currentYear, i).getMonth().toString();\n                month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);\n                month.tabIndex = -1;\n                if (self.currentMonth === i) {\n                    month.selected = true;\n                }\n                self.monthsDropdownContainer.appendChild(month);\n            }\n        }\n        function buildMonth() {\n            var container = createElement(\"div\", \"flatpickr-month\");\n            var monthNavFragment = window.document.createDocumentFragment();\n            var monthElement;\n            if (self.config.showMonths > 1 ||\n                self.config.monthSelectorType === \"static\") {\n                monthElement = createElement(\"span\", \"cur-month\");\n            }\n            else {\n                self.monthsDropdownContainer = createElement(\"select\", \"flatpickr-monthDropdown-months\");\n                self.monthsDropdownContainer.setAttribute(\"aria-label\", self.l10n.monthAriaLabel);\n                bind(self.monthsDropdownContainer, \"change\", function (e) {\n                    var target = getEventTarget(e);\n                    var selectedMonth = parseInt(target.value, 10);\n                    self.changeMonth(selectedMonth - self.currentMonth);\n                    triggerEvent(\"onMonthChange\");\n                });\n                buildMonthSwitch();\n                monthElement = self.monthsDropdownContainer;\n            }\n            var yearInput = createNumberInput(\"cur-year\", { tabindex: \"-1\" });\n            var yearElement = yearInput.getElementsByTagName(\"input\")[0];\n            yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n            if (self.config.minDate) {\n                yearElement.setAttribute(\"min\", self.config.minDate.getFullYear().toString());\n            }\n            if (self.config.maxDate) {\n                yearElement.setAttribute(\"max\", self.config.maxDate.getFullYear().toString());\n                yearElement.disabled =\n                    !!self.config.minDate &&\n                        self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n            }\n            var currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n            currentMonth.appendChild(monthElement);\n            currentMonth.appendChild(yearInput);\n            monthNavFragment.appendChild(currentMonth);\n            container.appendChild(monthNavFragment);\n            return {\n                container: container,\n                yearElement: yearElement,\n                monthElement: monthElement,\n            };\n        }\n        function buildMonths() {\n            clearNode(self.monthNav);\n            self.monthNav.appendChild(self.prevMonthNav);\n            if (self.config.showMonths) {\n                self.yearElements = [];\n                self.monthElements = [];\n            }\n            for (var m = self.config.showMonths; m--;) {\n                var month = buildMonth();\n                self.yearElements.push(month.yearElement);\n                self.monthElements.push(month.monthElement);\n                self.monthNav.appendChild(month.container);\n            }\n            self.monthNav.appendChild(self.nextMonthNav);\n        }\n        function buildMonthNav() {\n            self.monthNav = createElement(\"div\", \"flatpickr-months\");\n            self.yearElements = [];\n            self.monthElements = [];\n            self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n            self.prevMonthNav.innerHTML = self.config.prevArrow;\n            self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n            self.nextMonthNav.innerHTML = self.config.nextArrow;\n            buildMonths();\n            Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n                get: function () { return self.__hidePrevMonthArrow; },\n                set: function (bool) {\n                    if (self.__hidePrevMonthArrow !== bool) {\n                        toggleClass(self.prevMonthNav, \"flatpickr-disabled\", bool);\n                        self.__hidePrevMonthArrow = bool;\n                    }\n                },\n            });\n            Object.defineProperty(self, \"_hideNextMonthArrow\", {\n                get: function () { return self.__hideNextMonthArrow; },\n                set: function (bool) {\n                    if (self.__hideNextMonthArrow !== bool) {\n                        toggleClass(self.nextMonthNav, \"flatpickr-disabled\", bool);\n                        self.__hideNextMonthArrow = bool;\n                    }\n                },\n            });\n            self.currentYearElement = self.yearElements[0];\n            updateNavigationCurrentMonth();\n            return self.monthNav;\n        }\n        function buildTime() {\n            self.calendarContainer.classList.add(\"hasTime\");\n            if (self.config.noCalendar)\n                self.calendarContainer.classList.add(\"noCalendar\");\n            var defaults = getDefaultHours(self.config);\n            self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n            self.timeContainer.tabIndex = -1;\n            var separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n            var hourInput = createNumberInput(\"flatpickr-hour\", {\n                \"aria-label\": self.l10n.hourAriaLabel,\n            });\n            self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n            var minuteInput = createNumberInput(\"flatpickr-minute\", {\n                \"aria-label\": self.l10n.minuteAriaLabel,\n            });\n            self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n            self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n            self.hourElement.value = pad(self.latestSelectedDateObj\n                ? self.latestSelectedDateObj.getHours()\n                : self.config.time_24hr\n                    ? defaults.hours\n                    : military2ampm(defaults.hours));\n            self.minuteElement.value = pad(self.latestSelectedDateObj\n                ? self.latestSelectedDateObj.getMinutes()\n                : defaults.minutes);\n            self.hourElement.setAttribute(\"step\", self.config.hourIncrement.toString());\n            self.minuteElement.setAttribute(\"step\", self.config.minuteIncrement.toString());\n            self.hourElement.setAttribute(\"min\", self.config.time_24hr ? \"0\" : \"1\");\n            self.hourElement.setAttribute(\"max\", self.config.time_24hr ? \"23\" : \"12\");\n            self.hourElement.setAttribute(\"maxlength\", \"2\");\n            self.minuteElement.setAttribute(\"min\", \"0\");\n            self.minuteElement.setAttribute(\"max\", \"59\");\n            self.minuteElement.setAttribute(\"maxlength\", \"2\");\n            self.timeContainer.appendChild(hourInput);\n            self.timeContainer.appendChild(separator);\n            self.timeContainer.appendChild(minuteInput);\n            if (self.config.time_24hr)\n                self.timeContainer.classList.add(\"time24hr\");\n            if (self.config.enableSeconds) {\n                self.timeContainer.classList.add(\"hasSeconds\");\n                var secondInput = createNumberInput(\"flatpickr-second\");\n                self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n                self.secondElement.value = pad(self.latestSelectedDateObj\n                    ? self.latestSelectedDateObj.getSeconds()\n                    : defaults.seconds);\n                self.secondElement.setAttribute(\"step\", self.minuteElement.getAttribute(\"step\"));\n                self.secondElement.setAttribute(\"min\", \"0\");\n                self.secondElement.setAttribute(\"max\", \"59\");\n                self.secondElement.setAttribute(\"maxlength\", \"2\");\n                self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n                self.timeContainer.appendChild(secondInput);\n            }\n            if (!self.config.time_24hr) {\n                // add self.amPM if appropriate\n                self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj\n                    ? self.hourElement.value\n                    : self.config.defaultHour) > 11)]);\n                self.amPM.title = self.l10n.toggleTitle;\n                self.amPM.tabIndex = -1;\n                self.timeContainer.appendChild(self.amPM);\n            }\n            return self.timeContainer;\n        }\n        function buildWeekdays() {\n            if (!self.weekdayContainer)\n                self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\n            else\n                clearNode(self.weekdayContainer);\n            for (var i = self.config.showMonths; i--;) {\n                var container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n                self.weekdayContainer.appendChild(container);\n            }\n            updateWeekdays();\n            return self.weekdayContainer;\n        }\n        function updateWeekdays() {\n            if (!self.weekdayContainer) {\n                return;\n            }\n            var firstDayOfWeek = self.l10n.firstDayOfWeek;\n            var weekdays = __spreadArrays(self.l10n.weekdays.shorthand);\n            if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n                weekdays = __spreadArrays(weekdays.splice(firstDayOfWeek, weekdays.length), weekdays.splice(0, firstDayOfWeek));\n            }\n            for (var i = self.config.showMonths; i--;) {\n                self.weekdayContainer.children[i].innerHTML = \"\\n      <span class='flatpickr-weekday'>\\n        \" + weekdays.join(\"</span><span class='flatpickr-weekday'>\") + \"\\n      </span>\\n      \";\n            }\n        }\n        /* istanbul ignore next */\n        function buildWeeks() {\n            self.calendarContainer.classList.add(\"hasWeeks\");\n            var weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n            weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n            var weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n            weekWrapper.appendChild(weekNumbers);\n            return {\n                weekWrapper: weekWrapper,\n                weekNumbers: weekNumbers,\n            };\n        }\n        function changeMonth(value, isOffset) {\n            if (isOffset === void 0) { isOffset = true; }\n            var delta = isOffset ? value : value - self.currentMonth;\n            if ((delta < 0 && self._hidePrevMonthArrow === true) ||\n                (delta > 0 && self._hideNextMonthArrow === true))\n                return;\n            self.currentMonth += delta;\n            if (self.currentMonth < 0 || self.currentMonth > 11) {\n                self.currentYear += self.currentMonth > 11 ? 1 : -1;\n                self.currentMonth = (self.currentMonth + 12) % 12;\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n            buildDays();\n            triggerEvent(\"onMonthChange\");\n            updateNavigationCurrentMonth();\n        }\n        function clear(triggerChangeEvent, toInitial) {\n            if (triggerChangeEvent === void 0) { triggerChangeEvent = true; }\n            if (toInitial === void 0) { toInitial = true; }\n            self.input.value = \"\";\n            if (self.altInput !== undefined)\n                self.altInput.value = \"\";\n            if (self.mobileInput !== undefined)\n                self.mobileInput.value = \"\";\n            self.selectedDates = [];\n            self.latestSelectedDateObj = undefined;\n            if (toInitial === true) {\n                self.currentYear = self._initialDate.getFullYear();\n                self.currentMonth = self._initialDate.getMonth();\n            }\n            if (self.config.enableTime === true) {\n                var _a = getDefaultHours(self.config), hours = _a.hours, minutes = _a.minutes, seconds = _a.seconds;\n                setHours(hours, minutes, seconds);\n            }\n            self.redraw();\n            if (triggerChangeEvent)\n                // triggerChangeEvent is true (default) or an Event\n                triggerEvent(\"onChange\");\n        }\n        function close() {\n            self.isOpen = false;\n            if (!self.isMobile) {\n                if (self.calendarContainer !== undefined) {\n                    self.calendarContainer.classList.remove(\"open\");\n                }\n                if (self._input !== undefined) {\n                    self._input.classList.remove(\"active\");\n                }\n            }\n            triggerEvent(\"onClose\");\n        }\n        function destroy() {\n            if (self.config !== undefined)\n                triggerEvent(\"onDestroy\");\n            for (var i = self._handlers.length; i--;) {\n                self._handlers[i].remove();\n            }\n            self._handlers = [];\n            if (self.mobileInput) {\n                if (self.mobileInput.parentNode)\n                    self.mobileInput.parentNode.removeChild(self.mobileInput);\n                self.mobileInput = undefined;\n            }\n            else if (self.calendarContainer && self.calendarContainer.parentNode) {\n                if (self.config.static && self.calendarContainer.parentNode) {\n                    var wrapper = self.calendarContainer.parentNode;\n                    wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n                    if (wrapper.parentNode) {\n                        while (wrapper.firstChild)\n                            wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n                        wrapper.parentNode.removeChild(wrapper);\n                    }\n                }\n                else\n                    self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n            }\n            if (self.altInput) {\n                self.input.type = \"text\";\n                if (self.altInput.parentNode)\n                    self.altInput.parentNode.removeChild(self.altInput);\n                delete self.altInput;\n            }\n            if (self.input) {\n                self.input.type = self.input._type;\n                self.input.classList.remove(\"flatpickr-input\");\n                self.input.removeAttribute(\"readonly\");\n            }\n            [\n                \"_showTimeInput\",\n                \"latestSelectedDateObj\",\n                \"_hideNextMonthArrow\",\n                \"_hidePrevMonthArrow\",\n                \"__hideNextMonthArrow\",\n                \"__hidePrevMonthArrow\",\n                \"isMobile\",\n                \"isOpen\",\n                \"selectedDateElem\",\n                \"minDateHasTime\",\n                \"maxDateHasTime\",\n                \"days\",\n                \"daysContainer\",\n                \"_input\",\n                \"_positionElement\",\n                \"innerContainer\",\n                \"rContainer\",\n                \"monthNav\",\n                \"todayDateElem\",\n                \"calendarContainer\",\n                \"weekdayContainer\",\n                \"prevMonthNav\",\n                \"nextMonthNav\",\n                \"monthsDropdownContainer\",\n                \"currentMonthElement\",\n                \"currentYearElement\",\n                \"navigationCurrentMonth\",\n                \"selectedDateElem\",\n                \"config\",\n            ].forEach(function (k) {\n                try {\n                    delete self[k];\n                }\n                catch (_) { }\n            });\n        }\n        function isCalendarElem(elem) {\n            return self.calendarContainer.contains(elem);\n        }\n        function documentClick(e) {\n            if (self.isOpen && !self.config.inline) {\n                var eventTarget_1 = getEventTarget(e);\n                var isCalendarElement = isCalendarElem(eventTarget_1);\n                var isInput = eventTarget_1 === self.input ||\n                    eventTarget_1 === self.altInput ||\n                    self.element.contains(eventTarget_1) ||\n                    // web components\n                    // e.path is not present in all browsers. circumventing typechecks\n                    (e.path &&\n                        e.path.indexOf &&\n                        (~e.path.indexOf(self.input) ||\n                            ~e.path.indexOf(self.altInput)));\n                var lostFocus = !isInput &&\n                    !isCalendarElement &&\n                    !isCalendarElem(e.relatedTarget);\n                var isIgnored = !self.config.ignoredFocusElements.some(function (elem) {\n                    return elem.contains(eventTarget_1);\n                });\n                if (lostFocus && isIgnored) {\n                    if (self.config.allowInput) {\n                        self.setDate(self._input.value, false, self.config.altInput\n                            ? self.config.altFormat\n                            : self.config.dateFormat);\n                    }\n                    if (self.timeContainer !== undefined &&\n                        self.minuteElement !== undefined &&\n                        self.hourElement !== undefined &&\n                        self.input.value !== \"\" &&\n                        self.input.value !== undefined) {\n                        updateTime();\n                    }\n                    self.close();\n                    if (self.config &&\n                        self.config.mode === \"range\" &&\n                        self.selectedDates.length === 1)\n                        self.clear(false);\n                }\n            }\n        }\n        function changeYear(newYear) {\n            if (!newYear ||\n                (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\n                (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\n                return;\n            var newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\n            self.currentYear = newYearNum || self.currentYear;\n            if (self.config.maxDate &&\n                self.currentYear === self.config.maxDate.getFullYear()) {\n                self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n            }\n            else if (self.config.minDate &&\n                self.currentYear === self.config.minDate.getFullYear()) {\n                self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n            }\n            if (isNewYear) {\n                self.redraw();\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n        }\n        function isEnabled(date, timeless) {\n            var _a;\n            if (timeless === void 0) { timeless = true; }\n            var dateToCheck = self.parseDate(date, undefined, timeless); // timeless\n            if ((self.config.minDate &&\n                dateToCheck &&\n                compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\n                (self.config.maxDate &&\n                    dateToCheck &&\n                    compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\n                return false;\n            if (!self.config.enable && self.config.disable.length === 0)\n                return true;\n            if (dateToCheck === undefined)\n                return false;\n            var bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;\n            for (var i = 0, d = void 0; i < array.length; i++) {\n                d = array[i];\n                if (typeof d === \"function\" &&\n                    d(dateToCheck) // disabled by function\n                )\n                    return bool;\n                else if (d instanceof Date &&\n                    dateToCheck !== undefined &&\n                    d.getTime() === dateToCheck.getTime())\n                    // disabled by date\n                    return bool;\n                else if (typeof d === \"string\") {\n                    // disabled by date string\n                    var parsed = self.parseDate(d, undefined, true);\n                    return parsed && parsed.getTime() === dateToCheck.getTime()\n                        ? bool\n                        : !bool;\n                }\n                else if (\n                // disabled by range\n                typeof d === \"object\" &&\n                    dateToCheck !== undefined &&\n                    d.from &&\n                    d.to &&\n                    dateToCheck.getTime() >= d.from.getTime() &&\n                    dateToCheck.getTime() <= d.to.getTime())\n                    return bool;\n            }\n            return !bool;\n        }\n        function isInView(elem) {\n            if (self.daysContainer !== undefined)\n                return (elem.className.indexOf(\"hidden\") === -1 &&\n                    elem.className.indexOf(\"flatpickr-disabled\") === -1 &&\n                    self.daysContainer.contains(elem));\n            return false;\n        }\n        function onBlur(e) {\n            var isInput = e.target === self._input;\n            var valueChanged = self._input.value.trimEnd() !== getDateStr();\n            if (isInput &&\n                valueChanged &&\n                !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {\n                self.setDate(self._input.value, true, e.target === self.altInput\n                    ? self.config.altFormat\n                    : self.config.dateFormat);\n            }\n        }\n        function onKeyDown(e) {\n            // e.key                      e.keyCode\n            // \"Backspace\"                        8\n            // \"Tab\"                              9\n            // \"Enter\"                           13\n            // \"Escape\"     (IE \"Esc\")           27\n            // \"ArrowLeft\"  (IE \"Left\")          37\n            // \"ArrowUp\"    (IE \"Up\")            38\n            // \"ArrowRight\" (IE \"Right\")         39\n            // \"ArrowDown\"  (IE \"Down\")          40\n            // \"Delete\"     (IE \"Del\")           46\n            var eventTarget = getEventTarget(e);\n            var isInput = self.config.wrap\n                ? element.contains(eventTarget)\n                : eventTarget === self._input;\n            var allowInput = self.config.allowInput;\n            var allowKeydown = self.isOpen && (!allowInput || !isInput);\n            var allowInlineKeydown = self.config.inline && isInput && !allowInput;\n            if (e.keyCode === 13 && isInput) {\n                if (allowInput) {\n                    self.setDate(self._input.value, true, eventTarget === self.altInput\n                        ? self.config.altFormat\n                        : self.config.dateFormat);\n                    self.close();\n                    return eventTarget.blur();\n                }\n                else {\n                    self.open();\n                }\n            }\n            else if (isCalendarElem(eventTarget) ||\n                allowKeydown ||\n                allowInlineKeydown) {\n                var isTimeObj = !!self.timeContainer &&\n                    self.timeContainer.contains(eventTarget);\n                switch (e.keyCode) {\n                    case 13:\n                        if (isTimeObj) {\n                            e.preventDefault();\n                            updateTime();\n                            focusAndClose();\n                        }\n                        else\n                            selectDate(e);\n                        break;\n                    case 27: // escape\n                        e.preventDefault();\n                        focusAndClose();\n                        break;\n                    case 8:\n                    case 46:\n                        if (isInput && !self.config.allowInput) {\n                            e.preventDefault();\n                            self.clear();\n                        }\n                        break;\n                    case 37:\n                    case 39:\n                        if (!isTimeObj && !isInput) {\n                            e.preventDefault();\n                            var activeElement = getClosestActiveElement();\n                            if (self.daysContainer !== undefined &&\n                                (allowInput === false ||\n                                    (activeElement && isInView(activeElement)))) {\n                                var delta_1 = e.keyCode === 39 ? 1 : -1;\n                                if (!e.ctrlKey)\n                                    focusOnDay(undefined, delta_1);\n                                else {\n                                    e.stopPropagation();\n                                    changeMonth(delta_1);\n                                    focusOnDay(getFirstAvailableDay(1), 0);\n                                }\n                            }\n                        }\n                        else if (self.hourElement)\n                            self.hourElement.focus();\n                        break;\n                    case 38:\n                    case 40:\n                        e.preventDefault();\n                        var delta = e.keyCode === 40 ? 1 : -1;\n                        if ((self.daysContainer &&\n                            eventTarget.$i !== undefined) ||\n                            eventTarget === self.input ||\n                            eventTarget === self.altInput) {\n                            if (e.ctrlKey) {\n                                e.stopPropagation();\n                                changeYear(self.currentYear - delta);\n                                focusOnDay(getFirstAvailableDay(1), 0);\n                            }\n                            else if (!isTimeObj)\n                                focusOnDay(undefined, delta * 7);\n                        }\n                        else if (eventTarget === self.currentYearElement) {\n                            changeYear(self.currentYear - delta);\n                        }\n                        else if (self.config.enableTime) {\n                            if (!isTimeObj && self.hourElement)\n                                self.hourElement.focus();\n                            updateTime(e);\n                            self._debouncedChange();\n                        }\n                        break;\n                    case 9:\n                        if (isTimeObj) {\n                            var elems = [\n                                self.hourElement,\n                                self.minuteElement,\n                                self.secondElement,\n                                self.amPM,\n                            ]\n                                .concat(self.pluginElements)\n                                .filter(function (x) { return x; });\n                            var i = elems.indexOf(eventTarget);\n                            if (i !== -1) {\n                                var target = elems[i + (e.shiftKey ? -1 : 1)];\n                                e.preventDefault();\n                                (target || self._input).focus();\n                            }\n                        }\n                        else if (!self.config.noCalendar &&\n                            self.daysContainer &&\n                            self.daysContainer.contains(eventTarget) &&\n                            e.shiftKey) {\n                            e.preventDefault();\n                            self._input.focus();\n                        }\n                        break;\n                }\n            }\n            if (self.amPM !== undefined && eventTarget === self.amPM) {\n                switch (e.key) {\n                    case self.l10n.amPM[0].charAt(0):\n                    case self.l10n.amPM[0].charAt(0).toLowerCase():\n                        self.amPM.textContent = self.l10n.amPM[0];\n                        setHoursFromInputs();\n                        updateValue();\n                        break;\n                    case self.l10n.amPM[1].charAt(0):\n                    case self.l10n.amPM[1].charAt(0).toLowerCase():\n                        self.amPM.textContent = self.l10n.amPM[1];\n                        setHoursFromInputs();\n                        updateValue();\n                        break;\n                }\n            }\n            if (isInput || isCalendarElem(eventTarget)) {\n                triggerEvent(\"onKeyDown\", e);\n            }\n        }\n        function onMouseOver(elem, cellClass) {\n            if (cellClass === void 0) { cellClass = \"flatpickr-day\"; }\n            if (self.selectedDates.length !== 1 ||\n                (elem &&\n                    (!elem.classList.contains(cellClass) ||\n                        elem.classList.contains(\"flatpickr-disabled\"))))\n                return;\n            var hoverDate = elem\n                ? elem.dateObj.getTime()\n                : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());\n            var containsDisabled = false;\n            var minRange = 0, maxRange = 0;\n            for (var t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {\n                if (!isEnabled(new Date(t), true)) {\n                    containsDisabled =\n                        containsDisabled || (t > rangeStartDate && t < rangeEndDate);\n                    if (t < initialDate && (!minRange || t > minRange))\n                        minRange = t;\n                    else if (t > initialDate && (!maxRange || t < maxRange))\n                        maxRange = t;\n                }\n            }\n            var hoverableCells = Array.from(self.rContainer.querySelectorAll(\"*:nth-child(-n+\" + self.config.showMonths + \") > .\" + cellClass));\n            hoverableCells.forEach(function (dayElem) {\n                var date = dayElem.dateObj;\n                var timestamp = date.getTime();\n                var outOfRange = (minRange > 0 && timestamp < minRange) ||\n                    (maxRange > 0 && timestamp > maxRange);\n                if (outOfRange) {\n                    dayElem.classList.add(\"notAllowed\");\n                    [\"inRange\", \"startRange\", \"endRange\"].forEach(function (c) {\n                        dayElem.classList.remove(c);\n                    });\n                    return;\n                }\n                else if (containsDisabled && !outOfRange)\n                    return;\n                [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach(function (c) {\n                    dayElem.classList.remove(c);\n                });\n                if (elem !== undefined) {\n                    elem.classList.add(hoverDate <= self.selectedDates[0].getTime()\n                        ? \"startRange\"\n                        : \"endRange\");\n                    if (initialDate < hoverDate && timestamp === initialDate)\n                        dayElem.classList.add(\"startRange\");\n                    else if (initialDate > hoverDate && timestamp === initialDate)\n                        dayElem.classList.add(\"endRange\");\n                    if (timestamp >= minRange &&\n                        (maxRange === 0 || timestamp <= maxRange) &&\n                        isBetween(timestamp, initialDate, hoverDate))\n                        dayElem.classList.add(\"inRange\");\n                }\n            });\n        }\n        function onResize() {\n            if (self.isOpen && !self.config.static && !self.config.inline)\n                positionCalendar();\n        }\n        function open(e, positionElement) {\n            if (positionElement === void 0) { positionElement = self._positionElement; }\n            if (self.isMobile === true) {\n                if (e) {\n                    e.preventDefault();\n                    var eventTarget = getEventTarget(e);\n                    if (eventTarget) {\n                        eventTarget.blur();\n                    }\n                }\n                if (self.mobileInput !== undefined) {\n                    self.mobileInput.focus();\n                    self.mobileInput.click();\n                }\n                triggerEvent(\"onOpen\");\n                return;\n            }\n            else if (self._input.disabled || self.config.inline) {\n                return;\n            }\n            var wasOpen = self.isOpen;\n            self.isOpen = true;\n            if (!wasOpen) {\n                self.calendarContainer.classList.add(\"open\");\n                self._input.classList.add(\"active\");\n                triggerEvent(\"onOpen\");\n                positionCalendar(positionElement);\n            }\n            if (self.config.enableTime === true && self.config.noCalendar === true) {\n                if (self.config.allowInput === false &&\n                    (e === undefined ||\n                        !self.timeContainer.contains(e.relatedTarget))) {\n                    setTimeout(function () { return self.hourElement.select(); }, 50);\n                }\n            }\n        }\n        function minMaxDateSetter(type) {\n            return function (date) {\n                var dateObj = (self.config[\"_\" + type + \"Date\"] = self.parseDate(date, self.config.dateFormat));\n                var inverseDateObj = self.config[\"_\" + (type === \"min\" ? \"max\" : \"min\") + \"Date\"];\n                if (dateObj !== undefined) {\n                    self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\n                        dateObj.getHours() > 0 ||\n                            dateObj.getMinutes() > 0 ||\n                            dateObj.getSeconds() > 0;\n                }\n                if (self.selectedDates) {\n                    self.selectedDates = self.selectedDates.filter(function (d) { return isEnabled(d); });\n                    if (!self.selectedDates.length && type === \"min\")\n                        setHoursFromDate(dateObj);\n                    updateValue();\n                }\n                if (self.daysContainer) {\n                    redraw();\n                    if (dateObj !== undefined)\n                        self.currentYearElement[type] = dateObj.getFullYear().toString();\n                    else\n                        self.currentYearElement.removeAttribute(type);\n                    self.currentYearElement.disabled =\n                        !!inverseDateObj &&\n                            dateObj !== undefined &&\n                            inverseDateObj.getFullYear() === dateObj.getFullYear();\n                }\n            };\n        }\n        function parseConfig() {\n            var boolOpts = [\n                \"wrap\",\n                \"weekNumbers\",\n                \"allowInput\",\n                \"allowInvalidPreload\",\n                \"clickOpens\",\n                \"time_24hr\",\n                \"enableTime\",\n                \"noCalendar\",\n                \"altInput\",\n                \"shorthandCurrentMonth\",\n                \"inline\",\n                \"static\",\n                \"enableSeconds\",\n                \"disableMobile\",\n            ];\n            var userConfig = __assign(__assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);\n            var formats = {};\n            self.config.parseDate = userConfig.parseDate;\n            self.config.formatDate = userConfig.formatDate;\n            Object.defineProperty(self.config, \"enable\", {\n                get: function () { return self.config._enable; },\n                set: function (dates) {\n                    self.config._enable = parseDateRules(dates);\n                },\n            });\n            Object.defineProperty(self.config, \"disable\", {\n                get: function () { return self.config._disable; },\n                set: function (dates) {\n                    self.config._disable = parseDateRules(dates);\n                },\n            });\n            var timeMode = userConfig.mode === \"time\";\n            if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n                var defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaults.dateFormat;\n                formats.dateFormat =\n                    userConfig.noCalendar || timeMode\n                        ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\n                        : defaultDateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n            }\n            if (userConfig.altInput &&\n                (userConfig.enableTime || timeMode) &&\n                !userConfig.altFormat) {\n                var defaultAltFormat = flatpickr.defaultConfig.altFormat || defaults.altFormat;\n                formats.altFormat =\n                    userConfig.noCalendar || timeMode\n                        ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\n                        : defaultAltFormat + (\" h:i\" + (userConfig.enableSeconds ? \":S\" : \"\") + \" K\");\n            }\n            Object.defineProperty(self.config, \"minDate\", {\n                get: function () { return self.config._minDate; },\n                set: minMaxDateSetter(\"min\"),\n            });\n            Object.defineProperty(self.config, \"maxDate\", {\n                get: function () { return self.config._maxDate; },\n                set: minMaxDateSetter(\"max\"),\n            });\n            var minMaxTimeSetter = function (type) { return function (val) {\n                self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i:S\");\n            }; };\n            Object.defineProperty(self.config, \"minTime\", {\n                get: function () { return self.config._minTime; },\n                set: minMaxTimeSetter(\"min\"),\n            });\n            Object.defineProperty(self.config, \"maxTime\", {\n                get: function () { return self.config._maxTime; },\n                set: minMaxTimeSetter(\"max\"),\n            });\n            if (userConfig.mode === \"time\") {\n                self.config.noCalendar = true;\n                self.config.enableTime = true;\n            }\n            Object.assign(self.config, formats, userConfig);\n            for (var i = 0; i < boolOpts.length; i++)\n                // https://github.com/microsoft/TypeScript/issues/31663\n                self.config[boolOpts[i]] =\n                    self.config[boolOpts[i]] === true ||\n                        self.config[boolOpts[i]] === \"true\";\n            HOOKS.filter(function (hook) { return self.config[hook] !== undefined; }).forEach(function (hook) {\n                self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n            });\n            self.isMobile =\n                !self.config.disableMobile &&\n                    !self.config.inline &&\n                    self.config.mode === \"single\" &&\n                    !self.config.disable.length &&\n                    !self.config.enable &&\n                    !self.config.weekNumbers &&\n                    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n            for (var i = 0; i < self.config.plugins.length; i++) {\n                var pluginConf = self.config.plugins[i](self) || {};\n                for (var key in pluginConf) {\n                    if (HOOKS.indexOf(key) > -1) {\n                        self.config[key] = arrayify(pluginConf[key])\n                            .map(bindToInstance)\n                            .concat(self.config[key]);\n                    }\n                    else if (typeof userConfig[key] === \"undefined\")\n                        self.config[key] = pluginConf[key];\n                }\n            }\n            if (!userConfig.altInputClass) {\n                self.config.altInputClass =\n                    getInputElem().className + \" \" + self.config.altInputClass;\n            }\n            triggerEvent(\"onParseConfig\");\n        }\n        function getInputElem() {\n            return self.config.wrap\n                ? element.querySelector(\"[data-input]\")\n                : element;\n        }\n        function setupLocale() {\n            if (typeof self.config.locale !== \"object\" &&\n                typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\n                self.config.errorHandler(new Error(\"flatpickr: invalid locale \" + self.config.locale));\n            self.l10n = __assign(__assign({}, flatpickr.l10ns.default), (typeof self.config.locale === \"object\"\n                ? self.config.locale\n                : self.config.locale !== \"default\"\n                    ? flatpickr.l10ns[self.config.locale]\n                    : undefined));\n            tokenRegex.D = \"(\" + self.l10n.weekdays.shorthand.join(\"|\") + \")\";\n            tokenRegex.l = \"(\" + self.l10n.weekdays.longhand.join(\"|\") + \")\";\n            tokenRegex.M = \"(\" + self.l10n.months.shorthand.join(\"|\") + \")\";\n            tokenRegex.F = \"(\" + self.l10n.months.longhand.join(\"|\") + \")\";\n            tokenRegex.K = \"(\" + self.l10n.amPM[0] + \"|\" + self.l10n.amPM[1] + \"|\" + self.l10n.amPM[0].toLowerCase() + \"|\" + self.l10n.amPM[1].toLowerCase() + \")\";\n            var userConfig = __assign(__assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));\n            if (userConfig.time_24hr === undefined &&\n                flatpickr.defaultConfig.time_24hr === undefined) {\n                self.config.time_24hr = self.l10n.time_24hr;\n            }\n            self.formatDate = createDateFormatter(self);\n            self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n        }\n        function positionCalendar(customPositionElement) {\n            if (typeof self.config.position === \"function\") {\n                return void self.config.position(self, customPositionElement);\n            }\n            if (self.calendarContainer === undefined)\n                return;\n            triggerEvent(\"onPreCalendarPosition\");\n            var positionElement = customPositionElement || self._positionElement;\n            var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, (function (acc, child) { return acc + child.offsetHeight; }), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(\" \"), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === \"above\" ||\n                (configPosVertical !== \"below\" &&\n                    distanceFromBottom < calendarHeight &&\n                    inputBounds.top > calendarHeight);\n            var top = window.pageYOffset +\n                inputBounds.top +\n                (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n            toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n            toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n            if (self.config.inline)\n                return;\n            var left = window.pageXOffset + inputBounds.left;\n            var isCenter = false;\n            var isRight = false;\n            if (configPosHorizontal === \"center\") {\n                left -= (calendarWidth - inputBounds.width) / 2;\n                isCenter = true;\n            }\n            else if (configPosHorizontal === \"right\") {\n                left -= calendarWidth - inputBounds.width;\n                isRight = true;\n            }\n            toggleClass(self.calendarContainer, \"arrowLeft\", !isCenter && !isRight);\n            toggleClass(self.calendarContainer, \"arrowCenter\", isCenter);\n            toggleClass(self.calendarContainer, \"arrowRight\", isRight);\n            var right = window.document.body.offsetWidth -\n                (window.pageXOffset + inputBounds.right);\n            var rightMost = left + calendarWidth > window.document.body.offsetWidth;\n            var centerMost = right + calendarWidth > window.document.body.offsetWidth;\n            toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n            if (self.config.static)\n                return;\n            self.calendarContainer.style.top = top + \"px\";\n            if (!rightMost) {\n                self.calendarContainer.style.left = left + \"px\";\n                self.calendarContainer.style.right = \"auto\";\n            }\n            else if (!centerMost) {\n                self.calendarContainer.style.left = \"auto\";\n                self.calendarContainer.style.right = right + \"px\";\n            }\n            else {\n                var doc = getDocumentStyleSheet();\n                // some testing environments don't have css support\n                if (doc === undefined)\n                    return;\n                var bodyWidth = window.document.body.offsetWidth;\n                var centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);\n                var centerBefore = \".flatpickr-calendar.centerMost:before\";\n                var centerAfter = \".flatpickr-calendar.centerMost:after\";\n                var centerIndex = doc.cssRules.length;\n                var centerStyle = \"{left:\" + inputBounds.left + \"px;right:auto;}\";\n                toggleClass(self.calendarContainer, \"rightMost\", false);\n                toggleClass(self.calendarContainer, \"centerMost\", true);\n                doc.insertRule(centerBefore + \",\" + centerAfter + centerStyle, centerIndex);\n                self.calendarContainer.style.left = centerLeft + \"px\";\n                self.calendarContainer.style.right = \"auto\";\n            }\n        }\n        function getDocumentStyleSheet() {\n            var editableSheet = null;\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (!sheet.cssRules)\n                    continue;\n                try {\n                    sheet.cssRules;\n                }\n                catch (err) {\n                    continue;\n                }\n                editableSheet = sheet;\n                break;\n            }\n            return editableSheet != null ? editableSheet : createStyleSheet();\n        }\n        function createStyleSheet() {\n            var style = document.createElement(\"style\");\n            document.head.appendChild(style);\n            return style.sheet;\n        }\n        function redraw() {\n            if (self.config.noCalendar || self.isMobile)\n                return;\n            buildMonthSwitch();\n            updateNavigationCurrentMonth();\n            buildDays();\n        }\n        function focusAndClose() {\n            self._input.focus();\n            if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n                navigator.msMaxTouchPoints !== undefined) {\n                // hack - bugs in the way IE handles focus keeps the calendar open\n                setTimeout(self.close, 0);\n            }\n            else {\n                self.close();\n            }\n        }\n        function selectDate(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var isSelectable = function (day) {\n                return day.classList &&\n                    day.classList.contains(\"flatpickr-day\") &&\n                    !day.classList.contains(\"flatpickr-disabled\") &&\n                    !day.classList.contains(\"notAllowed\");\n            };\n            var t = findParent(getEventTarget(e), isSelectable);\n            if (t === undefined)\n                return;\n            var target = t;\n            var selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\n            var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\n                selectedDate.getMonth() >\n                    self.currentMonth + self.config.showMonths - 1) &&\n                self.config.mode !== \"range\";\n            self.selectedDateElem = target;\n            if (self.config.mode === \"single\")\n                self.selectedDates = [selectedDate];\n            else if (self.config.mode === \"multiple\") {\n                var selectedIndex = isDateSelected(selectedDate);\n                if (selectedIndex)\n                    self.selectedDates.splice(parseInt(selectedIndex), 1);\n                else\n                    self.selectedDates.push(selectedDate);\n            }\n            else if (self.config.mode === \"range\") {\n                if (self.selectedDates.length === 2) {\n                    self.clear(false, false);\n                }\n                self.latestSelectedDateObj = selectedDate;\n                self.selectedDates.push(selectedDate);\n                // unless selecting same date twice, sort ascendingly\n                if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\n                    self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });\n            }\n            setHoursFromInputs();\n            if (shouldChangeMonth) {\n                var isNewYear = self.currentYear !== selectedDate.getFullYear();\n                self.currentYear = selectedDate.getFullYear();\n                self.currentMonth = selectedDate.getMonth();\n                if (isNewYear) {\n                    triggerEvent(\"onYearChange\");\n                    buildMonthSwitch();\n                }\n                triggerEvent(\"onMonthChange\");\n            }\n            updateNavigationCurrentMonth();\n            buildDays();\n            updateValue();\n            // maintain focus\n            if (!shouldChangeMonth &&\n                self.config.mode !== \"range\" &&\n                self.config.showMonths === 1)\n                focusOnDayElem(target);\n            else if (self.selectedDateElem !== undefined &&\n                self.hourElement === undefined) {\n                self.selectedDateElem && self.selectedDateElem.focus();\n            }\n            if (self.hourElement !== undefined)\n                self.hourElement !== undefined && self.hourElement.focus();\n            if (self.config.closeOnSelect) {\n                var single = self.config.mode === \"single\" && !self.config.enableTime;\n                var range = self.config.mode === \"range\" &&\n                    self.selectedDates.length === 2 &&\n                    !self.config.enableTime;\n                if (single || range) {\n                    focusAndClose();\n                }\n            }\n            triggerChange();\n        }\n        var CALLBACKS = {\n            locale: [setupLocale, updateWeekdays],\n            showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\n            minDate: [jumpToDate],\n            maxDate: [jumpToDate],\n            positionElement: [updatePositionElement],\n            clickOpens: [\n                function () {\n                    if (self.config.clickOpens === true) {\n                        bind(self._input, \"focus\", self.open);\n                        bind(self._input, \"click\", self.open);\n                    }\n                    else {\n                        self._input.removeEventListener(\"focus\", self.open);\n                        self._input.removeEventListener(\"click\", self.open);\n                    }\n                },\n            ],\n        };\n        function set(option, value) {\n            if (option !== null && typeof option === \"object\") {\n                Object.assign(self.config, option);\n                for (var key in option) {\n                    if (CALLBACKS[key] !== undefined)\n                        CALLBACKS[key].forEach(function (x) { return x(); });\n                }\n            }\n            else {\n                self.config[option] = value;\n                if (CALLBACKS[option] !== undefined)\n                    CALLBACKS[option].forEach(function (x) { return x(); });\n                else if (HOOKS.indexOf(option) > -1)\n                    self.config[option] = arrayify(value);\n            }\n            self.redraw();\n            updateValue(true);\n        }\n        function setSelectedDate(inputDate, format) {\n            var dates = [];\n            if (inputDate instanceof Array)\n                dates = inputDate.map(function (d) { return self.parseDate(d, format); });\n            else if (inputDate instanceof Date || typeof inputDate === \"number\")\n                dates = [self.parseDate(inputDate, format)];\n            else if (typeof inputDate === \"string\") {\n                switch (self.config.mode) {\n                    case \"single\":\n                    case \"time\":\n                        dates = [self.parseDate(inputDate, format)];\n                        break;\n                    case \"multiple\":\n                        dates = inputDate\n                            .split(self.config.conjunction)\n                            .map(function (date) { return self.parseDate(date, format); });\n                        break;\n                    case \"range\":\n                        dates = inputDate\n                            .split(self.l10n.rangeSeparator)\n                            .map(function (date) { return self.parseDate(date, format); });\n                        break;\n                }\n            }\n            else\n                self.config.errorHandler(new Error(\"Invalid date supplied: \" + JSON.stringify(inputDate)));\n            self.selectedDates = (self.config.allowInvalidPreload\n                ? dates\n                : dates.filter(function (d) { return d instanceof Date && isEnabled(d, false); }));\n            if (self.config.mode === \"range\")\n                self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });\n        }\n        function setDate(date, triggerChange, format) {\n            if (triggerChange === void 0) { triggerChange = false; }\n            if (format === void 0) { format = self.config.dateFormat; }\n            if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\n                return self.clear(triggerChange);\n            setSelectedDate(date, format);\n            self.latestSelectedDateObj =\n                self.selectedDates[self.selectedDates.length - 1];\n            self.redraw();\n            jumpToDate(undefined, triggerChange);\n            setHoursFromDate();\n            if (self.selectedDates.length === 0) {\n                self.clear(false);\n            }\n            updateValue(triggerChange);\n            if (triggerChange)\n                triggerEvent(\"onChange\");\n        }\n        function parseDateRules(arr) {\n            return arr\n                .slice()\n                .map(function (rule) {\n                if (typeof rule === \"string\" ||\n                    typeof rule === \"number\" ||\n                    rule instanceof Date) {\n                    return self.parseDate(rule, undefined, true);\n                }\n                else if (rule &&\n                    typeof rule === \"object\" &&\n                    rule.from &&\n                    rule.to)\n                    return {\n                        from: self.parseDate(rule.from, undefined),\n                        to: self.parseDate(rule.to, undefined),\n                    };\n                return rule;\n            })\n                .filter(function (x) { return x; }); // remove falsy values\n        }\n        function setupDates() {\n            self.selectedDates = [];\n            self.now = self.parseDate(self.config.now) || new Date();\n            // Workaround IE11 setting placeholder as the input's value\n            var preloadedDate = self.config.defaultDate ||\n                ((self.input.nodeName === \"INPUT\" ||\n                    self.input.nodeName === \"TEXTAREA\") &&\n                    self.input.placeholder &&\n                    self.input.value === self.input.placeholder\n                    ? null\n                    : self.input.value);\n            if (preloadedDate)\n                setSelectedDate(preloadedDate, self.config.dateFormat);\n            self._initialDate =\n                self.selectedDates.length > 0\n                    ? self.selectedDates[0]\n                    : self.config.minDate &&\n                        self.config.minDate.getTime() > self.now.getTime()\n                        ? self.config.minDate\n                        : self.config.maxDate &&\n                            self.config.maxDate.getTime() < self.now.getTime()\n                            ? self.config.maxDate\n                            : self.now;\n            self.currentYear = self._initialDate.getFullYear();\n            self.currentMonth = self._initialDate.getMonth();\n            if (self.selectedDates.length > 0)\n                self.latestSelectedDateObj = self.selectedDates[0];\n            if (self.config.minTime !== undefined)\n                self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n            if (self.config.maxTime !== undefined)\n                self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n            self.minDateHasTime =\n                !!self.config.minDate &&\n                    (self.config.minDate.getHours() > 0 ||\n                        self.config.minDate.getMinutes() > 0 ||\n                        self.config.minDate.getSeconds() > 0);\n            self.maxDateHasTime =\n                !!self.config.maxDate &&\n                    (self.config.maxDate.getHours() > 0 ||\n                        self.config.maxDate.getMinutes() > 0 ||\n                        self.config.maxDate.getSeconds() > 0);\n        }\n        function setupInputs() {\n            self.input = getInputElem();\n            /* istanbul ignore next */\n            if (!self.input) {\n                self.config.errorHandler(new Error(\"Invalid input element specified\"));\n                return;\n            }\n            // hack: store previous type to restore it after destroy()\n            self.input._type = self.input.type;\n            self.input.type = \"text\";\n            self.input.classList.add(\"flatpickr-input\");\n            self._input = self.input;\n            if (self.config.altInput) {\n                // replicate self.element\n                self.altInput = createElement(self.input.nodeName, self.config.altInputClass);\n                self._input = self.altInput;\n                self.altInput.placeholder = self.input.placeholder;\n                self.altInput.disabled = self.input.disabled;\n                self.altInput.required = self.input.required;\n                self.altInput.tabIndex = self.input.tabIndex;\n                self.altInput.type = \"text\";\n                self.input.setAttribute(\"type\", \"hidden\");\n                if (!self.config.static && self.input.parentNode)\n                    self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n            }\n            if (!self.config.allowInput)\n                self._input.setAttribute(\"readonly\", \"readonly\");\n            updatePositionElement();\n        }\n        function updatePositionElement() {\n            self._positionElement = self.config.positionElement || self._input;\n        }\n        function setupMobile() {\n            var inputType = self.config.enableTime\n                ? self.config.noCalendar\n                    ? \"time\"\n                    : \"datetime-local\"\n                : \"date\";\n            self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n            self.mobileInput.tabIndex = 1;\n            self.mobileInput.type = inputType;\n            self.mobileInput.disabled = self.input.disabled;\n            self.mobileInput.required = self.input.required;\n            self.mobileInput.placeholder = self.input.placeholder;\n            self.mobileFormatStr =\n                inputType === \"datetime-local\"\n                    ? \"Y-m-d\\\\TH:i:S\"\n                    : inputType === \"date\"\n                        ? \"Y-m-d\"\n                        : \"H:i:S\";\n            if (self.selectedDates.length > 0) {\n                self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n            }\n            if (self.config.minDate)\n                self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n            if (self.config.maxDate)\n                self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n            if (self.input.getAttribute(\"step\"))\n                self.mobileInput.step = String(self.input.getAttribute(\"step\"));\n            self.input.type = \"hidden\";\n            if (self.altInput !== undefined)\n                self.altInput.type = \"hidden\";\n            try {\n                if (self.input.parentNode)\n                    self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n            }\n            catch (_a) { }\n            bind(self.mobileInput, \"change\", function (e) {\n                self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);\n                triggerEvent(\"onChange\");\n                triggerEvent(\"onClose\");\n            });\n        }\n        function toggle(e) {\n            if (self.isOpen === true)\n                return self.close();\n            self.open(e);\n        }\n        function triggerEvent(event, data) {\n            // If the instance has been destroyed already, all hooks have been removed\n            if (self.config === undefined)\n                return;\n            var hooks = self.config[event];\n            if (hooks !== undefined && hooks.length > 0) {\n                for (var i = 0; hooks[i] && i < hooks.length; i++)\n                    hooks[i](self.selectedDates, self.input.value, self, data);\n            }\n            if (event === \"onChange\") {\n                self.input.dispatchEvent(createEvent(\"change\"));\n                // many front-end frameworks bind to the input event\n                self.input.dispatchEvent(createEvent(\"input\"));\n            }\n        }\n        function createEvent(name) {\n            var e = document.createEvent(\"Event\");\n            e.initEvent(name, true, true);\n            return e;\n        }\n        function isDateSelected(date) {\n            for (var i = 0; i < self.selectedDates.length; i++) {\n                var selectedDate = self.selectedDates[i];\n                if (selectedDate instanceof Date &&\n                    compareDates(selectedDate, date) === 0)\n                    return \"\" + i;\n            }\n            return false;\n        }\n        function isDateInRange(date) {\n            if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\n                return false;\n            return (compareDates(date, self.selectedDates[0]) >= 0 &&\n                compareDates(date, self.selectedDates[1]) <= 0);\n        }\n        function updateNavigationCurrentMonth() {\n            if (self.config.noCalendar || self.isMobile || !self.monthNav)\n                return;\n            self.yearElements.forEach(function (yearElement, i) {\n                var d = new Date(self.currentYear, self.currentMonth, 1);\n                d.setMonth(self.currentMonth + i);\n                if (self.config.showMonths > 1 ||\n                    self.config.monthSelectorType === \"static\") {\n                    self.monthElements[i].textContent =\n                        monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n                }\n                else {\n                    self.monthsDropdownContainer.value = d.getMonth().toString();\n                }\n                yearElement.value = d.getFullYear().toString();\n            });\n            self._hidePrevMonthArrow =\n                self.config.minDate !== undefined &&\n                    (self.currentYear === self.config.minDate.getFullYear()\n                        ? self.currentMonth <= self.config.minDate.getMonth()\n                        : self.currentYear < self.config.minDate.getFullYear());\n            self._hideNextMonthArrow =\n                self.config.maxDate !== undefined &&\n                    (self.currentYear === self.config.maxDate.getFullYear()\n                        ? self.currentMonth + 1 > self.config.maxDate.getMonth()\n                        : self.currentYear > self.config.maxDate.getFullYear());\n        }\n        function getDateStr(specificFormat) {\n            var format = specificFormat ||\n                (self.config.altInput ? self.config.altFormat : self.config.dateFormat);\n            return self.selectedDates\n                .map(function (dObj) { return self.formatDate(dObj, format); })\n                .filter(function (d, i, arr) {\n                return self.config.mode !== \"range\" ||\n                    self.config.enableTime ||\n                    arr.indexOf(d) === i;\n            })\n                .join(self.config.mode !== \"range\"\n                ? self.config.conjunction\n                : self.l10n.rangeSeparator);\n        }\n        /**\n         * Updates the values of inputs associated with the calendar\n         */\n        function updateValue(triggerChange) {\n            if (triggerChange === void 0) { triggerChange = true; }\n            if (self.mobileInput !== undefined && self.mobileFormatStr) {\n                self.mobileInput.value =\n                    self.latestSelectedDateObj !== undefined\n                        ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\n                        : \"\";\n            }\n            self.input.value = getDateStr(self.config.dateFormat);\n            if (self.altInput !== undefined) {\n                self.altInput.value = getDateStr(self.config.altFormat);\n            }\n            if (triggerChange !== false)\n                triggerEvent(\"onValueUpdate\");\n        }\n        function onMonthNavClick(e) {\n            var eventTarget = getEventTarget(e);\n            var isPrevMonth = self.prevMonthNav.contains(eventTarget);\n            var isNextMonth = self.nextMonthNav.contains(eventTarget);\n            if (isPrevMonth || isNextMonth) {\n                changeMonth(isPrevMonth ? -1 : 1);\n            }\n            else if (self.yearElements.indexOf(eventTarget) >= 0) {\n                eventTarget.select();\n            }\n            else if (eventTarget.classList.contains(\"arrowUp\")) {\n                self.changeYear(self.currentYear + 1);\n            }\n            else if (eventTarget.classList.contains(\"arrowDown\")) {\n                self.changeYear(self.currentYear - 1);\n            }\n        }\n        function timeWrapper(e) {\n            e.preventDefault();\n            var isKeyDown = e.type === \"keydown\", eventTarget = getEventTarget(e), input = eventTarget;\n            if (self.amPM !== undefined && eventTarget === self.amPM) {\n                self.amPM.textContent =\n                    self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n            }\n            var min = parseFloat(input.getAttribute(\"min\")), max = parseFloat(input.getAttribute(\"max\")), step = parseFloat(input.getAttribute(\"step\")), curValue = parseInt(input.value, 10), delta = e.delta ||\n                (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\n            var newValue = curValue + step * delta;\n            if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n                var isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\n                if (newValue < min) {\n                    newValue =\n                        max +\n                            newValue +\n                            int(!isHourElem) +\n                            (int(isHourElem) && int(!self.amPM));\n                    if (isMinuteElem)\n                        incrementNumInput(undefined, -1, self.hourElement);\n                }\n                else if (newValue > max) {\n                    newValue =\n                        input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n                    if (isMinuteElem)\n                        incrementNumInput(undefined, 1, self.hourElement);\n                }\n                if (self.amPM &&\n                    isHourElem &&\n                    (step === 1\n                        ? newValue + curValue === 23\n                        : Math.abs(newValue - curValue) > step)) {\n                    self.amPM.textContent =\n                        self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n                }\n                input.value = pad(newValue);\n            }\n        }\n        init();\n        return self;\n    }\n    /* istanbul ignore next */\n    function _flatpickr(nodeList, config) {\n        // static list\n        var nodes = Array.prototype.slice\n            .call(nodeList)\n            .filter(function (x) { return x instanceof HTMLElement; });\n        var instances = [];\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            try {\n                if (node.getAttribute(\"data-fp-omit\") !== null)\n                    continue;\n                if (node._flatpickr !== undefined) {\n                    node._flatpickr.destroy();\n                    node._flatpickr = undefined;\n                }\n                node._flatpickr = FlatpickrInstance(node, config || {});\n                instances.push(node._flatpickr);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        }\n        return instances.length === 1 ? instances[0] : instances;\n    }\n    /* istanbul ignore next */\n    if (typeof HTMLElement !== \"undefined\" &&\n        typeof HTMLCollection !== \"undefined\" &&\n        typeof NodeList !== \"undefined\") {\n        // browser env\n        HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n            return _flatpickr(this, config);\n        };\n        HTMLElement.prototype.flatpickr = function (config) {\n            return _flatpickr([this], config);\n        };\n    }\n    /* istanbul ignore next */\n    var flatpickr = function (selector, config) {\n        if (typeof selector === \"string\") {\n            return _flatpickr(window.document.querySelectorAll(selector), config);\n        }\n        else if (selector instanceof Node) {\n            return _flatpickr([selector], config);\n        }\n        else {\n            return _flatpickr(selector, config);\n        }\n    };\n    /* istanbul ignore next */\n    flatpickr.defaultConfig = {};\n    flatpickr.l10ns = {\n        en: __assign({}, english),\n        default: __assign({}, english),\n    };\n    flatpickr.localize = function (l10n) {\n        flatpickr.l10ns.default = __assign(__assign({}, flatpickr.l10ns.default), l10n);\n    };\n    flatpickr.setDefaults = function (config) {\n        flatpickr.defaultConfig = __assign(__assign({}, flatpickr.defaultConfig), config);\n    };\n    flatpickr.parseDate = createDateParser({});\n    flatpickr.formatDate = createDateFormatter({});\n    flatpickr.compareDates = compareDates;\n    /* istanbul ignore next */\n    if (typeof jQuery !== \"undefined\" && typeof jQuery.fn !== \"undefined\") {\n        jQuery.fn.flatpickr = function (config) {\n            return _flatpickr(this, config);\n        };\n    }\n    Date.prototype.fp_incr = function (days) {\n        return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n    };\n    if (typeof window !== \"undefined\") {\n        window.flatpickr = flatpickr;\n    }\n\n    return flatpickr;\n\n})));\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$309c201b79fabf79$exports","factory","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","apply","__spreadArrays","il","r","Array","k","j","jl","HOOKS","defaults","_disable","allowInput","allowInvalidPreload","altFormat","altInput","altInputClass","animate","navigator","userAgent","indexOf","ariaDateFormat","autoFillDefaultTime","clickOpens","closeOnSelect","conjunction","dateFormat","defaultHour","defaultMinute","defaultSeconds","disable","disableMobile","enableSeconds","enableTime","errorHandler","console","warn","getWeek","givenDate","date","Date","getTime","setHours","setDate","getDate","getDay","week1","getFullYear","Math","round","hourIncrement","ignoredFocusElements","inline","locale","minuteIncrement","mode","monthSelectorType","nextArrow","noCalendar","now","onChange","onClose","onDayCreate","onDestroy","onKeyDown","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition","plugins","position","positionElement","undefined","prevArrow","shorthandCurrentMonth","showMonths","static","time_24hr","weekNumbers","wrap","english","weekdays","shorthand","longhand","months","daysInMonth","firstDayOfWeek","ordinal","nth","rangeSeparator","weekAbbreviation","scrollTitle","toggleTitle","amPM","yearAriaLabel","monthAriaLabel","hourAriaLabel","minuteAriaLabel","pad","number","slice","int","bool","debounce","fn","wait","_this","args","clearTimeout","setTimeout","arrayify","obj","toggleClass","elem","className","classList","add","remove","createElement","tag","content","e","document","textContent","clearNode","node","firstChild","removeChild","createNumberInput","inputClassName","opts","wrapper","numInput","arrowUp","arrowDown","type","pattern","key","setAttribute","appendChild","getEventTarget","event","composedPath","path","target","error","doNothing","monthToStr","monthNumber","revFormat","D","F","dateObj","monthName","setMonth","G","hour","getHours","parseFloat","H","J","day","K","RegExp","test","M","shortMonth","S","seconds","setSeconds","U","_","unixSeconds","W","weekNum","weekNumber","parseInt","Y","year","setFullYear","Z","ISODate","d","h","minutes","setMinutes","l","m","month","u","unixMillSeconds","w","y","tokenRegex","formats","toISOString","options","getMonth","getSeconds","getMinutes","String","substring","createDateFormatter","_a","_b","config","_c","l10n","_d","isMobile","frmt","overrideLocale","formatDate","split","map","c","arr","join","createDateParser","givenFormat","timeless","customLocale","parsedDate","toFixed","format","datestr","trim","parseDate","matched","ops","matchIndex","regexStr","token_1","isBackSlash","escaped","match","exec","val","forEach","isNaN","compareDates","date1","date2","calculateSecondsSinceMidnight","hours","parseSeconds","secondsSinceMidnight","floor","duration","DAY","getDefaultHours","minDate","minHour","minMinutes","minSeconds","maxDate","maxHr","maxMinutes","min","_flatpickr","nodeList","nodes","filter","x","HTMLElement","instances","getAttribute","destroy","FlatpickrInstance","element","instanceConfig","isSafari","flatpickr","defaultConfig","getClosestActiveElement","calendarContainer","getRootNode","activeElement","bindToInstance","bind","setCalendarWidth","requestAnimationFrame","style","visibility","display","daysContainer","daysWidth","days","offsetWidth","width","weekWrapper","removeProperty","updateTime","selectedDates","defaultDate","getMilliseconds","latestSelectedDateObj","timeWrapper","preventDefault","isKeyDown","eventTarget","input","max","step","curValue","value","newValue","delta","which","isHourElem","hourElement","isMinuteElem","minuteElement","incrementNumInput","abs","prevValue","_input","setHoursFromInputs","updateValue","_debouncedChange","secondElement","limitMinHours","minTime","minDateHasTime","limitMaxHours","maxTime","maxDateHasTime","minBound","maxBound","currentTime","result","setHoursFromDate","onYearInput","toString","changeYear","handler","ev","el","addEventListener","_handlers","push","removeEventListener","triggerChange","triggerEvent","jumpToDate","jumpDate","jumpTo","oldYear","currentYear","oldMonth","currentMonth","message","buildMonthSwitch","redraw","timeIncrement","contains","inputElem","parentNode","createEvent","dispatchEvent","createDay","_dayNumber","dateIsEnabled","isEnabled","dayElement","$i","todayDateElem","tabIndex","isDateSelected","selectedDateElem","insertAdjacentHTML","focusOnDayElem","targetNode","focus","onMouseOver","getFirstAvailableDay","startMonth","endMonth","children","startIndex","endIndex","focusOnDay","current","offset","dayFocused","isInView","body","startElem","getNextAvailableDay","givenMonth","loopDelta","numMonthDays","changeMonth","buildDays","frag","createDocumentFragment","buildMonthDays","firstOfMonth","prevMonthDays","utils","getDaysInMonth","isMultiMonth","prevMonthDayClass","nextMonthDayClass","dayNumber","dayIndex","dayNum","dayContainer","monthsDropdownContainer","innerHTML","selected","buildMonths","monthNav","prevMonthNav","yearElements","monthElements","buildMonth","monthElement","container","monthNavFragment","selectedMonth","yearInput","tabindex","yearElement","getElementsByTagName","disabled","nextMonthNav","buildWeekdays","weekdayContainer","updateWeekdays","splice","isOffset","_hidePrevMonthArrow","_hideNextMonthArrow","updateNavigationCurrentMonth","isCalendarElem","documentClick","isOpen","eventTarget_1","isCalendarElement","lostFocus","relatedTarget","isIgnored","some","timeContainer","close","clear","newYear","isNewYear","newYearNum","dateToCheck","enable","array","parsed","from","to","onBlur","isInput","valueChanged","trimEnd","getDateStr","allowKeydown","allowInlineKeydown","keyCode","blur","open","isTimeObj","focusAndClose","selectDate","delta_1","ctrlKey","stopPropagation","currentYearElement","elems","concat","pluginElements","shiftKey","charAt","toLowerCase","cellClass","hoverDate","firstElementChild","initialDate","rangeStartDate","rangeEndDate","containsDisabled","minRange","maxRange","hoverableCells","rContainer","querySelectorAll","dayElem","ts","ts1","ts2","timestamp","outOfRange","onResize","positionCalendar","minMaxDateSetter","inverseDateObj","removeAttribute","getInputElem","querySelector","setupLocale","l10ns","userConfig","JSON","parse","stringify","dataset","customPositionElement","_positionElement","calendarHeight","reduce","acc","child","offsetHeight","calendarWidth","configPos","configPosVertical","configPosHorizontal","inputBounds","getBoundingClientRect","distanceFromBottom","innerHeight","bottom","showOnTop","top","pageYOffset","left","pageXOffset","isCenter","isRight","right","rightMost","centerMost","doc","getDocumentStyleSheet","editableSheet","styleSheets","sheet","cssRules","createStyleSheet","head","bodyWidth","centerIndex","centerStyle","insertRule","centerBefore","centerLeft","msMaxTouchPoints","findParent","condition","selectedDate","shouldChangeMonth","selectedIndex","sort","b","single","range","loadedPlugins","_bind","_setHoursFromDate","_positionCalendar","triggerChangeEvent","toInitial","mobileInput","_initialDate","_createElement","lastChild","insertBefore","_type","click","wasOpen","select","set","option","CALLBACKS","setSelectedDate","toggle","updatePositionElement","inputDate","dates","parseDateRules","rule","data","hooks","name","initEvent","specificFormat","dObj","mobileFormatStr","onMonthNavClick","isPrevMonth","isNextMonth","parseConfig","boolOpts","defineProperty","get","_enable","timeMode","defaultDateFormat","defaultAltFormat","_minDate","_maxDate","minMaxTimeSetter","_minTime","_maxTime","hook","pluginConf","setupInputs","nodeName","placeholder","required","nextSibling","setupDates","preloadedDate","yr","build","fragment","__hidePrevMonthArrow","__hideNextMonthArrow","innerContainer","buildWeeks","buildTime","separator","hourInput","minuteInput","military2ampm","secondInput","title","customAppend","appendTo","nodeType","bindEvents","evt","setupMobile","inputType","defaultValue","debouncedResize","ontouchstart","capture","_i","TypeError","_loop_1","source","keys","args_1","HTMLCollection","NodeList","selector","Node","en","localize","setDefaults","jQuery","fp_incr","$6JpON","$84b9dae4df53835d$var$addLeadingZero","padStart","countdownInterval","targetDate","datetimePicker","getElementById","startButton","timerDays","timerHours","timerMinutes","timerSeconds","countdownCompleted","startCountdown","Notify","warning","setInterval","currentDate","timeDifference","clearInterval","success","_convertMs","ms","minute","second"],"version":3,"file":"02-timer.addf5fa8.js.map"}