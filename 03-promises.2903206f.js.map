{"mappings":"ACcA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAAM,EAAO,SAAS,aAAa,CAAC,SAEpC,EAAK,gBAAgB,CAAC,SAAU,SAAU,CAAK,EAC7C,EAAM,cAAc,GAMpB,IAAK,IAJC,EAAa,SAAS,EAAK,QAAQ,CAAC,KAAQ,CAAC,KAAK,CAAE,IACpD,EAAY,SAAS,EAAK,QAAQ,CAAC,IAAO,CAAC,KAAK,CAAE,IAClD,EAAS,SAAS,EAAK,QAAQ,CAAC,MAAS,CAAC,KAAK,CAAE,IAE9C,EAAI,EAAG,EAAI,EAAQ,IAAK,CAC/B,IAAM,EAAe,EAAa,EAAI,EAEtC,AA3BN,CAAA,SAAuB,CAAQ,CAAE,CAAK,EACpC,OAAO,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,IAAM,EAAgB,KAAK,MAAM,GAAK,GAEtC,WAAW,WACL,EACF,EAAQ,CAAE,SAAA,EAAU,MAAA,CAAM,GAE1B,EAAO,CAAE,SAAA,EAAU,MAAA,CAAM,EAE7B,EAAG,EACL,EACF,CAAA,EAeoB,EAAI,EAAG,GAClB,IAAI,CAAC,SADR,CAAA,EACW,IAAA,EAAA,EAAA,QAAA,CAAU,EAAA,EAAA,KAAV,CACP,SAAS,MAAM,CAAC,OAAO,CACpB,uBAAqC,MAAA,CAAf,EAAS,QAAY,MAAA,CAAN,EAAM,MAEhD,GACC,KAAK,CAAC,SADP,CAAA,EACU,IAAA,EAAA,EAAA,QAAA,CAAU,EAAA,EAAA,KAAV,CACR,SAAS,MAAM,CAAC,OAAO,CACpB,sBAAoC,MAAA,CAAf,EAAS,QAAY,MAAA,CAAN,EAAM,MAE/C,EACJ,CACF,EACF","sources":["<anon>","src/js/03-promises.js"],"sourcesContent":["(function () {\nvar $ce04d3a99e08e73b$exports = {};\nfunction $ce04d3a99e08e73b$var$createPromise(position, delay) {\n    return new Promise(function(resolve, reject) {\n        var shouldResolve = Math.random() > 0.3;\n        setTimeout(function() {\n            if (shouldResolve) resolve({\n                position: position,\n                delay: delay\n            });\n            else reject({\n                position: position,\n                delay: delay\n            });\n        }, delay);\n    });\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var form = document.querySelector(\".form\");\n    form.addEventListener(\"submit\", function(event) {\n        event.preventDefault();\n        var firstDelay = parseInt(form.elements[\"delay\"].value, 10);\n        var delayStep = parseInt(form.elements[\"step\"].value, 10);\n        var amount = parseInt(form.elements[\"amount\"].value, 10);\n        for(var i = 0; i < amount; i++){\n            var currentDelay = firstDelay + i * delayStep;\n            $ce04d3a99e08e73b$var$createPromise(i + 1, currentDelay).then(function(param) {\n                var position = param.position, delay = param.delay;\n                Notiflix.Notify.success(\"\\u2705 Fulfilled promise \".concat(position, \" in \").concat(delay, \"ms\"));\n            }).catch(function(param) {\n                var position = param.position, delay = param.delay;\n                Notiflix.Notify.failure(\"\\u274C Rejected promise \".concat(position, \" in \").concat(delay, \"ms\"));\n            });\n        }\n    });\n});\n\n})();\n//# sourceMappingURL=03-promises.2903206f.js.map\n","function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const form = document.querySelector('.form');\n\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const firstDelay = parseInt(form.elements['delay'].value, 10);\n    const delayStep = parseInt(form.elements['step'].value, 10);\n    const amount = parseInt(form.elements['amount'].value, 10);\n\n    for (let i = 0; i < amount; i++) {\n      const currentDelay = firstDelay + i * delayStep;\n\n      createPromise(i + 1, currentDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n  });\n});\n"],"names":["document","addEventListener","form","querySelector","event","preventDefault","firstDelay","parseInt","elements","value","delayStep","amount","i","currentDelay","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","Notiflix","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.2903206f.js.map"}